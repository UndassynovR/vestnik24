(undo-tree-save-format-version . 1)
"0105fcb2595391e13aa654b6ab7149d76fe077cd"
[nil nil nil nil (26363 37413 829485 387000) 0 nil]
([nil nil ((1969 . 1972) (#("3" 0 1 (fontified t)) . -1969) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 1970 (t 26362 26199 117633 140000)) nil (26363 37413 829483 993000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 1972) (undo-tree-id3 . 1) (undo-tree-id4 . -1) (undo-tree-id5 . -1)) nil (26363 37413 829479 962000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1972) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) nil (26363 37413 829473 791000) 0 nil])
([nil nil ((1967 . 1970) (#("h" 0 1 (face (font-lock-keyword-face bold) fontified t)) . -1967) (undo-tree-id9 . -1) 1968 (1965 . 1968) (#("?" 0 1 (face (bold) fontified t)) . -1965) (undo-tree-id10 . -1) 1966 (1965 . 1966) (t 26363 37413 874521 432000)) nil (26363 37434 899448 474000) 0 nil])
([nil nil ((#("\\" 0 1 (face (font-lock-keyword-face bold) fontified t)) . 1965) (t 26363 37434 943897 541000)) nil (26363 37490 247627 110000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 1965)) nil (26363 37490 247626 353000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-keyword-face fontified t)) . 1965)) nil (26363 37490 247625 563000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-keyword-face fontified t)) . 1965) (undo-tree-id14 . -1)) nil (26363 37490 247624 543000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-keyword-face fontified t)) . 1965) (undo-tree-id13 . -1)) nil (26363 37490 247622 700000) 0 nil])
([nil nil ((1968 . 1973) (#("m" 0 1 (face (font-lock-keyword-face bold) fontified t)) . -1968) (undo-tree-id11 . -1) 1969 (1966 . 1969) (#("i" 0 1 (face (font-lock-keyword-face bold) fontified nil)) . -1966) (undo-tree-id12 . -1) (1965 . 1967)) nil (26363 38462 357489 128000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3975 . 3976) (nil fontified nil 3809 . 3976) (3809 . 3976) (t 26363 38463 283388 980000)) nil (26363 38519 371672 934000) 0 nil] [nil nil ((403 . 419) (#("i" 0 1 (fontified nil)) . -403) (undo-tree-id15 . -1) (401 . 404) (t 26363 37490 292258 385000)) ((#("[li" 0 2 (fontified nil) 2 3 (fontified nil)) . 401) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -3) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (403 . 404) (#("inktocpage=true]" 0 16 (fontified t)) . 403) (undo-tree-id130 . -15) (undo-tree-id131 . -3) (undo-tree-id132 . -15) (undo-tree-id133 . -15) (undo-tree-id134 . -15) (undo-tree-id135 . -15) (undo-tree-id136 . -15) (undo-tree-id137 . -15) (undo-tree-id138 . -15) (undo-tree-id139 . -15) (undo-tree-id140 . -15) (undo-tree-id141 . -15) (undo-tree-id142 . -15) (undo-tree-id143 . -15) (undo-tree-id144 . -15) (undo-tree-id145 . -15) (undo-tree-id146 . -15) (undo-tree-id147 . -15) (undo-tree-id148 . -15) (undo-tree-id149 . -15) (undo-tree-id150 . -15) (undo-tree-id151 . -15) (undo-tree-id152 . -15) (undo-tree-id153 . -15) (undo-tree-id154 . -15) (undo-tree-id155 . -15) (undo-tree-id156 . -15) (undo-tree-id157 . -15) (undo-tree-id158 . -15) (undo-tree-id159 . -15) (undo-tree-id160 . -15) (undo-tree-id161 . -15) (undo-tree-id162 . -15) (undo-tree-id163 . -15) (undo-tree-id164 . -15) (undo-tree-id165 . -15) (undo-tree-id166 . -15) (undo-tree-id167 . -15) (undo-tree-id168 . -15) (undo-tree-id169 . -15) (undo-tree-id170 . -15) (undo-tree-id171 . -15) (undo-tree-id172 . -15) (undo-tree-id173 . -15) (undo-tree-id174 . -15) (undo-tree-id175 . -15) (undo-tree-id176 . -15) (undo-tree-id177 . -15) (undo-tree-id178 . -15) (undo-tree-id179 . -15) (undo-tree-id180 . -15) (undo-tree-id181 . -15) (undo-tree-id182 . -15) (undo-tree-id183 . -15) (undo-tree-id184 . -15) (undo-tree-id185 . -15) (undo-tree-id186 . -15) (undo-tree-id187 . -15) (undo-tree-id188 . -15) (undo-tree-id189 . -15) (undo-tree-id190 . -15) (undo-tree-id191 . -15) (undo-tree-id192 . -15) (undo-tree-id193 . -15) (undo-tree-id194 . -15) (undo-tree-id195 . -15) (undo-tree-id196 . -15) (undo-tree-id197 . -15) (undo-tree-id198 . -15) (undo-tree-id199 . -15) (undo-tree-id200 . -15) (undo-tree-id201 . -15) (undo-tree-id202 . -15) (undo-tree-id203 . -15) (undo-tree-id204 . -15) (undo-tree-id205 . -15) (undo-tree-id206 . -15) (undo-tree-id207 . -15) (undo-tree-id208 . -15) (undo-tree-id209 . -15) (undo-tree-id210 . -15) (undo-tree-id211 . -15) (undo-tree-id212 . -15) (undo-tree-id213 . -15) (undo-tree-id214 . -15) (undo-tree-id215 . -15) (undo-tree-id216 . -15) (undo-tree-id217 . -15) (undo-tree-id218 . -15) (undo-tree-id219 . -15) (undo-tree-id220 . -15) (undo-tree-id221 . -15) (undo-tree-id222 . -15) (undo-tree-id223 . -15) (undo-tree-id224 . -15) (undo-tree-id225 . -15) (undo-tree-id226 . -15) (undo-tree-id227 . -15) (undo-tree-id228 . -15) (undo-tree-id229 . -15) (undo-tree-id230 . -15) (undo-tree-id231 . -15) (undo-tree-id232 . -15) (undo-tree-id233 . -15) (undo-tree-id234 . -15) (undo-tree-id235 . -15) (undo-tree-id236 . -15) (undo-tree-id237 . -15) (undo-tree-id238 . -15) (undo-tree-id239 . -15) (undo-tree-id240 . -15) (undo-tree-id241 . -15) (undo-tree-id242 . -15) (undo-tree-id243 . -15) (t 26363 38445 317256 217000)) (26363 38445 274759 25000) 0 nil])
([nil nil ((3976 . 3977) 3975) nil (26363 38563 538219 667000) 0 nil])
nil
([nil nil ((apply -9 3868 3987 undo--wrap-and-run-primitive-undo 3868 3987 ((3948 . 3951) (3909 . 3912) (3868 . 3871)))) ((apply 9 3868 3978 undo--wrap-and-run-primitive-undo 3868 3978 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 3868) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 3909) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 3948) 3859))) (26363 38564 402231 557000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 3859)) ((3859 . 3860)) (26363 38564 562022 27000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-keyword-face fontified t)) . 3859)) ((3859 . 3860) (t 26363 38538 414489 300000)) (26363 38565 58289 46000) 0 nil])
([nil nil ((3859 . 3861) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 3859) (undo-tree-id273 . -1) (3859 . 3860) (t 26363 38538 414489 300000)) ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 3859) (undo-tree-id245 . -1) (3859 . 3860) (#("it" 0 2 (face font-lock-keyword-face fontified t)) . 3859) (undo-tree-id246 . -1) (undo-tree-id248 . -1) (undo-tree-id250 . -1) (undo-tree-id252 . -1) (undo-tree-id254 . -1) (undo-tree-id256 . -1) (undo-tree-id258 . -1) (undo-tree-id260 . -1) (undo-tree-id262 . -1) (undo-tree-id264 . -1) (undo-tree-id266 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (t 26363 38519 431720 207000)) (26363 38565 474202 406000) 0 nil])
([nil nil ((apply -3 3830 3912 undo--wrap-and-run-primitive-undo 3830 3912 ((3830 . 3833) 3868))) nil (26363 38569 511465 284000) 0 nil])
([nil nil ((apply -3 3809 3874 undo--wrap-and-run-primitive-undo 3809 3874 ((3809 . 3812) 3830))) nil (26363 38601 444460 960000) 0 nil])
([nil nil ((apply 6 3809 3868 undo--wrap-and-run-primitive-undo 3809 3868 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3830) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3809) 3874))) nil (26363 38645 27089 789000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3867 . 3868) (#("
" 0 1 (fontified nil)) . -3905) (3867 . 3906) 3854) nil (26363 38645 27088 643000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . 3886) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1)) nil (26363 38645 27087 85000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-function-name-face fontified t)) . 3886) (undo-tree-id278 . -1) (undo-tree-id279 . -1)) nil (26363 39025 972941 525000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face fontified t)) . 3886)) ((3886 . 3887)) (26363 39026 564888 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t)) . 3886)) ((3886 . 3887)) (26363 39026 740827 888000) 0 nil])
([nil nil ((3886 . 3890)) ((#("part" 0 4 (face font-lock-function-name-face fontified t)) . 3886)) (26363 39026 884783 899000) 0 nil])
([nil nil ((3904 . 3905)) ((#("?" 0 1 (fontified t)) . 3904) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1)) (26363 39027 28916 512000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . 3904) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1)) ((3904 . 3905)) (26363 39027 220859 461000) 0 nil])
([nil nil ((3910 . 3913) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 3910) (3904 . 3911)) ((#("\\bfseri" 0 6 (face font-lock-keyword-face fontified nil) 6 7 (face font-lock-keyword-face fontified nil)) . 3904) (3910 . 3911) (#("ies" 0 3 (face font-lock-keyword-face fontified t)) . 3910)) (26363 39027 396927 963000) 0 nil])
([nil nil ((4263 . 4269) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 4263) (4260 . 4264)) ((#("\\noi" 0 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 4260) (4263 . 4264) (#("indent" 0 6 (face font-lock-keyword-face fontified t)) . 4263)) (26363 39030 197548 422000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4437 . 4438) (nil fontified nil 4092 . 4438) (4092 . 4438) (#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\protect\\numberline{}%
    #1 \\\\ % Authors
    \\protect\\numberline{}%
    \\noindent\\normalfont\\normalsize\\itshape #2 % Section Title
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 36 (fontified t) 36 38 (face font-lock-comment-face fontified t) 38 40 (fontified t) 40 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 52 (face font-lock-function-name-face fontified t) 52 53 (fontified t) 53 55 (face font-lock-comment-face fontified t) 55 57 (fontified t) 57 73 (face font-lock-keyword-face fontified t) 73 88 (fontified t) 88 90 (face font-lock-comment-face fontified t) 90 94 (fontified t) 94 102 (face font-lock-keyword-face fontified t) 102 113 (face font-lock-keyword-face fontified t) 113 115 (fontified t) 115 117 (face font-lock-comment-face fontified t) 117 123 (fontified t) 123 124 (fontified t) 124 125 (face font-lock-warning-face fontified t) 125 126 (face font-lock-warning-face fontified t) 126 127 (fontified t) 127 137 (face font-lock-comment-face fontified t) 137 141 (fontified t) 141 149 (face font-lock-keyword-face fontified t) 149 160 (face font-lock-keyword-face fontified t) 160 162 (fontified t) 162 164 (face font-lock-comment-face fontified t) 164 168 (fontified t) 168 171 (face font-lock-keyword-face fontified t) 171 177 (face font-lock-keyword-face fontified t) 177 178 (face font-lock-keyword-face fontified t) 178 188 (face font-lock-keyword-face fontified t) 188 199 (face font-lock-keyword-face fontified t) 199 207 (face font-lock-keyword-face fontified t) 207 211 (fontified t) 211 227 (face font-lock-comment-face fontified t) 227 230 (fontified t) 230 232 (face font-lock-comment-face fontified t) 232 234 (fontified t) 234 245 (face font-lock-keyword-face fontified t) 245 246 (fontified t) 246 252 (face font-lock-variable-name-face fontified t) 252 256 (fontified t) 256 258 (face font-lock-comment-face fontified t) 258 260 (fontified t) 260 271 (face font-lock-keyword-face fontified t) 271 272 (fontified t) 272 277 (face font-lock-variable-name-face fontified t) 277 281 (fontified t) 281 283 (face font-lock-comment-face fontified t) 283 285 (fontified t) 285 296 (face font-lock-keyword-face fontified t) 296 297 (fontified t) 297 305 (face font-lock-variable-name-face fontified t) 305 309 (fontified t) 309 311 (face font-lock-comment-face fontified t) 311 313 (fontified t)) . 4092) (undo-tree-id1013 . -313) (undo-tree-id1014 . 136) (undo-tree-id1015 . -312) (undo-tree-id1016 . -311) (undo-tree-id1017 . -313) (undo-tree-id1018 . -123) (undo-tree-id1019 . -123) (undo-tree-id1020 . -124) (undo-tree-id1021 . -313) (undo-tree-id1022 . -313) (undo-tree-id1023 . -313) (undo-tree-id1024 . -168) (undo-tree-id1025 . -168) (undo-tree-id1026 . -38) (undo-tree-id1027 . -38) (undo-tree-id1028 . -38) (undo-tree-id1029 . -38) (undo-tree-id1030 . -38) (undo-tree-id1031 . -38) (undo-tree-id1032 . -38) (undo-tree-id1033 . -38) (undo-tree-id1034 . -38) (undo-tree-id1035 . -38) (undo-tree-id1036 . -38) (undo-tree-id1037 . -38) (undo-tree-id1038 . -38) (undo-tree-id1039 . -38) (undo-tree-id1040 . -38) (undo-tree-id1041 . -38) (undo-tree-id1042 . -38) (undo-tree-id1043 . -55) (undo-tree-id1044 . -55) (undo-tree-id1045 . -55) (undo-tree-id1046 . -55) (undo-tree-id1047 . -55) (undo-tree-id1048 . -90) (undo-tree-id1049 . -90) (undo-tree-id1050 . -90) (undo-tree-id1051 . -90) (undo-tree-id1052 . -90) (undo-tree-id1053 . -117) (undo-tree-id1054 . -117) (undo-tree-id1055 . -117) (undo-tree-id1056 . -117) (undo-tree-id1057 . -117) (undo-tree-id1058 . -137) (undo-tree-id1059 . -137) (undo-tree-id1060 . -137) (undo-tree-id1061 . -137) (undo-tree-id1062 . -137) (undo-tree-id1063 . -164) (undo-tree-id1064 . -164) (undo-tree-id1065 . -164) (undo-tree-id1066 . -164) (undo-tree-id1067 . -164) (undo-tree-id1068 . -227) (undo-tree-id1069 . -227) (undo-tree-id1070 . -227) (undo-tree-id1071 . -227) (undo-tree-id1072 . -227) (undo-tree-id1073 . -232) (undo-tree-id1074 . -232) (undo-tree-id1075 . -232) (undo-tree-id1076 . -232) (undo-tree-id1077 . -232) (undo-tree-id1078 . -258) (undo-tree-id1079 . -258) (undo-tree-id1080 . -258) (undo-tree-id1081 . -258) (undo-tree-id1082 . -258) (undo-tree-id1083 . -283) (undo-tree-id1084 . -283) (undo-tree-id1085 . -283) (undo-tree-id1086 . -283) (undo-tree-id1087 . -283) (undo-tree-id1088 . -311) (undo-tree-id1089 . -311) (undo-tree-id1090 . -311) (undo-tree-id1091 . -311) (undo-tree-id1092 . -311) (undo-tree-id1093 . -311) (undo-tree-id1094 . -311) (undo-tree-id1095 . -311) (undo-tree-id1096 . -311) (undo-tree-id1097 . -311) (undo-tree-id1098 . -311) (undo-tree-id1099 . -311) (undo-tree-id1100 . -311) (undo-tree-id1101 . -311) (undo-tree-id1102 . -311) (undo-tree-id1103 . -311) (undo-tree-id1104 . -311) (undo-tree-id1105 . -311) (undo-tree-id1106 . -311) (undo-tree-id1107 . -311) (undo-tree-id1108 . -311) (undo-tree-id1109 . -311) (undo-tree-id1110 . -313) (undo-tree-id1111 . -313) 4405 (t 26363 39033 249808 384000)) nil (26363 39278 558285 543000) 0 nil] [nil nil ((nil rear-nonsticky nil 4397 . 4398) (nil fontified nil 4092 . 4103) (nil fontified nil 4103 . 4104) (nil fontified nil 4104 . 4123) (nil fontified nil 4123 . 4128) (nil fontified nil 4128 . 4130) (nil fontified nil 4130 . 4132) (nil fontified nil 4132 . 4141) (nil fontified nil 4141 . 4142) (nil fontified nil 4142 . 4144) (nil fontified nil 4144 . 4145) (nil fontified nil 4145 . 4147) (nil fontified nil 4147 . 4149) (nil fontified nil 4149 . 4165) (nil fontified nil 4165 . 4180) (nil fontified nil 4180 . 4182) (nil fontified nil 4182 . 4186) (nil fontified nil 4186 . 4193) (nil fontified nil 4193 . 4194) (nil fontified nil 4194 . 4196) (nil fontified nil 4196 . 4198) (nil fontified nil 4198 . 4200) (nil fontified nil 4200 . 4201) (nil fontified nil 4201 . 4247) (nil fontified nil 4247 . 4251) (nil fontified nil 4251 . 4252) (nil fontified nil 4252 . 4262) (nil fontified nil 4262 . 4273) (nil fontified nil 4273 . 4281) (nil fontified nil 4281 . 4285) (nil fontified nil 4285 . 4311) (nil fontified nil 4311 . 4312) (nil fontified nil 4312 . 4315) (nil fontified nil 4315 . 4316) (nil fontified nil 4316 . 4317) (nil fontified nil 4317 . 4319) (nil fontified nil 4319 . 4330) (nil fontified nil 4330 . 4331) (nil fontified nil 4331 . 4337) (nil fontified nil 4337 . 4341) (nil fontified nil 4341 . 4343) (nil fontified nil 4343 . 4345) (nil fontified nil 4345 . 4356) (nil fontified nil 4356 . 4357) (nil fontified nil 4357 . 4362) (nil fontified nil 4362 . 4366) (nil fontified nil 4366 . 4368) (nil fontified nil 4368 . 4370) (nil fontified nil 4370 . 4381) (nil fontified nil 4381 . 4382) (nil fontified nil 4382 . 4390) (nil fontified nil 4390 . 4394) (nil fontified nil 4394 . 4396) (4092 . 4398) (#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\protect\\numberline{}%
    #1 \\\\ % Authors
    \\protect\\numberline{}%
    \\noindent\\normalfont\\normalsize\\itshape #2 % Section Title
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 36 (fontified t) 36 38 (face font-lock-comment-face fontified t) 38 40 (fontified t) 40 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 52 (face font-lock-function-name-face fontified t) 52 53 (fontified t) 53 55 (face font-lock-comment-face fontified t) 55 57 (fontified t) 57 73 (face font-lock-keyword-face fontified t) 73 88 (fontified t) 88 90 (face font-lock-comment-face fontified t) 90 94 (fontified t) 94 102 (face font-lock-keyword-face fontified t) 102 113 (face font-lock-keyword-face fontified t) 113 115 (fontified t) 115 117 (face font-lock-comment-face fontified t) 117 123 (fontified t) 123 124 (fontified t) 124 125 (face font-lock-warning-face fontified t) 125 126 (face font-lock-warning-face fontified t) 126 127 (fontified t) 127 137 (face font-lock-comment-face fontified t) 137 141 (fontified t) 141 149 (face font-lock-keyword-face fontified t) 149 160 (face font-lock-keyword-face fontified t) 160 162 (fontified t) 162 164 (face font-lock-comment-face fontified t) 164 168 (fontified t) 168 171 (face font-lock-keyword-face fontified t) 171 177 (face font-lock-keyword-face fontified t) 177 178 (face font-lock-keyword-face fontified t) 178 188 (face font-lock-keyword-face fontified t) 188 199 (face font-lock-keyword-face fontified t) 199 207 (face font-lock-keyword-face fontified t) 207 211 (fontified t) 211 227 (face font-lock-comment-face fontified t) 227 230 (fontified t) 230 232 (face font-lock-comment-face fontified t) 232 234 (fontified t) 234 245 (face font-lock-keyword-face fontified t) 245 246 (fontified t) 246 252 (face font-lock-variable-name-face fontified t) 252 256 (fontified t) 256 258 (face font-lock-comment-face fontified t) 258 260 (fontified t) 260 271 (face font-lock-keyword-face fontified t) 271 272 (fontified t) 272 277 (face font-lock-variable-name-face fontified t) 277 281 (fontified t) 281 283 (face font-lock-comment-face fontified t) 283 285 (fontified t) 285 296 (face font-lock-keyword-face fontified t) 296 297 (fontified t) 297 305 (face font-lock-variable-name-face fontified t) 305 309 (fontified t) 309 311 (face font-lock-comment-face fontified t) 311 313 (fontified t)) . 4092) (undo-tree-id960 . 136) (undo-tree-id961 . -312) (undo-tree-id962 . -7) (undo-tree-id963 . -312) (undo-tree-id965 . -313) (undo-tree-id966 . -313) (undo-tree-id967 . -123) (undo-tree-id968 . -123) (undo-tree-id969 . -124) (undo-tree-id970 . -313) (undo-tree-id971 . -313) (undo-tree-id973 . -313) (undo-tree-id974 . -168) (undo-tree-id975 . -168) (undo-tree-id977 . -171) (undo-tree-id979 . -171) (undo-tree-id981 . -171) (undo-tree-id983 . -171) (undo-tree-id985 . -123) (undo-tree-id986 . -171) (undo-tree-id988 . -171)) ((4092 . 4405) (#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\textit{#1} \\\\ % Authors in italics (or any preferred style)
    \\normalfont\\normalsize\\itshape #2 % Section Title in italics
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified nil) 11 12 (fontified nil) 12 31 (face font-lock-function-name-face fontified nil) 31 36 (fontified nil) 36 38 (face font-lock-comment-face fontified nil) 38 40 (fontified nil) 40 49 (face font-lock-keyword-face fontified nil) 49 50 (fontified nil) 50 52 (face font-lock-function-name-face fontified nil) 52 53 (fontified nil) 53 55 (face font-lock-comment-face fontified nil) 55 57 (fontified nil) 57 73 (face font-lock-keyword-face fontified nil) 73 88 (fontified nil) 88 90 (face font-lock-comment-face fontified nil) 90 94 (fontified nil) 94 101 (face font-lock-keyword-face fontified nil) 101 102 (fontified nil) 102 104 (face (italic) fontified nil) 104 106 (fontified nil) 106 108 (face font-lock-warning-face fontified nil) 108 109 (fontified nil) 109 155 (face font-lock-comment-face fontified nil) 155 159 (fontified nil) 159 160 (face font-lock-keyword-face fontified nil) 160 170 (face font-lock-keyword-face fontified nil) 170 181 (face font-lock-keyword-face fontified nil) 181 189 (face font-lock-keyword-face fontified nil) 189 193 (fontified nil) 193 219 (face font-lock-comment-face fontified nil) 219 220 (face font-lock-comment-face fontified nil) 220 223 (fontified nil) 223 224 (face font-lock-comment-face fontified nil) 224 225 (face font-lock-comment-face fontified nil) 225 227 (fontified nil) 227 238 (face font-lock-keyword-face fontified nil) 238 239 (fontified nil) 239 245 (face font-lock-variable-name-face fontified nil) 245 249 (fontified nil) 249 251 (face font-lock-comment-face fontified nil) 251 253 (fontified nil) 253 264 (face font-lock-keyword-face fontified nil) 264 265 (fontified nil) 265 270 (face font-lock-variable-name-face fontified nil) 270 274 (fontified nil) 274 276 (face font-lock-comment-face fontified nil) 276 278 (fontified nil) 278 289 (face font-lock-keyword-face fontified nil) 289 290 (fontified nil) 290 298 (face font-lock-variable-name-face fontified nil) 298 302 (fontified nil) 302 304 (face font-lock-comment-face fontified nil) 304 305 (fontified nil) 305 306 (fontified nil rear-nonsticky nil)) . 4092) (undo-tree-id990 . -159) (undo-tree-id991 . 147) (undo-tree-id992 . -220) (undo-tree-id993 . -220) (undo-tree-id994 . -155) (undo-tree-id995 . 86) (undo-tree-id996 . -159) (undo-tree-id997 . -159) (undo-tree-id998 . -159) (undo-tree-id999 . -159) (undo-tree-id1000 . -159) (undo-tree-id1001 . -223) (undo-tree-id1002 . -223) (undo-tree-id1003 . -220) (undo-tree-id1004 . -220) (undo-tree-id1005 . -155) (undo-tree-id1006 . -155) (undo-tree-id1007 . -159) (undo-tree-id1008 . -159) (undo-tree-id1009 . -220) (undo-tree-id1010 . -220) (undo-tree-id1011 . -159) (undo-tree-id1012 . -223) (nil fontified t 4368 . 4370) (nil fontified t 4343 . 4345) (nil fontified t 4317 . 4319) (nil fontified t 4312 . 4315) (nil fontified t 4247 . 4251) (nil fontified t 4182 . 4186) (nil fontified t 4147 . 4149) (nil fontified t 4130 . 4132) (nil fontified t 4092 . 4103) (nil rear-nonsticky t 4397 . 4398)) (26363 39027 734563 618000) 0 nil] [nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 4216) (t 26363 38725 608923 408000)) ((4216 . 4217)) (26363 38859 785757 677000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4085 . 4086) (nil fontified nil 4033 . 4086) (4033 . 4086) (t 26363 39279 442638 983000)) nil (26363 39306 483349 133000) 0 nil] [nil nil ((nil rear-nonsticky nil 4013 . 4014) (nil fontified nil 3808 . 4014) (3808 . 4014) (t 26363 39083 681673 866000)) ((#("\\makeatletter
\\renewcommand\\tableofcontents{%
  \\null\\hfill\\textbf{\\Large\\contentsname}\\hfill\\null\\par
  \\@mkboth{\\MakeUppercase\\contentsname}{\\MakeUppercase\\contentsname}%
  \\@starttoc{toc}%
}
\\makeatother" 0 13 (face font-lock-keyword-face fontified nil) 13 14 (fontified nil) 14 27 (face font-lock-keyword-face fontified nil) 27 43 (face font-lock-function-name-face fontified nil) 43 44 (fontified nil) 44 46 (face font-lock-comment-face fontified nil) 46 48 (fontified nil) 48 53 (face font-lock-keyword-face fontified nil) 53 59 (face font-lock-keyword-face fontified nil) 59 66 (face font-lock-keyword-face fontified nil) 66 67 (fontified nil) 67 73 (face (font-lock-keyword-face bold) fontified nil) 73 86 (face (font-lock-keyword-face bold) fontified nil) 86 87 (fontified nil) 87 93 (face font-lock-keyword-face fontified nil) 93 98 (face font-lock-keyword-face fontified nil) 98 102 (face font-lock-keyword-face fontified nil) 102 105 (fontified nil) 105 113 (face font-lock-keyword-face fontified nil) 113 114 (fontified nil) 114 128 (face font-lock-keyword-face fontified nil) 128 141 (face font-lock-keyword-face fontified nil) 141 143 (fontified nil) 143 157 (face font-lock-keyword-face fontified nil) 157 170 (face font-lock-keyword-face fontified nil) 170 171 (fontified nil) 171 173 (face font-lock-comment-face fontified nil) 173 175 (fontified nil) 175 185 (face font-lock-keyword-face fontified nil) 185 190 (fontified nil) 190 192 (face font-lock-comment-face fontified nil) 192 194 (fontified nil) 194 205 (face font-lock-keyword-face fontified nil) 205 206 (face font-lock-keyword-face fontified nil rear-nonsticky nil)) . 3808) (undo-tree-id1267 . -205) (undo-tree-id1268 . -194) (undo-tree-id1269 . -205) (undo-tree-id1270 . -205) (undo-tree-id1271 . -205) (undo-tree-id1272 . -205) (undo-tree-id1273 . -205) (undo-tree-id1274 . -205) (undo-tree-id1275 . -205) (undo-tree-id1276 . -205) (undo-tree-id1277 . -205) (undo-tree-id1278 . -205) (undo-tree-id1279 . -205) (undo-tree-id1280 . -205) (undo-tree-id1281 . -205) (undo-tree-id1282 . -205) (undo-tree-id1283 . -205) (undo-tree-id1284 . -205) (undo-tree-id1285 . -205) (undo-tree-id1286 . -205) (undo-tree-id1287 . -205) (undo-tree-id1288 . -205) (undo-tree-id1289 . -205) (undo-tree-id1290 . -205) (nil fontified t 4000 . 4002) (nil fontified t 3998 . 4000) (nil fontified t 3993 . 3998) (nil fontified t 3983 . 3993) (nil fontified t 3981 . 3983) (nil fontified t 3979 . 3981) (nil fontified t 3978 . 3979) (nil fontified t 3965 . 3978) (nil fontified t 3951 . 3965) (nil fontified t 3949 . 3951) (nil fontified t 3936 . 3949) (nil fontified t 3922 . 3936) (nil fontified t 3921 . 3922) (nil fontified t 3913 . 3921) (nil fontified t 3910 . 3913) (nil fontified t 3906 . 3910) (nil fontified t 3901 . 3906) (nil fontified t 3895 . 3901) (nil fontified t 3894 . 3895) (nil fontified t 3881 . 3894) (nil fontified t 3875 . 3881) (nil fontified t 3874 . 3875) (nil fontified t 3867 . 3874) (nil fontified t 3861 . 3867) (nil fontified t 3856 . 3861) (nil fontified t 3854 . 3856) (nil fontified t 3852 . 3854) (nil fontified t 3851 . 3852) (nil fontified t 3835 . 3851) (nil fontified t 3822 . 3835) (nil fontified t 3821 . 3822) (nil fontified t 3808 . 3821) (nil rear-nonsticky t 4013 . 4014)) (26363 39277 821900 26000) 0 nil] [nil nil ((nil rear-nonsticky nil 3841 . 3842) (nil fontified nil 3808 . 3842) (3808 . 3842) (t 26363 39083 681673 866000)) ((#(" МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS}}" 0 33 (fontified nil) 33 34 (rear-nonsticky nil fontified nil)) . 3808) (undo-tree-id1124 . -33) (undo-tree-id1125 . -33) (undo-tree-id1126 . -33) (undo-tree-id1127 . -33) (nil rear-nonsticky t 3841 . 3842)) (26363 39261 727512 324000) 0 nil] [nil nil ((3425 . 3429) (t 26363 39083 681673 866000)) ((#("tttt" 0 4 (face font-lock-keyword-face fontified t)) . 3425) (undo-tree-id1121 . -3) (undo-tree-id1122 . -3) (undo-tree-id1123 . -3)) (26363 39258 591398 524000) 0 nil] [nil nil ((#(" МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS}}" 0 21 (fontified t) 21 34 (fontified t)) . 3425) (undo-tree-id1112 . -33) (undo-tree-id1113 . -1) (undo-tree-id1114 . 32) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -34) (undo-tree-id1120 . -34) (t 26363 39083 681673 866000)) ((3425 . 3459)) (26363 39257 83874 623000) 0 nil])
([nil nil ((4254 . 4260) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4254) (undo-tree-id680 . -1) (undo-tree-id682 . -1) (undo-tree-id684 . -1) (4251 . 4255) (t 26363 38907 56858 927000)) ((#("\\noi" 0 1 (face font-lock-keyword-face fontified nil) 1 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 4251) (undo-tree-id748 . 4) (undo-tree-id749 . -3) (undo-tree-id750 . -3) (undo-tree-id751 . -3) (undo-tree-id752 . -3) (undo-tree-id753 . -3) (4254 . 4255) (#("indent" 0 6 (face font-lock-keyword-face fontified t)) . 4254) (undo-tree-id754 . -5) (undo-tree-id755 . -5) (undo-tree-id756 . -5) (undo-tree-id757 . -5) (undo-tree-id758 . -5)) (26363 39009 925664 48000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 4216)) ((4216 . 4217)) (26363 38858 681806 284000) 0 nil])
([nil nil ((apply -18 3809 4082 undo--wrap-and-run-primitive-undo 3809 4082 ((4010 . 4013) (3968 . 3971) (3924 . 3927) (3874 . 3877) (3833 . 3836) (3809 . 3812)))) nil (26363 39348 912821 761000) 0 nil])
([nil nil ((4014 . 4015) 4013) ((#("
" 0 1 (fontified t)) . 4014)) (26363 39277 197992 186000) 0 nil])
nil
nil
nil
([nil nil ((4247 . 4267) (4321 . 4339) (t 26363 38931 689459 272000)) ((#("\\end{noparindent}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 18 (fontified t)) . 4321) (undo-tree-id699 . -17) (undo-tree-id700 . 18) (undo-tree-id701 . -7) (undo-tree-id702 . -7) (undo-tree-id703 . -7) (undo-tree-id704 . -7) (undo-tree-id705 . -7) (undo-tree-id706 . -7) (undo-tree-id707 . -7) (undo-tree-id708 . -7) (undo-tree-id709 . -7) (undo-tree-id710 . -7) (undo-tree-id711 . -7) (undo-tree-id712 . -7) (undo-tree-id713 . -7) (undo-tree-id714 . -7) (undo-tree-id715 . -7) (undo-tree-id716 . -7) (undo-tree-id717 . -7) (undo-tree-id718 . -7) (undo-tree-id719 . -7) (undo-tree-id720 . -7) (undo-tree-id721 . -7) (undo-tree-id722 . -7) (undo-tree-id723 . -7) (undo-tree-id724 . -7) (undo-tree-id725 . -7) (undo-tree-id726 . -7) (undo-tree-id727 . -7) (undo-tree-id728 . -7) (#("\\begin{noparindent}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 18 (face font-lock-function-name-face latex-env-pair t fontified t) 18 19 (latex-env-pair t fontified t) 19 20 (fontified t)) . 4247) (undo-tree-id729 . -20) (undo-tree-id730 . -7) (undo-tree-id731 . -7) (undo-tree-id732 . -7) (undo-tree-id733 . -7) (undo-tree-id734 . -7) (undo-tree-id735 . -7) (undo-tree-id736 . -7) (undo-tree-id737 . -7) (undo-tree-id738 . -7) (undo-tree-id739 . -7) (undo-tree-id740 . -7) (undo-tree-id741 . -7) (undo-tree-id742 . -7) (undo-tree-id743 . -7) (undo-tree-id744 . -7) (undo-tree-id745 . -7) (undo-tree-id746 . -20) (undo-tree-id747 . -7)) (26363 39009 525598 583000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4215) (undo-tree-id301 . -1)) ((4215 . 4216)) (26363 38858 378848 58000) 0 nil])
([nil nil ((3832 . 3833) (t 26363 39306 548515 742000) 3831) nil (26363 39361 647186 39000) 0 nil] [nil nil ((nil rear-nonsticky nil 3901 . 3902) (nil fontified nil 3832 . 3902) (3832 . 3902) 3831 (t 26363 39306 548515 742000)) ((#("\\cftsetindents{section}{0em}{2em}
\\cftsetindents{subsection}{0em}{2em}" 0 34 (face font-lock-comment-face fontified nil) 34 48 (face font-lock-keyword-face fontified nil) 48 69 (fontified nil) 69 70 (rear-nonsticky nil fontified nil)) . 3832) (undo-tree-id1291 . -69) (undo-tree-id1292 . -69) (undo-tree-id1293 . -34) (undo-tree-id1294 . -69) (undo-tree-id1295 . -69) (nil fontified t 3832 . 3866) (nil rear-nonsticky t 3901 . 3902)) (26363 39348 912559 341000) 0 nil])
([nil nil ((3807 . 3808) 3786) ((#("
" 0 1 (fontified t)) . 3807) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (t 26363 39269 402931 527000)) (26363 39269 350508 734000) 0 nil])
([nil nil ((4271 . 4275) (t 26363 38947 495655 572000)) ((#("\\par" 0 4 (face font-lock-keyword-face fontified t)) . 4271) (undo-tree-id698 . -4)) (26363 39009 269559 780000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4445 . 4446) (nil fontified nil 4092 . 4446) (4092 . 4446) (#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\protect\\numberline{}%
    #1 % Authors
    \\protect\\numberline{}%
    \\noindent\\normalfont\\normalsize\\itshape #2 % Section Title
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 36 (fontified t) 36 38 (face font-lock-comment-face fontified t) 38 40 (fontified t) 40 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 52 (face font-lock-function-name-face fontified t) 52 53 (fontified t) 53 55 (face font-lock-comment-face fontified t) 55 57 (fontified t) 57 73 (face font-lock-keyword-face fontified t) 73 88 (fontified t) 88 90 (face font-lock-comment-face fontified t) 90 94 (fontified t) 94 102 (face font-lock-keyword-face fontified t) 102 113 (face font-lock-keyword-face fontified t) 113 115 (fontified t) 115 117 (face font-lock-comment-face fontified t) 117 123 (fontified t) 123 124 (fontified t) 124 134 (face font-lock-comment-face fontified t) 134 138 (fontified t) 138 146 (face font-lock-keyword-face fontified t) 146 157 (face font-lock-keyword-face fontified t) 157 159 (fontified t) 159 161 (face font-lock-comment-face fontified t) 161 165 (fontified t) 165 174 (face font-lock-keyword-face fontified t) 174 175 (face font-lock-keyword-face fontified t) 175 185 (face font-lock-keyword-face fontified t) 185 196 (face font-lock-keyword-face fontified t) 196 204 (face font-lock-keyword-face fontified t) 204 208 (fontified t) 208 224 (face font-lock-comment-face fontified t) 224 227 (fontified t) 227 229 (face font-lock-comment-face fontified t) 229 231 (fontified t) 231 242 (face font-lock-keyword-face fontified t) 242 243 (fontified t) 243 249 (face font-lock-variable-name-face fontified t) 249 253 (fontified t) 253 255 (face font-lock-comment-face fontified t) 255 257 (fontified t) 257 268 (face font-lock-keyword-face fontified t) 268 269 (fontified t) 269 274 (face font-lock-variable-name-face fontified t) 274 278 (fontified t) 278 280 (face font-lock-comment-face fontified t) 280 282 (fontified t) 282 293 (face font-lock-keyword-face fontified t) 293 294 (fontified t) 294 302 (face font-lock-variable-name-face fontified t) 302 306 (fontified t) 306 308 (face font-lock-comment-face fontified t) 308 310 (fontified t)) . 4092) (undo-tree-id302 . -310) (undo-tree-id303 . 136) (undo-tree-id304 . -309) (undo-tree-id305 . -6) (undo-tree-id306 . -309) (undo-tree-id308 . -123) (undo-tree-id310 . -123) (undo-tree-id312 . -123) (undo-tree-id314 . -123) (undo-tree-id316 . -123) (undo-tree-id318 . -123) (undo-tree-id320 . -123) (undo-tree-id322 . -123) (undo-tree-id324 . -123) (undo-tree-id326 . -123) (undo-tree-id328 . -123) (undo-tree-id330 . -96) (undo-tree-id332 . -96) (undo-tree-id334 . -96) (undo-tree-id336 . -96) (undo-tree-id338 . -96) (undo-tree-id340 . -96) (undo-tree-id342 . -61) (undo-tree-id344 . -61) (undo-tree-id346 . -61) (undo-tree-id348 . -44) (undo-tree-id350 . -44) (undo-tree-id352 . -44) (undo-tree-id354 . -44) (undo-tree-id356 . -44) (undo-tree-id358 . -6) (undo-tree-id360 . -6) (undo-tree-id362 . -6) (undo-tree-id364 . -6) (undo-tree-id366 . -6) (undo-tree-id368 . -6) (undo-tree-id370 . -6) (undo-tree-id372 . -6) (undo-tree-id374 . -6) (undo-tree-id376 . -6) (undo-tree-id378 . -6) (undo-tree-id380 . -6) (undo-tree-id382 . -6) (undo-tree-id384 . -6) (undo-tree-id386 . -6) (undo-tree-id388 . -6) (undo-tree-id390 . -6) (undo-tree-id392 . -6) (undo-tree-id394 . -6) (undo-tree-id396 . -6) (undo-tree-id398 . -6) (undo-tree-id400 . -44) (undo-tree-id402 . -44) (undo-tree-id404 . -44) (undo-tree-id406 . -44) (undo-tree-id408 . -44) (undo-tree-id410 . -44) (undo-tree-id412 . -44) (undo-tree-id414 . -44) (undo-tree-id416 . -61) (undo-tree-id418 . -61) (undo-tree-id420 . -61) (undo-tree-id422 . -96) (undo-tree-id424 . -96) (undo-tree-id426 . -123) (undo-tree-id428 . -123) (undo-tree-id430 . -123) (undo-tree-id432 . -140) (undo-tree-id434 . -140) (undo-tree-id436 . -167) (undo-tree-id438 . -167) (undo-tree-id440 . -167) (undo-tree-id442 . -228) (undo-tree-id444 . -228) (undo-tree-id446 . -235) (undo-tree-id448 . -235) (undo-tree-id450 . -235) (undo-tree-id452 . -261) (undo-tree-id454 . -261) (undo-tree-id456 . -286) (undo-tree-id458 . -286) (undo-tree-id460 . -286) (undo-tree-id462 . -286) (undo-tree-id464 . -286) (undo-tree-id466 . -286) (undo-tree-id468 . -286) (undo-tree-id470 . -286) (undo-tree-id472 . -309) (undo-tree-id474 . -309) (undo-tree-id476 . -309) (undo-tree-id478 . -309) (undo-tree-id480 . -309) (undo-tree-id482 . -309) (undo-tree-id484 . -309) (undo-tree-id486 . -309) (undo-tree-id488 . -309) (undo-tree-id490 . -123) (undo-tree-id491 . -309) (undo-tree-id493 . -309) (undo-tree-id495 . -310) 4402 (t 26363 38771 897546 653000)) ((4092 . 4402) (#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\protect\\numberline{}%
    \\parbox{\\linewidth}{#1} \\\\ % Authors without introducing indent
    \\protect\\numberline{}%
    {\\normalfont\\normalsize\\itshape #2} % Section Title
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified nil) 11 12 (fontified nil) 12 31 (face font-lock-function-name-face fontified nil) 31 36 (fontified nil) 36 38 (face font-lock-comment-face fontified nil) 38 40 (fontified nil) 40 49 (face font-lock-keyword-face fontified nil) 49 50 (fontified nil) 50 52 (face font-lock-function-name-face fontified nil) 52 53 (fontified nil) 53 55 (face font-lock-comment-face fontified nil) 55 57 (fontified nil) 57 73 (face font-lock-keyword-face fontified nil) 73 88 (fontified nil) 88 90 (face font-lock-comment-face fontified nil) 90 94 (fontified nil) 94 102 (face font-lock-keyword-face fontified nil) 102 113 (face font-lock-keyword-face fontified nil) 113 115 (fontified nil) 115 117 (face font-lock-comment-face fontified nil) 117 121 (fontified nil) 121 128 (face font-lock-keyword-face fontified nil) 128 129 (fontified nil) 129 139 (face font-lock-keyword-face fontified nil) 139 145 (fontified nil) 145 146 (face font-lock-warning-face fontified nil) 146 147 (face font-lock-warning-face fontified nil) 147 148 (fontified nil) 148 149 (face font-lock-comment-face fontified nil) 149 150 (face font-lock-comment-face fontified nil) 150 185 (face font-lock-comment-face fontified nil) 185 189 (fontified nil) 189 197 (face font-lock-keyword-face fontified nil) 197 208 (face font-lock-keyword-face fontified nil) 208 210 (fontified nil) 210 212 (face font-lock-comment-face fontified nil) 212 217 (fontified nil) 217 228 (face font-lock-keyword-face fontified nil) 228 239 (face font-lock-keyword-face fontified nil) 239 247 (face font-lock-keyword-face fontified nil) 247 252 (fontified nil) 252 268 (face font-lock-comment-face fontified nil) 268 271 (fontified nil) 271 273 (face font-lock-comment-face fontified nil) 273 275 (fontified nil) 275 286 (face font-lock-keyword-face fontified nil) 286 287 (fontified nil) 287 293 (face font-lock-variable-name-face fontified nil) 293 297 (fontified nil) 297 299 (face font-lock-comment-face fontified nil) 299 301 (fontified nil) 301 312 (face font-lock-keyword-face fontified nil) 312 313 (fontified nil) 313 318 (face font-lock-variable-name-face fontified nil) 318 322 (fontified nil) 322 324 (face font-lock-comment-face fontified nil) 324 326 (fontified nil) 326 337 (face font-lock-keyword-face fontified nil) 337 338 (fontified nil) 338 346 (face font-lock-variable-name-face fontified nil) 346 350 (fontified nil) 350 352 (face font-lock-comment-face fontified nil) 352 353 (fontified nil) 353 354 (fontified nil rear-nonsticky nil)) . 4092) (undo-tree-id496 . -149) (undo-tree-id497 . -145) (undo-tree-id498 . -145) (undo-tree-id499 . -149) (undo-tree-id500 . 204) (undo-tree-id501 . -149) (undo-tree-id502 . -149) (undo-tree-id503 . -149) (undo-tree-id504 . -149) (undo-tree-id505 . -145) (undo-tree-id506 . -145) (undo-tree-id507 . -145) (undo-tree-id508 . -145) (undo-tree-id509 . -145) (undo-tree-id510 . -145) (undo-tree-id511 . -145) (undo-tree-id512 . -145) (undo-tree-id513 . -145) (undo-tree-id514 . -145) (undo-tree-id515 . -145) (undo-tree-id516 . -145) (undo-tree-id517 . -145) (undo-tree-id518 . -145) (undo-tree-id519 . -145) (undo-tree-id520 . -145) (undo-tree-id521 . -145) (undo-tree-id522 . -145) (undo-tree-id523 . -145) (undo-tree-id524 . -145) (undo-tree-id525 . -145) (undo-tree-id526 . -145) (undo-tree-id527 . -145) (undo-tree-id528 . -145) (undo-tree-id529 . -145) (undo-tree-id530 . -149) (undo-tree-id531 . -145) (undo-tree-id532 . -145) (undo-tree-id533 . -145) (undo-tree-id534 . -145) (undo-tree-id535 . -145) (undo-tree-id536 . -145) (undo-tree-id537 . -145) (undo-tree-id538 . -145) (undo-tree-id539 . -145) (undo-tree-id540 . -145) (undo-tree-id541 . -145) (undo-tree-id542 . -145) (undo-tree-id543 . -145) (undo-tree-id544 . -145) (undo-tree-id545 . -145) (undo-tree-id546 . -145) (undo-tree-id547 . -145) (undo-tree-id548 . -145) (undo-tree-id549 . -145) (undo-tree-id550 . -145) (undo-tree-id551 . -145) (undo-tree-id552 . -145) (undo-tree-id553 . -145) (undo-tree-id554 . -145) (undo-tree-id555 . -145) (undo-tree-id556 . -145) (undo-tree-id557 . -145) (undo-tree-id558 . -145) (undo-tree-id559 . -145) (undo-tree-id560 . -145) (undo-tree-id561 . -145) (undo-tree-id562 . -145) (undo-tree-id563 . -145) (undo-tree-id564 . -145) (undo-tree-id565 . -145) (undo-tree-id566 . -145) (undo-tree-id567 . -145) (undo-tree-id568 . -145) (undo-tree-id569 . -145) (undo-tree-id570 . -145) (undo-tree-id571 . -145) (undo-tree-id572 . -145) (undo-tree-id573 . -145) (undo-tree-id574 . -145) (undo-tree-id575 . -145) (undo-tree-id576 . -145) (undo-tree-id577 . -145) (undo-tree-id578 . -145) (undo-tree-id579 . -145) (undo-tree-id580 . -145) (undo-tree-id581 . -145) (undo-tree-id582 . -145) (undo-tree-id583 . -145) (undo-tree-id584 . -145) (undo-tree-id585 . -145) (undo-tree-id586 . -145) (undo-tree-id587 . -145) (undo-tree-id588 . -145) (undo-tree-id589 . -117) (undo-tree-id590 . -149) (undo-tree-id591 . -149) (undo-tree-id592 . -149) (undo-tree-id593 . -149) (undo-tree-id594 . -149) (undo-tree-id595 . -149) (undo-tree-id596 . -149) (undo-tree-id597 . -149) (undo-tree-id598 . -149) (undo-tree-id599 . -149) (undo-tree-id600 . -149) (undo-tree-id601 . -149) (undo-tree-id602 . -149) (undo-tree-id603 . -145) (undo-tree-id604 . -149) (undo-tree-id605 . -149) (undo-tree-id606 . -149) (undo-tree-id607 . -145) (undo-tree-id608 . -149) (nil fontified t 4442 . 4444) (nil fontified t 4438 . 4442) (nil fontified t 4430 . 4438) (nil fontified t 4429 . 4430) (nil fontified t 4418 . 4429) (nil fontified t 4416 . 4418) (nil fontified t 4414 . 4416) (nil fontified t 4410 . 4414) (nil fontified t 4405 . 4410) (nil fontified t 4404 . 4405) (nil fontified t 4393 . 4404) (nil fontified t 4391 . 4393) (nil fontified t 4389 . 4391) (nil fontified t 4385 . 4389) (nil fontified t 4379 . 4385) (nil fontified t 4378 . 4379) (nil fontified t 4367 . 4378) (nil fontified t 4365 . 4367) (nil fontified t 4363 . 4365) (nil fontified t 4360 . 4363) (nil fontified t 4344 . 4360) (nil fontified t 4339 . 4344) (nil fontified t 4331 . 4339) (nil fontified t 4320 . 4331) (nil fontified t 4309 . 4320) (nil fontified t 4304 . 4309) (nil fontified t 4302 . 4304) (nil fontified t 4300 . 4302) (nil fontified t 4289 . 4300) (nil fontified t 4281 . 4289) (nil fontified t 4277 . 4281) (nil fontified t 4242 . 4277) (nil fontified t 4241 . 4242) (nil fontified t 4240 . 4241) (nil fontified t 4239 . 4240) (nil fontified t 4238 . 4239) (nil fontified t 4237 . 4238) (nil fontified t 4231 . 4237) (nil fontified t 4221 . 4231) (nil fontified t 4220 . 4221) (nil fontified t 4213 . 4220) (nil fontified t 4209 . 4213) (nil fontified t 4207 . 4209) (nil fontified t 4205 . 4207) (nil fontified t 4194 . 4205) (nil fontified t 4186 . 4194) (nil fontified t 4182 . 4186) (nil fontified t 4180 . 4182) (nil fontified t 4165 . 4180) (nil fontified t 4149 . 4165) (nil fontified t 4147 . 4149) (nil fontified t 4145 . 4147) (nil fontified t 4144 . 4145) (nil fontified t 4142 . 4144) (nil fontified t 4141 . 4142) (nil fontified t 4132 . 4141) (nil fontified t 4130 . 4132) (nil fontified t 4128 . 4130) (nil fontified t 4123 . 4128) (nil fontified t 4104 . 4123) (nil fontified t 4103 . 4104) (nil fontified t 4092 . 4103) (nil rear-nonsticky t 4445 . 4446)) (26363 38858 105926 837000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3902 . 3903) (nil fontified nil 3833 . 3903) (3833 . 3903)) nil (26363 39361 647185 13000) 0 nil])
nil
nil
([nil nil ((#("\\begin{noparindent}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 18 (face font-lock-function-name-face latex-env-pair t fontified t) 18 19 (latex-env-pair t fontified t) 19 20 (fontified t)) . 4247) (undo-tree-id695 . -19) (undo-tree-id696 . -20) (undo-tree-id697 . -7) 4254) ((4247 . 4267)) (26363 39008 325716 659000) 0 nil])
([nil nil ((4241 . 4242) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 4241) (t 26363 38803 796597 786000)) ((4241 . 4242) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 4241)) (26363 38857 801173 836000) 0 nil])
([nil nil ((apply 3 3809 3830 undo--wrap-and-run-primitive-undo 3809 3830 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3809) (#<marker at 4527 in packages.tex> . -3) (#<marker at 4527 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 4299 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) 3833))) nil (26363 39361 647184 102000) 0 nil])
([nil nil ((#("\\end{noparindent}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 18 (fontified t)) . 4325) (undo-tree-id685 . -17) (undo-tree-id686 . 18) (undo-tree-id688 . -7) (undo-tree-id690 . -7) (undo-tree-id691 . -7) (undo-tree-id693 . -7) 4332) ((4325 . 4343) (t 26363 38989 444416 375000)) (26363 38989 400884 454000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 4237)) ((4237 . 4238)) (26363 38857 465777 968000) 0 nil])
([nil nil ((apply 3 3901 3939 undo--wrap-and-run-primitive-undo 3901 3939 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3901) 3942))) nil (26363 39361 647183 524000) 0 nil])
nil
([nil nil ((#("\\" 0 1 (fontified t)) . 4237)) ((4237 . 4238)) (26363 38857 98164 22000) 0 nil])
([nil nil ((apply 3 3939 3986 undo--wrap-and-run-primitive-undo 3939 3986 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3939) 3989))) nil (26363 39361 647182 879000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4237)) ((4237 . 4238) (t 26363 38841 15490 558000)) (26363 38840 978642 465000) 0 nil])
([nil nil ((#("\\usepackage[tocflat]{tocstyle}
" 0 11 (face font-lock-keyword-face fontified t) 11 21 (fontified t) 21 29 (face font-lock-builtin-face fontified t) 29 31 (fontified t)) . 4113) (undo-tree-id1299 . -30) (undo-tree-id1300 . -31)) nil (26363 39361 647182 25000) 0 nil])
nil
([nil nil ((#("\\usetocstyle{standard}
" 0 12 (face font-lock-keyword-face fontified t) 12 21 (fontified t) 21 22 (fontified t rear-nonsticky t) 22 23 (fontified t)) . 4113) (undo-tree-id1296 . -22) (undo-tree-id1297 . -22) (undo-tree-id1298 . -23)) nil (26363 39361 647178 580000) 0 nil])
([nil nil ((4112 . 4113) 4072) nil (26363 39361 647155 416000) 0 nil])
([nil nil ((#("%% %% \\renewcommand{\\cftfigfont}{Figure }
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 6 (face font-lock-comment-face fontified t) 6 19 (face font-lock-comment-face fontified t) 19 20 (face font-lock-comment-face fontified t) 20 31 (face font-lock-comment-face fontified t) 31 42 (face font-lock-comment-face fontified t)) . 4030) (undo-tree-id1309 . -41) (t 26363 39361 680242 145000)) nil (26363 39367 381011 270000) 0 nil])
([nil nil ((#("%% %% \\renewcommand{\\cfttabfont}{Table }
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 6 (face font-lock-comment-face fontified t) 6 19 (face font-lock-comment-face fontified t) 19 20 (face font-lock-comment-face fontified t) 20 31 (face font-lock-comment-face fontified t) 31 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t rear-nonsticky t) 40 41 (face font-lock-comment-face fontified t)) . 4030) (undo-tree-id1306 . -40) (undo-tree-id1307 . -24) (undo-tree-id1308 . -41)) nil (26363 39367 381008 324000) 0 nil])
([nil nil ((#("%% %% \\renewcommand{\\cftsecfont}{\\bfseries}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 6 (face font-lock-comment-face fontified t) 6 19 (face font-lock-comment-face fontified t) 19 20 (face font-lock-comment-face fontified t) 20 31 (face font-lock-comment-face fontified t) 31 33 (face font-lock-comment-face fontified t) 33 42 (face font-lock-comment-face fontified t) 42 44 (face font-lock-comment-face fontified t)) . 3986) (undo-tree-id1301 . -43) (undo-tree-id1302 . 44) (undo-tree-id1303 . -44) (undo-tree-id1304 . -44) (undo-tree-id1305 . -44)) nil (26363 39367 380999 997000) 0 nil])
([nil nil ((3830 . 3864) (t 26363 39367 410075 104000)) nil (26363 39407 763198 904000) 0 nil])
([nil nil ((3845 . 3852) (#("p" 0 1 (fontified t)) . -3845) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (#("a" 0 1 (fontified t)) . -3846) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (#("r" 0 1 (fontified t)) . -3847) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (#("t" 0 1 (fontified t)) . -3848) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) 3849 (3845 . 3849) (#("section" 0 7 (fontified t)) . 3845) (undo-tree-id1619 . -6) (undo-tree-id1620 . -7) (undo-tree-id1621 . -7)) nil (26363 39407 763186 599000) 0 nil])
([nil nil ((3830 . 3864) 3855 (t 26363 39407 815563 732000)) nil (26363 39432 80700 911000) 0 nil])
([nil nil ((3845 . 3849) (#("chapter" 0 7 (fontified t)) . 3845) (undo-tree-id1622 . -6) (undo-tree-id1623 . -7) (undo-tree-id1624 . -7)) nil (26363 39432 80696 438000) 0 nil])
([nil nil ((4050 . 4051) (t 26363 39432 141521 70000) 4022) nil (26363 39470 317669 586000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4148 . 4149) (nil fontified nil 4051 . 4149) (4051 . 4149)) nil (26363 39470 317664 965000) 0 nil])
([nil nil ((4050 . 4051) (t 26363 39470 357073 198000) 4048) nil (26363 39471 294262 519000) 0 nil])
([nil nil ((4089 . 4090) (#("L" 0 1 (face font-lock-keyword-face fontified t)) . 4089) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (t 26363 39471 347044 323000)) nil (26363 39482 129240 617000) 0 nil])
([nil nil ((#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\parbox{\\linewidth}{\\centering \\textit{#1}} \\\\ % Authors, centered with no extra indent
    \\noindent\\normalfont\\normalsize\\itshape #2 % Section Title without indent
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 36 (fontified t) 36 38 (face font-lock-comment-face fontified t) 38 40 (fontified t) 40 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 52 (face font-lock-function-name-face fontified t) 52 53 (fontified t) 53 55 (face font-lock-comment-face fontified t) 55 57 (fontified t) 57 73 (face font-lock-keyword-face fontified t) 73 88 (fontified t) 88 90 (face font-lock-comment-face fontified t) 90 94 (fontified t) 94 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 112 (face font-lock-keyword-face fontified t) 112 114 (fontified t) 114 124 (face font-lock-keyword-face fontified t) 124 125 (fontified t) 125 132 (face font-lock-keyword-face fontified t) 132 133 (fontified t) 133 135 (face (italic) fontified t) 135 138 (fontified t) 138 140 (face font-lock-warning-face fontified t) 140 141 (fontified t) 141 182 (face font-lock-comment-face fontified t) 182 186 (fontified t) 186 195 (face font-lock-keyword-face fontified t) 195 206 (face font-lock-keyword-face fontified t) 206 217 (face font-lock-keyword-face fontified t) 217 225 (face font-lock-keyword-face fontified t) 225 229 (fontified t) 229 260 (face font-lock-comment-face fontified t) 260 263 (fontified t) 263 265 (face font-lock-comment-face fontified t) 265 267 (fontified t) 267 278 (face font-lock-keyword-face fontified t) 278 279 (fontified t) 279 285 (face font-lock-variable-name-face fontified t) 285 289 (fontified t) 289 291 (face font-lock-comment-face fontified t) 291 293 (fontified t) 293 304 (face font-lock-keyword-face fontified t) 304 305 (fontified t) 305 310 (face font-lock-variable-name-face fontified t) 310 314 (fontified t) 314 316 (face font-lock-comment-face fontified t) 316 318 (fontified t) 318 329 (face font-lock-keyword-face fontified t) 329 330 (fontified t) 330 338 (face font-lock-variable-name-face fontified t) 338 342 (fontified t) 342 344 (face font-lock-comment-face fontified t) 344 345 (fontified t) 345 346 (fontified t rear-nonsticky t)) . 4210) (undo-tree-id1641 . -345) (undo-tree-id1642 . -345) (undo-tree-id1643 . -36) (undo-tree-id1644 . -345) (undo-tree-id1645 . -345) 4555 (t 26363 39482 173395 207000)) nil (26363 39513 611513 261000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4521 . 4522) (nil fontified nil 4210 . 4522) (4210 . 4522)) nil (26363 39513 611496 531000) 0 nil])
([nil nil ((4522 . 4523) 4521) nil (26363 39513 611491 56000) 0 nil])
([nil nil ((#("    \\protect\\numberline{}%
" 0 4 (fontified t) 4 12 (face font-lock-keyword-face fontified t) 12 23 (face font-lock-keyword-face fontified t) 23 25 (fontified t) 25 27 (face font-lock-comment-face fontified t)) . 4347) (undo-tree-id1646 . -26) (undo-tree-id1647 . -8) 4355 (t 26363 39513 659143 403000)) nil (26363 39537 385411 385000) 0 nil])
([nil nil ((#("    \\protect\\numberline{}%
" 0 4 (fontified t) 4 12 (face font-lock-keyword-face fontified t) 12 23 (face font-lock-keyword-face fontified t) 23 25 (fontified t) 25 27 (face font-lock-comment-face fontified t)) . 4300) (undo-tree-id1648 . -26) (undo-tree-id1649 . -8) (undo-tree-id1650 . -8) (undo-tree-id1651 . -8) (undo-tree-id1652 . -8) (undo-tree-id1653 . -8) (undo-tree-id1654 . -8) (undo-tree-id1655 . -8) (undo-tree-id1656 . -8) (undo-tree-id1657 . -8) (undo-tree-id1658 . -8) (undo-tree-id1659 . -8) (undo-tree-id1660 . -8) (undo-tree-id1661 . -8) (undo-tree-id1662 . -8) (undo-tree-id1663 . -8) (undo-tree-id1664 . -8) (undo-tree-id1665 . -8) (undo-tree-id1666 . -8) (undo-tree-id1667 . -8) (undo-tree-id1668 . -8) (undo-tree-id1669 . -8) (undo-tree-id1670 . -8) (undo-tree-id1671 . -8) (undo-tree-id1672 . -8) (undo-tree-id1673 . -8) (undo-tree-id1674 . -8) (undo-tree-id1675 . -8) (undo-tree-id1676 . -8) (undo-tree-id1677 . -8) (undo-tree-id1678 . -27) 4308 (t 26363 39537 418450 236000)) nil (26363 39538 876259 749000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 4324) (t 26363 39538 918406 471000)) nil (26363 39542 985028 102000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 4324)) nil (26363 39542 985026 728000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 4324)) nil (26363 39542 985025 777000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 4324)) nil (26363 39542 985025 60000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 4324)) nil (26363 39542 985024 392000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 4324)) nil (26363 39542 985023 309000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4324)) nil (26363 39542 985022 466000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 4324)) nil (26363 39542 985020 961000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 4324)) nil (26363 39542 985016 132000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4693 . 4694) (nil fontified nil 4460 . 4694) (4460 . 4694) (t 26363 39543 18286 849000)) nil (26363 40063 916414 453000) 0 nil])
([nil nil ((apply -30 4210 4527 undo--wrap-and-run-primitive-undo 4210 4527 ((4485 . 4488) (4454 . 4457) (4426 . 4429) (4397 . 4400) (4389 . 4392) (4332 . 4335) (4309 . 4312) (4271 . 4274) (4251 . 4254) (4210 . 4213)))) nil (26363 40063 916409 825000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4667 . 4668) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -4722) (4663 . 4723) 4634 (t 26363 40063 979735 62000)) nil (26363 40384 994080 917000) 0 nil])
([nil nil ((4700 . 4701) (#("2" 0 1 (fontified t)) . 4700) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1)) nil (26363 40384 994078 727000) 0 nil])
([nil nil ((#("    \\noindent \\textbf{Authors:} #1 % Display the authors above the section title
" 0 4 (fontified t) 4 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 21 (face font-lock-keyword-face fontified t) 21 22 (fontified t) 22 30 (face (bold) fontified t) 30 35 (fontified t) 35 81 (face font-lock-comment-face fontified t)) . 4527) (undo-tree-id1679 . -80) (undo-tree-id1680 . -36) (undo-tree-id1681 . -36) (undo-tree-id1682 . -36) (undo-tree-id1683 . -36) (undo-tree-id1684 . -36) (undo-tree-id1685 . -36) (undo-tree-id1686 . -36) (undo-tree-id1687 . -36) (undo-tree-id1688 . -36) (undo-tree-id1689 . -36) (undo-tree-id1690 . -36) (undo-tree-id1691 . -36) (undo-tree-id1692 . -36) (undo-tree-id1693 . -36) (undo-tree-id1694 . -36) (undo-tree-id1695 . -36) (undo-tree-id1696 . -36) (undo-tree-id1697 . -36) (undo-tree-id1698 . -36) (undo-tree-id1699 . -36) (undo-tree-id1700 . -36) (undo-tree-id1701 . -36) (undo-tree-id1702 . -36) (undo-tree-id1703 . -36) (undo-tree-id1704 . -36) (undo-tree-id1705 . -36) (undo-tree-id1706 . -36) (undo-tree-id1707 . -36) (undo-tree-id1708 . -36) (undo-tree-id1709 . -36) (undo-tree-id1710 . -36) (undo-tree-id1711 . -36) (undo-tree-id1712 . -36) (undo-tree-id1713 . -36) (undo-tree-id1714 . -36) (undo-tree-id1715 . -36) (undo-tree-id1716 . -36) (undo-tree-id1717 . -36) (undo-tree-id1718 . -36) (undo-tree-id1719 . -36) (undo-tree-id1720 . -36) (undo-tree-id1721 . -36) (undo-tree-id1722 . -36) (undo-tree-id1723 . -36) (undo-tree-id1724 . -36) (undo-tree-id1725 . -36) (undo-tree-id1726 . -36) (undo-tree-id1727 . -36) (undo-tree-id1728 . -36) (undo-tree-id1729 . -36) (undo-tree-id1730 . -36) (undo-tree-id1731 . -36) (undo-tree-id1732 . -36) (undo-tree-id1733 . -36) (undo-tree-id1734 . -36) (undo-tree-id1735 . -36) (undo-tree-id1736 . -36) (undo-tree-id1737 . -36) (undo-tree-id1738 . -36) (undo-tree-id1739 . -36) (undo-tree-id1740 . -36) (undo-tree-id1741 . -36) (undo-tree-id1742 . -36) (undo-tree-id1743 . -36) (undo-tree-id1744 . -36) (undo-tree-id1745 . -36) (undo-tree-id1746 . -36) (undo-tree-id1747 . -36) (undo-tree-id1748 . -36) (undo-tree-id1749 . -81) 4563) nil (26363 40566 762072 138000) 0 nil])
([nil nil ((4634 . 4639) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4634) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (4618 . 4635)) nil (26363 40611 954654 229000) 0 nil] [nil nil ((#("    \\addcontentsline{toc}{section}{#1} % Add it to the TOC
" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 20 (face font-lock-keyword-face fontified t) 20 36 (fontified t) 36 37 (fontified t) 37 39 (fontified t) 39 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t)) . 4583) (undo-tree-id1768 . -58) (undo-tree-id1769 . -36) (undo-tree-id1770 . -36) 4619 (t 26363 40385 43672 364000)) ((4583 . 4642)) (26363 40566 378146 123000) 0 nil])
([nil nil ((#("    \\addcontentsline{toc}{section}{\\protect\\numberline{}#1} % Add it to the TOC
" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 20 (face font-lock-keyword-face fontified t) 20 35 (fontified t) 35 43 (face font-lock-keyword-face fontified t) 43 54 (face font-lock-keyword-face fontified t) 54 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 60 (fontified t) 60 79 (face font-lock-comment-face fontified t) 79 80 (face font-lock-comment-face fontified t)) . 4583) (undo-tree-id1884 . -50) (undo-tree-id1885 . 24) (undo-tree-id1886 . -79) (undo-tree-id1887 . -55) (undo-tree-id1888 . -55) 4638 (t 26363 40612 13689 485000)) nil (26363 40739 355609 121000) 0 nil])
([nil nil ((4618 . 4619)) ((#("$" 0 1 (fontified t)) . 4618) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1)) (26363 40565 994054 251000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4586 . 4587) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -4641) (4582 . 4642) 4581) nil (26363 40739 355576 345000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . -4618) (undo-tree-id1767 . -1) 4619) ((4618 . 4619)) (26363 40565 593480 636000) 0 nil])
([nil nil ((#("    \\addcontentsline{toc}{section}{#2} % Add it to the TOC
" 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t) 4 20 (face font-lock-keyword-face fontified t) 20 35 (fontified t) 35 36 (fontified t) 36 39 (fontified t) 39 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t)) . 4583) (undo-tree-id1871 . -59) (undo-tree-id1872 . -58) (undo-tree-id1873 . -30) (undo-tree-id1874 . -30) (undo-tree-id1875 . -30) (undo-tree-id1876 . -30) (undo-tree-id1877 . -30) (undo-tree-id1878 . -59) (undo-tree-id1879 . -30) (undo-tree-id1880 . -30) (undo-tree-id1881 . -30) (undo-tree-id1882 . -30) (undo-tree-id1883 . -59) 4613) nil (26363 40739 355573 112000) 0 nil])
([nil nil ((4618 . 4619)) ((#("`" 0 1 (fontified t)) . 4618) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1)) (26363 40565 177793 231000) 0 nil])
([nil nil ((4618 . 4622)) nil (26363 40739 355546 529000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -4618) (undo-tree-id1766 . -1) 4619) ((4618 . 4619)) (26363 40564 745577 53000) 0 nil])
([nil nil ((4622 . 4629) (t 26363 40739 413287 911000)) nil (26363 40756 148670 638000) 0 nil])
([nil nil ((4618 . 4622)) ((#("#1\\\\" 0 2 (fontified t) 2 4 (face font-lock-warning-face fontified t)) . 4618) (undo-tree-id1771 . -3) (undo-tree-id1772 . -3) (undo-tree-id1773 . -3) (undo-tree-id1774 . -3) (undo-tree-id1775 . -3) (undo-tree-id1776 . -3) (undo-tree-id1777 . -3) (undo-tree-id1778 . -3) (undo-tree-id1779 . -3) (undo-tree-id1780 . -3) (undo-tree-id1781 . -3) (undo-tree-id1782 . -3) (undo-tree-id1783 . -3) (undo-tree-id1784 . -3) (undo-tree-id1785 . -3) (undo-tree-id1786 . -3) (undo-tree-id1787 . -3) (undo-tree-id1788 . -3) (undo-tree-id1789 . -3) (undo-tree-id1790 . -3) (undo-tree-id1791 . -3) (undo-tree-id1792 . -3) (undo-tree-id1793 . -3) (undo-tree-id1794 . -3) (undo-tree-id1795 . -3) (undo-tree-id1796 . -3) (undo-tree-id1797 . -3) (undo-tree-id1798 . -3) (undo-tree-id1799 . -3) (undo-tree-id1800 . -3) (undo-tree-id1801 . -3) (undo-tree-id1802 . -3) (undo-tree-id1803 . -3) (undo-tree-id1804 . -3) (undo-tree-id1805 . -3) (undo-tree-id1806 . -3) (undo-tree-id1807 . -3) (undo-tree-id1808 . -3) (undo-tree-id1809 . -3) (undo-tree-id1810 . -3) (undo-tree-id1811 . -3) (undo-tree-id1812 . -3) (undo-tree-id1813 . -3) (undo-tree-id1814 . -3) (undo-tree-id1815 . -3) (undo-tree-id1816 . -3) (undo-tree-id1817 . -3) (undo-tree-id1818 . -3) (undo-tree-id1819 . -3) (undo-tree-id1820 . -3) (undo-tree-id1821 . -3) (undo-tree-id1822 . -3) (undo-tree-id1823 . -3) (undo-tree-id1824 . -4) (undo-tree-id1825 . -3) (undo-tree-id1826 . -3) (undo-tree-id1827 . -3) (undo-tree-id1828 . -3) (t 26363 40503 610199 423000)) (26363 40503 545314 210000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified t)) . -4624) (undo-tree-id1892 . -1) (#("p" 0 1 (face font-lock-keyword-face fontified t)) . -4625) (undo-tree-id1893 . -1) (#("a" 0 1 (face font-lock-keyword-face fontified t)) . -4626) (undo-tree-id1894 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -4627) (undo-tree-id1895 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -4628) (undo-tree-id1896 . -1) 4629) nil (26363 40756 148668 908000) 0 nil])
nil
([nil nil ((4624 . 4628)) nil (26363 40756 148663 877000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-keyword-face fontified t)) . -4625) (undo-tree-id1889 . -1) (#("c" 0 1 (face font-lock-keyword-face fontified t)) . -4626) (undo-tree-id1890 . -1) (#("p" 0 1 (face font-lock-keyword-face fontified t)) . -4627) (undo-tree-id1891 . -1) 4628) nil (26363 40756 148661 835000) 0 nil])
([nil nil ((4625 . 4635)) nil (26363 40756 148646 823000) 0 nil])
([nil nil ((4632 . 4633) (t 26363 40756 186129 385000)) nil (26363 40934 932648 771000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 4632) (t 26363 40934 994217 543000)) nil (26363 40980 273847 730000) 0 nil])
([nil nil ((3924 . 3925) (#("2" 0 1 (fontified t)) . 3924)) nil (26363 40980 273842 613000) 0 nil])
([nil nil ((#("\\newcommand{\\sectionwithauthors}[2]{
    \\section*{#2} % Create the section without a number
    \\addcontentsline{toc}{section}{#1\\\\\\hspace{-2em}#2} % Add it to the TOC
}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 37 (fontified t) 37 41 (fontified t) 41 50 (face font-lock-keyword-face fontified t) 50 51 (fontified t) 51 53 (face font-lock-function-name-face fontified t) 53 55 (fontified t) 55 92 (face font-lock-comment-face fontified t) 92 93 (face font-lock-comment-face fontified t) 93 97 (fontified t) 97 113 (face font-lock-keyword-face fontified t) 113 130 (fontified t) 130 132 (face font-lock-warning-face fontified t) 132 139 (face font-lock-keyword-face fontified t) 139 145 (fontified t) 145 146 (fontified t) 146 149 (fontified t) 149 168 (face font-lock-comment-face fontified t) 168 169 (face font-lock-comment-face fontified t) 169 170 (fontified t rear-nonsticky t) 170 171 (fontified t)) . 4490) (undo-tree-id1897 . -170) (undo-tree-id1898 . -93) (undo-tree-id1899 . 29) (undo-tree-id1900 . -170) (undo-tree-id1901 . -29) (undo-tree-id1902 . -170) (undo-tree-id1903 . -120) (undo-tree-id1904 . -128) (undo-tree-id1905 . -128) (undo-tree-id1906 . -128) (undo-tree-id1907 . -128) (undo-tree-id1908 . -128) (undo-tree-id1909 . -128) (undo-tree-id1910 . -128) (undo-tree-id1911 . -128) (undo-tree-id1912 . -170) 4660 (t 26363 40980 329553 830000)) nil (26363 40996 133048 577000) 0 nil])
([nil nil ((apply 30 4210 4460 undo--wrap-and-run-primitive-undo 4210 4460 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4458) (#<marker at 4527 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#<marker at 5074 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4430) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#<marker at 5046 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4405) (#<marker at 5021 in packages.tex> . -1) (#<marker at 5021 in packages.tex> . -1) (#<marker at 5021 in packages.tex> . -1) (#<marker at 5021 in packages.tex> . -1) (#<marker at 5021 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4379) (#<marker at 4995 in packages.tex> . -1) (#<marker at 4995 in packages.tex> . -1) (#<marker at 4995 in packages.tex> . -1) (#<marker at 4995 in packages.tex> . -1) (#<marker at 4995 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4374) (#<marker at 4990 in packages.tex> . -1) (#<marker at 4990 in packages.tex> . -1) (#<marker at 4990 in packages.tex> . -1) (#<marker at 4990 in packages.tex> . -1) (#<marker at 4990 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4320) (#<marker at 4936 in packages.tex> . -1) (#<marker at 4936 in packages.tex> . -1) (#<marker at 4936 in packages.tex> . -1) (#<marker at 4936 in packages.tex> . -1) (#<marker at 4936 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4300) (#<marker at 4916 in packages.tex> . -1) (#<marker at 4916 in packages.tex> . -1) (#<marker at 4916 in packages.tex> . -1) (#<marker at 4916 in packages.tex> . -1) (#<marker at 4916 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4265) (#<marker at 4881 in packages.tex> . -1) (#<marker at 4881 in packages.tex> . -1) (#<marker at 4881 in packages.tex> . -1) (#<marker at 4881 in packages.tex> . -1) (#<marker at 4881 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4248) (#<marker at 4864 in packages.tex> . -1) (#<marker at 4864 in packages.tex> . -1) (#<marker at 4864 in packages.tex> . -1) (#<marker at 4864 in packages.tex> . -1) (#<marker at 4864 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4210) (#<marker at 4527 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4299 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1) (#<marker at 4826 in packages.tex> . -1)))) nil (26363 40996 133023 261000) 0 nil])
([nil nil ((4459 . 4460) (t 26363 40996 172422 213000) 4458) nil (26363 41066 172019 27000) 0 nil])
([nil nil ((3920 . 3922)) nil (26363 41068 963297 652000) 0 nil] [nil nil ((3925 . 3927) (t 26363 40998 429022 650000)) ((#(".5" 0 2 (fontified t)) . 3925) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (t 26363 41057 567286 784000)) (26363 41057 519872 416000) 0 nil])
([nil nil ((3829 . 3830) (t 26363 41068 993618 19000) 3828) nil (26363 41204 716737 240000) 0 nil])
nil
([nil nil ((3830 . 3831) 3830) nil (26363 41204 716735 581000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4018 . 4019) (nil fontified nil 3830 . 4019) (3830 . 4019)) nil (26363 41204 716731 153000) 0 nil])
([nil nil ((3917 . 3918) (t 26363 41204 776343 514000)) nil (26363 41217 656410 728000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3917) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1)) nil (26363 41217 656408 447000) 0 nil])
([nil nil ((3918 . 3920)) nil (26363 42065 711757 399000) 0 nil])
([nil nil ((apply -3 2971 3053 undo--wrap-and-run-primitive-undo 2971 3053 ((2971 . 2974) 2998))) nil (26363 42083 451367 76000) 0 nil] [nil nil ((nil rear-nonsticky nil 3572 . 3573) (nil fontified nil 3460 . 3573) (3460 . 3573) (t 26363 41217 699305 118000)) ((#("% Define a new command for the TOC title
\\newcommand{\\customcontentsname}{\\large МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS}" 0 2 (face font-lock-comment-delimiter-face fontified nil) 2 40 (face font-lock-comment-face fontified nil) 40 41 (face font-lock-comment-face fontified nil) 41 52 (face font-lock-keyword-face fontified nil) 52 53 (fontified nil) 53 72 (face font-lock-function-name-face fontified nil) 72 74 (fontified nil) 74 80 (face font-lock-keyword-face fontified nil) 80 112 (fontified nil) 112 113 (fontified nil rear-nonsticky nil)) . 3460) (undo-tree-id2180 . -40) (undo-tree-id2181 . -41) (undo-tree-id2182 . -41) (undo-tree-id2183 . -41) (undo-tree-id2184 . -41) (undo-tree-id2185 . -41) (undo-tree-id2186 . -41) (undo-tree-id2187 . -41) (undo-tree-id2188 . -41) (undo-tree-id2189 . -41) (undo-tree-id2190 . -41) (undo-tree-id2191 . -41) (undo-tree-id2192 . -41) (undo-tree-id2193 . -41) (undo-tree-id2194 . -41) (undo-tree-id2195 . -41) (undo-tree-id2196 . -41) (undo-tree-id2197 . -41) (undo-tree-id2198 . -41) (undo-tree-id2199 . -41) (undo-tree-id2200 . -41) (undo-tree-id2201 . -41) (undo-tree-id2202 . -41) (undo-tree-id2203 . -41) (undo-tree-id2204 . -41) (undo-tree-id2205 . -80) (undo-tree-id2206 . -80) (undo-tree-id2207 . -80) (undo-tree-id2208 . -80) (undo-tree-id2209 . -80) (undo-tree-id2210 . -80) (undo-tree-id2211 . -80) (undo-tree-id2212 . -80) (undo-tree-id2213 . -80) (undo-tree-id2214 . -80) (undo-tree-id2215 . -80) (undo-tree-id2216 . -80) (undo-tree-id2217 . -80) (undo-tree-id2218 . -80) (undo-tree-id2219 . -80) (undo-tree-id2220 . -41) (undo-tree-id2221 . -80) (undo-tree-id2222 . -113) (undo-tree-id2223 . -80) (nil fontified t 3500 . 3501) (nil fontified t 3462 . 3500) (nil fontified t 3460 . 3462) (nil rear-nonsticky t 3572 . 3573)) (26363 42064 464487 216000) 0 nil])
([nil nil ((#("%% \\fancyhead[LO]{\\rightmark}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 13 (face font-lock-comment-face fontified t) 13 18 (face font-lock-comment-face fontified t) 18 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t) 29 30 (face font-lock-comment-face fontified t)) . 2971) (undo-tree-id2224 . -29) (undo-tree-id2225 . -30) (t 26363 42083 507678 444000)) nil (26363 42127 211239 844000) 0 nil])
([nil nil ((#("\\addto\\captionsrussian{\\renewcommand{\\contentsname}{\\large МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS}}
" 0 6 (face font-lock-keyword-face fontified t) 6 22 (face font-lock-keyword-face fontified t) 22 23 (fontified t) 23 36 (face font-lock-keyword-face fontified t) 36 37 (fontified t) 37 50 (face font-lock-function-name-face fontified t) 50 52 (fontified t) 52 58 (face font-lock-keyword-face fontified t) 58 79 (fontified t) 79 92 (fontified t) 92 93 (fontified t)) . 3367) (undo-tree-id1959 . -93) (undo-tree-id1960 . -92) (undo-tree-id1961 . -57) (undo-tree-id1962 . -58) (undo-tree-id1963 . -93) (undo-tree-id1965 . -71) (undo-tree-id1967 . -71) (undo-tree-id1969 . -71) (undo-tree-id1971 . -71) (undo-tree-id1973 . -71) (undo-tree-id1975 . -71) (undo-tree-id1977 . -71) (undo-tree-id1979 . -71) (undo-tree-id1981 . -71) (undo-tree-id1983 . -71) (undo-tree-id1985 . -71) (undo-tree-id1987 . -71) (undo-tree-id1989 . -71) (undo-tree-id1990 . -71) (undo-tree-id1992 . -71) 3438) ((3367 . 3460)) (26363 42064 127974 181000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6750 . 6751) (nil fontified nil 6641 . 6751) (6641 . 6751) (t 26363 42127 263080 962000)) nil (26363 43234 518172 274000) 0 nil])
([nil nil ((3480 . 3481) 3447) ((#("
" 0 1 (fontified t)) . 3480) (undo-tree-id2179 . -1)) (26363 42063 781089 539000) 0 nil])
([nil nil ((6751 . 6752) 6750) nil (26363 43234 518167 708000) 0 nil])
([nil nil ((#("\\newcommand{\\customcontentsname}{\\large МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 33 (fontified t) 33 39 (face font-lock-keyword-face fontified t) 39 71 (fontified t) 71 72 (rear-nonsticky t fontified t) 72 73 (fontified t)) . 3408) (undo-tree-id2116 . -72) (undo-tree-id2118 . -73) (undo-tree-id2120 . -73) (undo-tree-id2122 . -73) (undo-tree-id2124 . -73) (undo-tree-id2126 . -73) (undo-tree-id2128 . -73) (undo-tree-id2130 . -73) (undo-tree-id2132 . -73) (undo-tree-id2134 . -73) (undo-tree-id2136 . -73) (undo-tree-id2138 . -73) (undo-tree-id2140 . -73) (undo-tree-id2142 . -73) (undo-tree-id2144 . -73) (undo-tree-id2146 . -73) (undo-tree-id2148 . -73) (undo-tree-id2150 . -73) (undo-tree-id2152 . -73) (undo-tree-id2154 . -73) (undo-tree-id2156 . -73) (undo-tree-id2158 . -73) (undo-tree-id2160 . -73) (undo-tree-id2162 . -73) (undo-tree-id2164 . -73) (undo-tree-id2166 . -73) (undo-tree-id2168 . -73) (undo-tree-id2170 . -73) (undo-tree-id2172 . -73) (undo-tree-id2174 . -73) (undo-tree-id2176 . -73) (undo-tree-id2177 . -73) (t 26363 42000 663404 557000)) ((3408 . 3481)) (26363 42063 567987 102000) 0 nil] [nil nil ((apply -3 3408 3485 undo--wrap-and-run-primitive-undo 3408 3485 ((3408 . 3411) 3481))) ((apply 3 3408 3482 undo--wrap-and-run-primitive-undo 3408 3482 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 3408)))) (26363 41988 674197 554000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3891) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (t 26363 43234 564348 471000)) nil (26364 62102 370433 242000) 0 nil])
([nil nil ((#("% Define a new command for the TOC title
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 40 (face font-lock-comment-face fontified t) 40 41 (face font-lock-comment-face fontified t)) . 3367) (undo-tree-id1994 . -41) (undo-tree-id1995 . -40) (undo-tree-id1996 . -41) (undo-tree-id1997 . -41) (undo-tree-id1998 . -41) (undo-tree-id1999 . -41) (undo-tree-id2000 . -41) (undo-tree-id2001 . -41) (undo-tree-id2002 . -41) (undo-tree-id2004 . -41) (undo-tree-id2006 . -41) (undo-tree-id2008 . -41) (undo-tree-id2010 . -41) (undo-tree-id2012 . -41) (undo-tree-id2014 . -41) (undo-tree-id2016 . -41) (undo-tree-id2018 . -41) (undo-tree-id2020 . -41) (undo-tree-id2022 . -41) (undo-tree-id2024 . -41) (undo-tree-id2026 . -41) (undo-tree-id2028 . -41) (undo-tree-id2030 . -41) (undo-tree-id2032 . -41) (undo-tree-id2034 . -41) (undo-tree-id2036 . -41) (undo-tree-id2038 . -41) (undo-tree-id2040 . -41) (undo-tree-id2042 . -41) (undo-tree-id2044 . -41) (undo-tree-id2046 . -41) (undo-tree-id2048 . -41) (undo-tree-id2050 . -41) (undo-tree-id2052 . -41) (undo-tree-id2054 . -41) (undo-tree-id2056 . -41) (undo-tree-id2058 . -41) (undo-tree-id2060 . -41) (undo-tree-id2062 . -41) (undo-tree-id2064 . -41) (undo-tree-id2066 . -41) (undo-tree-id2068 . -41) (undo-tree-id2070 . -41) (undo-tree-id2072 . -41) (undo-tree-id2074 . -41) (undo-tree-id2076 . -41) (undo-tree-id2078 . -41) (undo-tree-id2080 . -41) (undo-tree-id2082 . -41) (undo-tree-id2084 . -41) (undo-tree-id2086 . -41) (undo-tree-id2088 . -41) (undo-tree-id2090 . -41) (undo-tree-id2092 . -41) (undo-tree-id2094 . -41) (undo-tree-id2096 . -41) (undo-tree-id2098 . -41) (undo-tree-id2100 . -41) (undo-tree-id2102 . -41) (undo-tree-id2104 . -41) (undo-tree-id2106 . -41) (undo-tree-id2108 . -41) (undo-tree-id2110 . -41) (undo-tree-id2112 . -41) (undo-tree-id2114 . -41)) ((3367 . 3408) (t 26363 42012 686390 687000)) (26363 42012 661070 386000) 0 nil])
nil
([nil nil ((#("5" 0 1 (fontified t)) . 3891) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1)) nil (26364 62102 370430 580000) 0 nil])
nil
([nil nil ((3890 . 3891) (#("1" 0 1 (fontified t)) . 3890) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1)) nil (26364 62102 370423 880000) 0 nil])
([nil nil ((nil fontified t 3890 . 3891) (t 26364 62102 397074 410000) (#("2" 0 1 (fontified t)) . -3890) (t 26364 62102 397074 410000) (3891 . 3892) 3890 (t 26364 62102 397074 410000)) nil (26364 62117 210417 77000) 0 nil])
([nil nil ((nil fontified nil 3889 . 3890) (#("1" 0 1 (fontified nil)) . 3889) (3890 . 3891) (#("-" 0 1 (fontified t)) . 3889) (3890 . 3890)) nil (26364 62117 210415 359000) 0 nil])
([nil nil ((nil fontified nil 3890 . 3891) (#("0" 0 1 (fontified nil)) . 3890) (3891 . 3892) ("" . 3889) (3889 . 3890)) nil (26364 62117 210413 211000) 0 nil])
([nil nil ((nil fontified t 3890 . 3891) (#("1" 0 1 (fontified t)) . -3890) (3891 . 3892) 3890) nil (26364 62117 210410 802000) 0 nil])
([nil nil ((nil fontified t 3890 . 3891) (#("2" 0 1 (fontified t)) . -3890) (3891 . 3892) 3890) nil (26364 62117 210405 400000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3959) (t 26364 62117 266647 807000)) nil (26364 62138 676327 367000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 3959) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1)) nil (26364 62141 3742 403000) 0 nil] [nil nil ((#("5" 0 1 (fontified t)) . 3959)) ((3959 . 3960)) (26364 62138 228706 650000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 3959) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1)) nil (26364 62141 3739 263000) 0 nil])
([nil nil ((3958 . 3959) (#("0" 0 1 (fontified t)) . 3958) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1)) ((3958 . 3959) (#("1" 0 1 (fontified t)) . 3958) (t 26364 62128 56338 190000)) (26364 62128 33216 528000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 3959) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1)) nil (26364 62141 3731 523000) 0 nil])
nil
([nil nil ((3959 . 3961) (t 26364 62141 39298 898000)) nil (26364 62151 483338 263000) 0 nil])
([nil nil ((3958 . 3960) (#("0" 0 1 (fontified t)) . -3958) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) 3959 (t 26364 62151 532331 14000)) nil (26364 62168 590693 178000) 0 nil])
([nil nil ((#("cm" 0 2 (fontified t)) . 3960) (undo-tree-id2309 . 2) (undo-tree-id2310 . -1) (undo-tree-id2311 . -2) (undo-tree-id2312 . -2) (undo-tree-id2313 . -2)) nil (26364 62168 590687 786000) 0 nil])
([nil nil ((3960 . 3962)) nil (26364 62168 590670 62000) 0 nil])
([nil nil ((3959 . 3960) (#("1" 0 1 (fontified t)) . 3959) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (t 26364 62168 645172 995000)) nil (26364 62460 427822 64000) 0 nil])
([nil nil ((4216 . 4218) (4215 . 4216) (t 26364 62461 833402 338000) 4169) nil (26364 62759 236027 784000) 0 nil] [nil nil ((nil rear-nonsticky nil 4709 . 4710) (nil fontified nil 4216 . 4710) (4216 . 4710)) ((#("\\makeatletter
\\renewcommand*\\l@part[2]{%
  \\ifnum \\c@tocdepth >-2\\relax
    \\addpenalty{-\\@highpenalty}%
    \\addvspace{2.25em \\@plus\\p@}%
    \\setlength\\@tempdima{3em}%
    \\begingroup
      \\parindent \\z@ \\rightskip \\@pnumwidth
      \\parfillskip -\\@pnumwidth
      {\\leavevmode
       \\hspace*{\\fill}\\centering\\large\\bfseries #1\\hspace*{\\fill}\\llap{#2}}\\par
       \\nobreak
         \\global\\@nobreaktrue
         \\everypar{\\global\\@nobreakfalse\\everypar{}}%
    \\endgroup
  \\fi}
\\makeatother" 0 13 (face font-lock-keyword-face fontified nil) 13 14 (fontified nil) 14 28 (face font-lock-keyword-face fontified nil) 28 35 (face font-lock-function-name-face fontified nil) 35 39 (fontified nil) 39 41 (face font-lock-comment-face fontified nil) 41 43 (fontified nil) 43 49 (face font-lock-keyword-face fontified nil) 49 50 (fontified nil) 50 61 (face font-lock-keyword-face fontified nil) 61 65 (fontified nil) 65 71 (face font-lock-keyword-face fontified nil) 71 76 (fontified nil) 76 87 (face font-lock-keyword-face fontified nil) 87 89 (fontified nil) 89 102 (face font-lock-keyword-face fontified nil) 102 103 (fontified nil) 103 105 (face font-lock-comment-face fontified nil) 105 109 (fontified nil) 109 119 (face font-lock-keyword-face fontified nil) 119 127 (fontified nil) 127 133 (face font-lock-keyword-face fontified nil) 133 136 (face font-lock-keyword-face fontified nil) 136 137 (fontified nil) 137 139 (face font-lock-comment-face fontified nil) 139 143 (fontified nil) 143 153 (face font-lock-keyword-face fontified nil) 153 163 (face font-lock-keyword-face fontified nil) 163 168 (fontified nil) 168 170 (face font-lock-comment-face fontified nil) 170 174 (fontified nil) 174 185 (face font-lock-keyword-face fontified nil) 185 192 (fontified nil) 192 202 (face font-lock-keyword-face fontified nil) 202 203 (fontified nil) 203 206 (face font-lock-keyword-face fontified nil) 206 207 (fontified nil) 207 217 (face font-lock-keyword-face fontified nil) 217 218 (fontified nil) 218 229 (face font-lock-keyword-face fontified nil) 229 236 (fontified nil) 236 248 (face font-lock-keyword-face fontified nil) 248 250 (fontified nil) 250 261 (face font-lock-keyword-face fontified nil) 261 269 (fontified nil) 269 280 (face font-lock-keyword-face fontified nil) 280 288 (fontified nil) 288 296 (face font-lock-keyword-face fontified nil) 296 297 (fontified nil) 297 302 (face font-lock-keyword-face fontified nil) 302 303 (fontified nil) 303 313 (face font-lock-keyword-face fontified nil) 313 319 (face font-lock-keyword-face fontified nil) 319 328 (face font-lock-keyword-face fontified nil) 328 331 (face (bold) fontified nil) 331 339 (face (font-lock-keyword-face bold) fontified nil) 339 340 (face (bold) fontified nil) 340 345 (face (font-lock-keyword-face bold) fontified nil) 345 346 (face (bold) fontified nil) 346 351 (face (font-lock-keyword-face bold) fontified nil) 351 355 (face (bold) fontified nil) 355 356 (fontified nil) 356 360 (face font-lock-keyword-face fontified nil) 360 368 (fontified nil) 368 376 (face font-lock-keyword-face fontified nil) 376 386 (fontified nil) 386 393 (face font-lock-keyword-face fontified nil) 393 406 (face font-lock-keyword-face fontified nil) 406 416 (fontified nil) 416 425 (face font-lock-keyword-face fontified nil) 425 426 (fontified nil) 426 433 (face font-lock-keyword-face fontified nil) 433 447 (face font-lock-keyword-face fontified nil) 447 456 (face font-lock-keyword-face fontified nil) 456 459 (fontified nil) 459 461 (face font-lock-comment-face fontified nil) 461 465 (fontified nil) 465 474 (face font-lock-keyword-face fontified nil) 474 477 (fontified nil) 477 480 (face font-lock-keyword-face fontified nil) 480 482 (fontified nil) 482 493 (face font-lock-keyword-face fontified nil) 493 494 (face font-lock-keyword-face rear-nonsticky nil fontified nil)) . 4216) (undo-tree-id2528 . -493) (undo-tree-id2529 . -493) (undo-tree-id2530 . -482) (undo-tree-id2531 . -493) (undo-tree-id2532 . -493) (undo-tree-id2533 . -493) (undo-tree-id2534 . -493) (undo-tree-id2535 . -493) (undo-tree-id2536 . -493) (undo-tree-id2537 . -493) (undo-tree-id2538 . -493) (undo-tree-id2539 . -493) (undo-tree-id2540 . -493) (undo-tree-id2541 . -493) (undo-tree-id2542 . -493) (undo-tree-id2543 . -493) (undo-tree-id2544 . -493) (undo-tree-id2545 . -493) (undo-tree-id2546 . -493) (undo-tree-id2547 . -493) (undo-tree-id2548 . -493) (undo-tree-id2549 . -493) (undo-tree-id2550 . -493) (undo-tree-id2551 . -493) (undo-tree-id2552 . -493) (undo-tree-id2553 . -493) (undo-tree-id2554 . -493) (undo-tree-id2555 . -493) (undo-tree-id2556 . -493) (undo-tree-id2557 . -493) (undo-tree-id2558 . -493) (undo-tree-id2559 . -493) (undo-tree-id2560 . -493) (undo-tree-id2561 . -493) (undo-tree-id2562 . -493) (undo-tree-id2563 . -493) (undo-tree-id2564 . -493) (undo-tree-id2565 . -493) (undo-tree-id2566 . -493) (undo-tree-id2567 . -493) (undo-tree-id2568 . -493) (undo-tree-id2569 . -493) (undo-tree-id2570 . -493) (undo-tree-id2571 . -493) (undo-tree-id2572 . -493) (undo-tree-id2573 . -493) (undo-tree-id2574 . -493) (undo-tree-id2575 . -493) (undo-tree-id2576 . -493) (undo-tree-id2577 . -493) (undo-tree-id2578 . -493) (undo-tree-id2579 . -493) (undo-tree-id2580 . -493) (undo-tree-id2581 . -493) (undo-tree-id2582 . -493) (undo-tree-id2583 . -493) (undo-tree-id2584 . -493) (undo-tree-id2585 . -493) (undo-tree-id2586 . -493) (undo-tree-id2587 . -493) (undo-tree-id2588 . -493) (undo-tree-id2589 . -493) (undo-tree-id2590 . -493) (undo-tree-id2591 . -493) (undo-tree-id2592 . -493) (undo-tree-id2593 . -493) (undo-tree-id2594 . -493) (undo-tree-id2595 . -493) (undo-tree-id2596 . -493) (undo-tree-id2597 . -493) (undo-tree-id2598 . -493) (undo-tree-id2599 . -493) (undo-tree-id2600 . -493) (undo-tree-id2601 . -493) (undo-tree-id2602 . -493) (undo-tree-id2603 . -493) (undo-tree-id2604 . -493) (undo-tree-id2605 . -493) (undo-tree-id2606 . -493) (undo-tree-id2607 . -493) (undo-tree-id2608 . -493) (undo-tree-id2609 . -493) (undo-tree-id2610 . -493) (undo-tree-id2611 . -493) (undo-tree-id2612 . -493) (undo-tree-id2613 . -493) (undo-tree-id2614 . -493) (undo-tree-id2615 . -493) (undo-tree-id2616 . -493) (undo-tree-id2617 . -493) (undo-tree-id2618 . -493) (undo-tree-id2619 . -493) (undo-tree-id2620 . -493) (undo-tree-id2621 . -493) (undo-tree-id2622 . -493) (undo-tree-id2623 . -493) (undo-tree-id2624 . -493) (undo-tree-id2625 . -493) (undo-tree-id2626 . -493) (undo-tree-id2627 . -493) (undo-tree-id2628 . -493) (undo-tree-id2629 . -493) (undo-tree-id2630 . -493) (undo-tree-id2631 . -493) (undo-tree-id2632 . -493) (undo-tree-id2633 . -493) (undo-tree-id2634 . -493) (undo-tree-id2635 . -493) (undo-tree-id2636 . -493) (undo-tree-id2637 . -493) (undo-tree-id2638 . -493) (undo-tree-id2639 . -493) (undo-tree-id2640 . -493) (undo-tree-id2641 . -493) (undo-tree-id2642 . -493) (undo-tree-id2643 . -493) (undo-tree-id2644 . -493) (undo-tree-id2645 . -493) (nil fontified t 4696 . 4698) (nil fontified t 4693 . 4696) (nil fontified t 4690 . 4693) (nil fontified t 4681 . 4690) (nil fontified t 4677 . 4681) (nil fontified t 4675 . 4677) (nil fontified t 4672 . 4675) (nil fontified t 4663 . 4672) (nil fontified t 4649 . 4663) (nil fontified t 4642 . 4649) (nil fontified t 4641 . 4642) (nil fontified t 4632 . 4641) (nil fontified t 4622 . 4632) (nil fontified t 4609 . 4622) (nil fontified t 4602 . 4609) (nil fontified t 4592 . 4602) (nil fontified t 4584 . 4592) (nil fontified t 4576 . 4584) (nil fontified t 4572 . 4576) (nil fontified t 4571 . 4572) (nil fontified t 4567 . 4571) (nil fontified t 4562 . 4567) (nil fontified t 4561 . 4562) (nil fontified t 4556 . 4561) (nil fontified t 4555 . 4556) (nil fontified t 4547 . 4555) (nil fontified t 4544 . 4547) (nil fontified t 4535 . 4544) (nil fontified t 4529 . 4535) (nil fontified t 4519 . 4529) (nil fontified t 4518 . 4519) (nil fontified t 4513 . 4518) (nil fontified t 4512 . 4513) (nil fontified t 4504 . 4512) (nil fontified t 4496 . 4504) (nil fontified t 4485 . 4496) (nil fontified t 4477 . 4485) (nil fontified t 4466 . 4477) (nil fontified t 4464 . 4466) (nil fontified t 4452 . 4464) (nil fontified t 4445 . 4452) (nil fontified t 4434 . 4445) (nil fontified t 4433 . 4434) (nil fontified t 4423 . 4433) (nil fontified t 4422 . 4423) (nil fontified t 4419 . 4422) (nil fontified t 4418 . 4419) (nil fontified t 4408 . 4418) (nil fontified t 4401 . 4408) (nil fontified t 4390 . 4401) (nil fontified t 4386 . 4390) (nil fontified t 4384 . 4386) (nil fontified t 4379 . 4384) (nil fontified t 4369 . 4379) (nil fontified t 4359 . 4369) (nil fontified t 4355 . 4359) (nil fontified t 4353 . 4355) (nil fontified t 4352 . 4353) (nil fontified t 4349 . 4352) (nil fontified t 4343 . 4349) (nil fontified t 4335 . 4343) (nil fontified t 4325 . 4335) (nil fontified t 4321 . 4325) (nil fontified t 4319 . 4321) (nil fontified t 4318 . 4319) (nil fontified t 4305 . 4318) (nil fontified t 4303 . 4305) (nil fontified t 4292 . 4303) (nil fontified t 4287 . 4292) (nil fontified t 4281 . 4287) (nil fontified t 4277 . 4281) (nil fontified t 4266 . 4277) (nil fontified t 4265 . 4266) (nil fontified t 4259 . 4265) (nil fontified t 4257 . 4259) (nil fontified t 4255 . 4257) (nil fontified t 4251 . 4255) (nil fontified t 4244 . 4251) (nil fontified t 4230 . 4244) (nil fontified t 4229 . 4230) (nil fontified t 4216 . 4229) (nil rear-nonsticky t 4709 . 4710) (t 26364 62428 614360 30000)) (26364 62428 579765 939000) 0 nil] [nil nil ((nil rear-nonsticky nil 4458 . 4459) (nil fontified nil 4216 . 4459) (4216 . 4459)) ((#("% Center part titles in the TOC
\\renewcommand{\\cftpartpresnum}{\\hfill} % Add space before the part title
\\renewcommand{\\cftpartaftersnum}{\\hfill} % Add space after the part title
\\renewcommand{\\cftpartleader}{\\hfill} % No dots, fill with space" 0 2 (face font-lock-comment-delimiter-face fontified nil) 2 32 (face font-lock-comment-face fontified nil) 32 45 (face font-lock-keyword-face fontified nil) 45 46 (fontified nil) 46 61 (face font-lock-function-name-face fontified nil) 61 63 (fontified nil) 63 69 (face font-lock-keyword-face fontified nil) 69 71 (fontified nil) 71 105 (face font-lock-comment-face fontified nil) 105 118 (face font-lock-keyword-face fontified nil) 118 119 (fontified nil) 119 136 (face font-lock-function-name-face fontified nil) 136 138 (fontified nil) 138 144 (face font-lock-keyword-face fontified nil) 144 146 (fontified nil) 146 179 (face font-lock-comment-face fontified nil) 179 192 (face font-lock-keyword-face fontified nil) 192 193 (fontified nil) 193 207 (face font-lock-function-name-face fontified nil) 207 209 (fontified nil) 209 215 (face font-lock-keyword-face fontified nil) 215 217 (fontified nil) 217 242 (face font-lock-comment-face fontified nil) 242 243 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 4216) (undo-tree-id2490 . -242) (undo-tree-id2491 . -242) (undo-tree-id2492 . -179) (undo-tree-id2493 . -242) (undo-tree-id2494 . -242) (undo-tree-id2495 . -242) (undo-tree-id2496 . -242) (undo-tree-id2497 . -242) (undo-tree-id2498 . -242) (undo-tree-id2499 . -242) (undo-tree-id2500 . -242) (undo-tree-id2501 . -242) (undo-tree-id2502 . -242) (undo-tree-id2503 . -242) (undo-tree-id2504 . -242) (undo-tree-id2505 . -242) (undo-tree-id2506 . -242) (undo-tree-id2507 . -242) (undo-tree-id2508 . -242) (undo-tree-id2509 . -242) (undo-tree-id2510 . -242) (undo-tree-id2511 . -242) (undo-tree-id2512 . -242) (undo-tree-id2513 . -242) (undo-tree-id2514 . -242) (undo-tree-id2515 . -242) (undo-tree-id2516 . -242) (undo-tree-id2517 . -242) (undo-tree-id2518 . -242) (undo-tree-id2519 . -242) (undo-tree-id2520 . -242) (undo-tree-id2521 . -242) (undo-tree-id2522 . -242) (undo-tree-id2523 . -242) (undo-tree-id2524 . -242) (undo-tree-id2525 . -242) (undo-tree-id2526 . -242) (undo-tree-id2527 . -242) (nil fontified t 4362 . 4395) (nil fontified t 4360 . 4362) (nil fontified t 4354 . 4360) (nil fontified t 4352 . 4354) (nil fontified t 4335 . 4352) (nil fontified t 4334 . 4335) (nil fontified t 4321 . 4334) (nil fontified t 4287 . 4321) (nil fontified t 4285 . 4287) (nil fontified t 4279 . 4285) (nil fontified t 4277 . 4279) (nil fontified t 4262 . 4277) (nil fontified t 4261 . 4262) (nil fontified t 4248 . 4261) (nil fontified t 4218 . 4248) (nil fontified t 4216 . 4218) (nil rear-nonsticky t 4458 . 4459) (t 26364 62361 76305 825000)) (26364 62361 46045 581000) 0 nil] [nil nil ((nil rear-nonsticky nil 4412 . 4413) (nil fontified nil 4170 . 4413) (4170 . 4413) 4169) ((#("% Center part titles in the TOC
\\renewcommand{\\cftpartpresnum}{\\hfill} % Add space before the part title
\\renewcommand{\\cftpartaftersnum}{\\hfill} % Add space after the part title
\\renewcommand{\\cftpartleader}{\\hfill} % No dots, fill with space" 0 1 (face font-lock-keyword-face fontified nil) 1 32 (fontified nil) 32 45 (face font-lock-keyword-face fontified nil) 45 46 (fontified nil) 46 61 (face font-lock-function-name-face fontified nil) 61 63 (fontified nil) 63 69 (face font-lock-keyword-face fontified nil) 69 71 (fontified nil) 71 105 (face font-lock-comment-face fontified nil) 105 118 (face font-lock-keyword-face fontified nil) 118 119 (fontified nil) 119 136 (face font-lock-function-name-face fontified nil) 136 138 (fontified nil) 138 144 (face font-lock-keyword-face fontified nil) 144 146 (fontified nil) 146 179 (face font-lock-comment-face fontified nil) 179 192 (face font-lock-keyword-face fontified nil) 192 193 (fontified nil) 193 207 (face font-lock-function-name-face fontified nil) 207 209 (fontified nil) 209 215 (face font-lock-keyword-face fontified nil) 215 217 (fontified nil) 217 242 (face font-lock-comment-face fontified nil) 242 243 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 4170) (undo-tree-id2485 . -242) (undo-tree-id2486 . -242) (undo-tree-id2487 . -179) (undo-tree-id2488 . -242) (undo-tree-id2489 . -242) (nil fontified t 4316 . 4349) (nil fontified t 4314 . 4316) (nil fontified t 4308 . 4314) (nil fontified t 4306 . 4308) (nil fontified t 4289 . 4306) (nil fontified t 4288 . 4289) (nil fontified t 4275 . 4288) (nil fontified t 4241 . 4275) (nil fontified t 4239 . 4241) (nil fontified t 4233 . 4239) (nil fontified t 4231 . 4233) (nil fontified t 4216 . 4231) (nil fontified t 4215 . 4216) (nil fontified t 4202 . 4215) (nil fontified t 4171 . 4202) (nil fontified t 4170 . 4171) (nil rear-nonsticky t 4412 . 4413)) (26364 62360 122775 567000) 0 nil] [nil nil ((nil rear-nonsticky nil 4412 . 4413) (nil fontified nil 4170 . 4413) (4170 . 4413) 4169) ((#("% Center part titles in the TOC
\\renewcommand{\\cftpartpresnum}{\\hfill} % Add space before the part title
\\renewcommand{\\cftpartaftersnum}{\\hfill} % Add space after the part title
\\renewcommand{\\cftpartleader}{\\hfill} % No dots, fill with space" 0 1 (face font-lock-keyword-face fontified nil) 1 32 (fontified nil) 32 45 (face font-lock-keyword-face fontified nil) 45 46 (fontified nil) 46 61 (face font-lock-function-name-face fontified nil) 61 63 (fontified nil) 63 69 (face font-lock-keyword-face fontified nil) 69 71 (fontified nil) 71 105 (face font-lock-comment-face fontified nil) 105 118 (face font-lock-keyword-face fontified nil) 118 119 (fontified nil) 119 136 (face font-lock-function-name-face fontified nil) 136 138 (fontified nil) 138 144 (face font-lock-keyword-face fontified nil) 144 146 (fontified nil) 146 179 (face font-lock-comment-face fontified nil) 179 192 (face font-lock-keyword-face fontified nil) 192 193 (fontified nil) 193 207 (face font-lock-function-name-face fontified nil) 207 209 (fontified nil) 209 215 (face font-lock-keyword-face fontified nil) 215 217 (fontified nil) 217 242 (face font-lock-comment-face fontified nil) 242 243 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 4170) (undo-tree-id2480 . -242) (undo-tree-id2481 . -242) (undo-tree-id2482 . -179) (undo-tree-id2483 . -242) (undo-tree-id2484 . -242) (nil fontified t 4316 . 4349) (nil fontified t 4314 . 4316) (nil fontified t 4308 . 4314) (nil fontified t 4306 . 4308) (nil fontified t 4289 . 4306) (nil fontified t 4288 . 4289) (nil fontified t 4275 . 4288) (nil fontified t 4241 . 4275) (nil fontified t 4239 . 4241) (nil fontified t 4233 . 4239) (nil fontified t 4231 . 4233) (nil fontified t 4216 . 4231) (nil fontified t 4215 . 4216) (nil fontified t 4202 . 4215) (nil fontified t 4171 . 4202) (nil fontified t 4170 . 4171) (nil rear-nonsticky t 4412 . 4413)) (26364 62359 397891 593000) 0 nil] [nil nil ((nil rear-nonsticky nil 4395 . 4396) (nil fontified nil 4216 . 4396) (4216 . 4396)) ((#("% Center part titles in the TOC
\\renewcommand{\\cftpartpresnum}{\\hfill} % Adds space before the part title
\\renewcommand{\\cftpartaftersnum}{\\hfill} % Adds space after the part title" 0 2 (face font-lock-comment-delimiter-face fontified nil) 2 32 (face font-lock-comment-face fontified nil) 32 45 (face font-lock-keyword-face fontified nil) 45 46 (fontified nil) 46 61 (face font-lock-function-name-face fontified nil) 61 63 (fontified nil) 63 69 (face font-lock-keyword-face fontified nil) 69 71 (fontified nil) 71 106 (face font-lock-comment-face fontified nil) 106 119 (face font-lock-keyword-face fontified nil) 119 120 (fontified nil) 120 137 (face font-lock-function-name-face fontified nil) 137 139 (fontified nil) 139 145 (face font-lock-keyword-face fontified nil) 145 147 (fontified nil) 147 179 (face font-lock-comment-face fontified nil) 179 180 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 4216) (undo-tree-id2443 . -179) (undo-tree-id2444 . -179) (undo-tree-id2445 . -32) (undo-tree-id2446 . -32) (undo-tree-id2447 . -32) (undo-tree-id2448 . -32) (undo-tree-id2449 . -106) (undo-tree-id2450 . -179) (undo-tree-id2451 . -179) (undo-tree-id2452 . -179) (undo-tree-id2453 . -179) (undo-tree-id2454 . -179) (undo-tree-id2455 . -179) (undo-tree-id2456 . -179) (undo-tree-id2457 . -179) (undo-tree-id2458 . -179) (undo-tree-id2459 . -179) (undo-tree-id2460 . -179) (undo-tree-id2461 . -179) (undo-tree-id2462 . -179) (undo-tree-id2463 . -179) (undo-tree-id2464 . -179) (undo-tree-id2465 . -179) (undo-tree-id2466 . -179) (undo-tree-id2467 . -179) (undo-tree-id2468 . -179) (undo-tree-id2469 . -179) (undo-tree-id2470 . -179) (undo-tree-id2471 . -179) (undo-tree-id2472 . -179) (undo-tree-id2473 . -179) (undo-tree-id2474 . -32) (undo-tree-id2475 . -179) (undo-tree-id2476 . -179) (undo-tree-id2477 . -179) (undo-tree-id2478 . -32) (undo-tree-id2479 . -179) (nil fontified t 4287 . 4322) (nil fontified t 4285 . 4287) (nil fontified t 4279 . 4285) (nil fontified t 4277 . 4279) (nil fontified t 4262 . 4277) (nil fontified t 4261 . 4262) (nil fontified t 4248 . 4261) (nil fontified t 4218 . 4248) (nil fontified t 4216 . 4218) (nil rear-nonsticky t 4395 . 4396)) (26364 62275 584757 748000) 0 nil] [nil nil ((4204 . 4207) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4204) (undo-tree-id2382 . -1) (4197 . 4205) (#("|" 0 1 (fontified t)) . -4197) (undo-tree-id2383 . -1) 4198 (4197 . 4198) (#("@" 0 1 (fontified t)) . -4197) (undo-tree-id2384 . -1) 4198 (4197 . 4198) (t 26364 62204 627472 752000)) ((#("@" 0 1 (fontified nil)) . 4197) (undo-tree-id2385 . -1) (4197 . 4198) (#("|" 0 1 (fontified nil)) . 4197) (undo-tree-id2386 . -1) (4197 . 4198) (#("\\centeri" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (face font-lock-keyword-face fontified nil)) . 4197) (undo-tree-id2387 . -7) (undo-tree-id2388 . -7) (undo-tree-id2389 . -7) (undo-tree-id2390 . -7) (undo-tree-id2391 . -7) (undo-tree-id2392 . -7) (undo-tree-id2393 . -7) (undo-tree-id2394 . -7) (undo-tree-id2395 . -7) (undo-tree-id2396 . -7) (undo-tree-id2397 . -7) (undo-tree-id2398 . -7) (undo-tree-id2399 . -7) (undo-tree-id2400 . -7) (undo-tree-id2401 . -7) (undo-tree-id2402 . -7) (undo-tree-id2403 . -7) (undo-tree-id2404 . -7) (undo-tree-id2405 . -7) (undo-tree-id2406 . -7) (undo-tree-id2407 . -7) (undo-tree-id2408 . -7) (undo-tree-id2409 . -7) (undo-tree-id2410 . -7) (undo-tree-id2411 . -8) (undo-tree-id2412 . -7) (undo-tree-id2413 . -7) (undo-tree-id2414 . -7) (4204 . 4205) (#("ing" 0 3 (face font-lock-keyword-face fontified t)) . 4204) (undo-tree-id2415 . -2) (undo-tree-id2416 . -2) (undo-tree-id2417 . -2) (undo-tree-id2418 . -2) (undo-tree-id2419 . -2) (undo-tree-id2420 . -2) (undo-tree-id2421 . -2) (undo-tree-id2422 . -2) (undo-tree-id2423 . -2) (undo-tree-id2424 . -2) (undo-tree-id2425 . -2) (undo-tree-id2426 . -2) (undo-tree-id2427 . -2) (undo-tree-id2428 . -2) (undo-tree-id2429 . -2) (undo-tree-id2430 . -2) (undo-tree-id2431 . -2) (undo-tree-id2432 . -2) (undo-tree-id2433 . -2) (undo-tree-id2434 . -2) (undo-tree-id2435 . -2) (undo-tree-id2436 . -2) (undo-tree-id2437 . -2) (undo-tree-id2438 . -2) (undo-tree-id2439 . -2) (undo-tree-id2440 . -2) (undo-tree-id2441 . -2) (undo-tree-id2442 . -2) (t 26364 62227 760141 304000)) (26364 62227 704106 720000) 0 nil] [nil nil ((#("\\setlength{\\cftaftertoctitleskip}{-2em} % Space after the TOC title
" 0 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 32 (face font-lock-variable-name-face fontified t) 32 35 (fontified t) 35 36 (fontified t) 36 38 (fontified t) 38 40 (fontified t) 40 66 (face font-lock-comment-face fontified t) 66 67 (face font-lock-comment-face fontified t rear-nonsticky t) 67 68 (face font-lock-comment-face fontified t)) . 3924) (undo-tree-id2330 . -34) (undo-tree-id2331 . 30) (undo-tree-id2332 . -67) (undo-tree-id2333 . -34) (undo-tree-id2334 . -34) (undo-tree-id2335 . -34) (undo-tree-id2337 . -35) (undo-tree-id2339 . -35) (undo-tree-id2341 . -35) (undo-tree-id2343 . -35) (undo-tree-id2345 . -35) (undo-tree-id2347 . -35) (undo-tree-id2349 . -35) (undo-tree-id2351 . -35) (undo-tree-id2353 . -35) (undo-tree-id2355 . -35) (undo-tree-id2357 . -35) (undo-tree-id2359 . -35) (undo-tree-id2361 . -35) (undo-tree-id2363 . -35) (undo-tree-id2365 . -35) (undo-tree-id2367 . -35) (undo-tree-id2369 . -35) (undo-tree-id2371 . -35) (undo-tree-id2373 . -35) (undo-tree-id2375 . -35) (undo-tree-id2377 . -35) (undo-tree-id2378 . -35) (undo-tree-id2380 . -35) 3959 (t 26364 62182 928096 122000)) ((3924 . 3992) (t 26364 62198 944302 701000)) (26364 62198 913428 366000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4288 . 4289) (nil fontified nil 4217 . 4289) (4217 . 4289)) nil (26364 62772 536171 231000) 0 nil] [nil nil ((nil rear-nonsticky nil 4427 . 4428) (nil fontified nil 4217 . 4428) (4217 . 4428)) ((#("\\usepackage{xpatch}
\\makeatletter
\\xpatchcmd{\\@part}{%
  \\addcontentsline{toc}{part}{\\thepart\\hspace{1em}#1}%%
}{%
  \\addtocontents{toc}{\\bfseries\\protect\\centering\\thepart\\hspace{1em}#1\\par}%
}{}{}
\\makeatother" 0 11 (face font-lock-keyword-face fontified nil) 11 12 (fontified nil) 12 18 (face font-lock-builtin-face fontified nil) 18 20 (fontified nil) 20 33 (face font-lock-keyword-face fontified nil) 33 34 (fontified nil) 34 44 (face font-lock-keyword-face fontified nil) 44 45 (fontified nil) 45 51 (face font-lock-keyword-face fontified nil) 51 53 (fontified nil) 53 55 (face font-lock-comment-face fontified nil) 55 57 (fontified nil) 57 73 (face font-lock-keyword-face fontified nil) 73 85 (fontified nil) 85 93 (face font-lock-keyword-face fontified nil) 93 100 (face font-lock-keyword-face fontified nil) 100 108 (fontified nil) 108 110 (face font-lock-comment-delimiter-face fontified nil) 110 111 (face font-lock-comment-face fontified nil) 111 113 (fontified nil) 113 115 (face font-lock-comment-face fontified nil) 115 117 (fontified nil) 117 131 (face font-lock-keyword-face fontified nil) 131 137 (fontified nil) 137 146 (face font-lock-keyword-face fontified nil) 146 154 (face (font-lock-keyword-face bold) fontified nil) 154 164 (face (font-lock-keyword-face bold) fontified nil) 164 172 (face (font-lock-keyword-face bold) fontified nil) 172 179 (face (font-lock-keyword-face bold) fontified nil) 179 186 (face (bold) fontified nil) 186 190 (face (font-lock-keyword-face bold) fontified nil) 190 191 (fontified nil) 191 193 (face font-lock-comment-face fontified nil) 193 199 (fontified nil) 199 210 (face font-lock-keyword-face fontified nil) 210 211 (face font-lock-keyword-face rear-nonsticky nil fontified nil)) . 4217) (undo-tree-id2878 . -210) (undo-tree-id2879 . -210) (undo-tree-id2880 . -199) (undo-tree-id2881 . -210) (undo-tree-id2882 . -210) (undo-tree-id2883 . -210) (undo-tree-id2884 . -210) (undo-tree-id2885 . -210) (undo-tree-id2886 . -210) (undo-tree-id2887 . -210) (undo-tree-id2888 . -210) (undo-tree-id2889 . -210) (undo-tree-id2890 . -210) (undo-tree-id2891 . -210) (undo-tree-id2892 . -210) (undo-tree-id2893 . -210) (undo-tree-id2894 . -210) (undo-tree-id2895 . -210) (undo-tree-id2896 . -210) (undo-tree-id2897 . -210) (undo-tree-id2898 . -210) (undo-tree-id2899 . -210) (undo-tree-id2900 . -210) (undo-tree-id2901 . -210) (undo-tree-id2902 . -210) (undo-tree-id2903 . -210) (undo-tree-id2904 . -210) (undo-tree-id2905 . -210) (undo-tree-id2906 . -210) (undo-tree-id2907 . -210) (undo-tree-id2908 . -210) (undo-tree-id2909 . -210) (undo-tree-id2910 . -210) (undo-tree-id2911 . -210) (undo-tree-id2912 . -210) (undo-tree-id2913 . -210) (undo-tree-id2914 . -210) (undo-tree-id2915 . -210) (undo-tree-id2916 . -210) (undo-tree-id2917 . -210) (undo-tree-id2918 . -210) (undo-tree-id2919 . -210) (undo-tree-id2920 . -210) (undo-tree-id2921 . -210) (undo-tree-id2922 . -210) (nil fontified t 4410 . 4416) (nil fontified t 4408 . 4410) (nil fontified t 4407 . 4408) (nil fontified t 4403 . 4407) (nil fontified t 4396 . 4403) (nil fontified t 4389 . 4396) (nil fontified t 4381 . 4389) (nil fontified t 4371 . 4381) (nil fontified t 4363 . 4371) (nil fontified t 4354 . 4363) (nil fontified t 4348 . 4354) (nil fontified t 4334 . 4348) (nil fontified t 4332 . 4334) (nil fontified t 4330 . 4332) (nil fontified t 4328 . 4330) (nil fontified t 4327 . 4328) (nil fontified t 4325 . 4327) (nil fontified t 4317 . 4325) (nil fontified t 4310 . 4317) (nil fontified t 4302 . 4310) (nil fontified t 4290 . 4302) (nil fontified t 4274 . 4290) (nil fontified t 4272 . 4274) (nil fontified t 4270 . 4272) (nil fontified t 4268 . 4270) (nil fontified t 4262 . 4268) (nil fontified t 4261 . 4262) (nil fontified t 4251 . 4261) (nil fontified t 4250 . 4251) (nil fontified t 4237 . 4250) (nil fontified t 4235 . 4237) (nil fontified t 4229 . 4235) (nil fontified t 4228 . 4229) (nil fontified t 4217 . 4228) (nil rear-nonsticky t 4427 . 4428) (t 26364 62741 235331 138000)) (26364 62741 196920 582000) 0 nil] [nil nil ((nil rear-nonsticky nil 4414 . 4415) (nil fontified nil 4217 . 4415) (4217 . 4415)) ((#("\\addtocontents{toc}{\\cftpagenumbersoff{part}}
\\renewcommand*{\\addparttocentry}[2]{%
  \\addtocentrydefault{part}{}{\\protect\\parbox{\\textwidth}{\\protect\\centering#2}}% original #1 in second argument
}" 0 14 (face font-lock-keyword-face fontified nil) 14 20 (fontified nil) 20 38 (face font-lock-keyword-face fontified nil) 38 46 (fontified nil) 46 60 (face font-lock-keyword-face fontified nil) 60 61 (fontified nil) 61 77 (face font-lock-function-name-face fontified nil) 77 82 (fontified nil) 82 84 (face font-lock-comment-face fontified nil) 84 86 (fontified nil) 86 105 (face font-lock-keyword-face fontified nil) 105 114 (fontified nil) 114 122 (face font-lock-keyword-face fontified nil) 122 129 (face font-lock-keyword-face fontified nil) 129 130 (fontified nil) 130 140 (face font-lock-keyword-face fontified nil) 140 142 (fontified nil) 142 150 (face font-lock-keyword-face fontified nil) 150 160 (face font-lock-keyword-face fontified nil) 160 164 (fontified nil) 164 197 (face font-lock-comment-face fontified nil) 197 198 (rear-nonsticky nil fontified nil)) . 4217) (undo-tree-id2755 . -197) (undo-tree-id2756 . -197) (undo-tree-id2757 . -197) (undo-tree-id2758 . -197) (undo-tree-id2759 . -197) (undo-tree-id2760 . -197) (undo-tree-id2761 . -197) (undo-tree-id2762 . -197) (undo-tree-id2763 . -197) (undo-tree-id2764 . -197) (undo-tree-id2765 . -197) (undo-tree-id2766 . -197) (undo-tree-id2767 . -197) (undo-tree-id2768 . -197) (undo-tree-id2769 . -197) (undo-tree-id2770 . -197) (undo-tree-id2771 . -197) (undo-tree-id2772 . -197) (undo-tree-id2773 . -197) (undo-tree-id2774 . -197) (undo-tree-id2775 . -197) (undo-tree-id2776 . -197) (undo-tree-id2777 . -197) (undo-tree-id2778 . -197) (undo-tree-id2779 . -197) (undo-tree-id2780 . -197) (undo-tree-id2781 . -197) (undo-tree-id2782 . -197) (undo-tree-id2783 . -197) (undo-tree-id2784 . -197) (undo-tree-id2785 . -197) (undo-tree-id2786 . -197) (undo-tree-id2787 . -197) (undo-tree-id2788 . -197) (undo-tree-id2789 . -197) (undo-tree-id2790 . -197) (undo-tree-id2791 . -197) (undo-tree-id2792 . -197) (undo-tree-id2793 . -197) (undo-tree-id2794 . -197) (undo-tree-id2795 . -197) (undo-tree-id2796 . -197) (undo-tree-id2797 . -197) (undo-tree-id2798 . -197) (undo-tree-id2799 . -197) (undo-tree-id2800 . -197) (undo-tree-id2801 . -197) (undo-tree-id2802 . -197) (undo-tree-id2803 . -197) (undo-tree-id2804 . -197) (undo-tree-id2805 . -197) (undo-tree-id2806 . -197) (undo-tree-id2807 . -197) (undo-tree-id2808 . -197) (undo-tree-id2809 . -197) (undo-tree-id2810 . -197) (undo-tree-id2811 . -197) (undo-tree-id2812 . -197) (undo-tree-id2813 . -197) (undo-tree-id2814 . -197) (undo-tree-id2815 . -197) (undo-tree-id2816 . -197) (undo-tree-id2817 . -197) (undo-tree-id2818 . -197) (undo-tree-id2819 . -197) (undo-tree-id2820 . -197) (undo-tree-id2821 . -197) (undo-tree-id2822 . -197) (undo-tree-id2823 . -197) (undo-tree-id2824 . -197) (undo-tree-id2825 . -197) (undo-tree-id2826 . -197) (undo-tree-id2827 . -197) (undo-tree-id2828 . -197) (undo-tree-id2829 . -197) (undo-tree-id2830 . -197) (undo-tree-id2831 . -197) (undo-tree-id2832 . -197) (undo-tree-id2833 . -197) (undo-tree-id2834 . -197) (undo-tree-id2835 . -197) (undo-tree-id2836 . -197) (undo-tree-id2837 . -197) (undo-tree-id2838 . -197) (undo-tree-id2839 . -197) (undo-tree-id2840 . -197) (undo-tree-id2841 . -197) (undo-tree-id2842 . -197) (undo-tree-id2843 . -197) (undo-tree-id2844 . -197) (undo-tree-id2845 . -197) (undo-tree-id2846 . -197) (undo-tree-id2847 . -197) (undo-tree-id2848 . -197) (undo-tree-id2849 . -197) (undo-tree-id2850 . -197) (undo-tree-id2851 . -197) (undo-tree-id2852 . -197) (undo-tree-id2853 . -197) (undo-tree-id2854 . -197) (undo-tree-id2855 . -197) (undo-tree-id2856 . -197) (undo-tree-id2857 . -197) (undo-tree-id2858 . -197) (undo-tree-id2859 . -197) (undo-tree-id2860 . -197) (undo-tree-id2861 . -197) (undo-tree-id2862 . -197) (undo-tree-id2863 . -197) (undo-tree-id2864 . -197) (undo-tree-id2865 . -197) (undo-tree-id2866 . -197) (undo-tree-id2867 . -197) (undo-tree-id2868 . -197) (undo-tree-id2869 . -197) (undo-tree-id2870 . -197) (undo-tree-id2871 . -197) (undo-tree-id2872 . -197) (undo-tree-id2873 . -197) (undo-tree-id2874 . -197) (undo-tree-id2875 . -197) (undo-tree-id2876 . -197) (undo-tree-id2877 . -197) (nil fontified t 4381 . 4414) (nil fontified t 4377 . 4381) (nil fontified t 4367 . 4377) (nil fontified t 4359 . 4367) (nil fontified t 4357 . 4359) (nil fontified t 4347 . 4357) (nil fontified t 4346 . 4347) (nil fontified t 4339 . 4346) (nil fontified t 4331 . 4339) (nil fontified t 4322 . 4331) (nil fontified t 4303 . 4322) (nil fontified t 4301 . 4303) (nil fontified t 4299 . 4301) (nil fontified t 4294 . 4299) (nil fontified t 4278 . 4294) (nil fontified t 4277 . 4278) (nil fontified t 4263 . 4277) (nil fontified t 4255 . 4263) (nil fontified t 4237 . 4255) (nil fontified t 4231 . 4237) (nil fontified t 4217 . 4231) (nil rear-nonsticky t 4414 . 4415) (t 26364 62658 847713 996000)) (26364 62658 813512 260000) 0 nil] [nil nil ((nil rear-nonsticky nil 4730 . 4731) (nil fontified nil 4217 . 4731) (4217 . 4731)) ((#("\\makeatletter
\\renewcommand{\\partnumberline}[1]{Teil #1:~}
\\renewcommand*{\\l@part}[2]{%
  \\ifnum \\c@tocdepth >-2\\relax
    \\cftpartbreak
    \\begingroup
      {
        \\setlength{\\memRTLleftskip}{0pt}
        \\setlength{\\memRTLrightskip}{0pt}
        \\interlinepenalty\\@M
        \\centering
        \\cftpartfont #1
        \\par
      }
      \\nobreak
        \\global\\@nobreaktrue
        \\everypar{\\global\\@nobreakfalse\\everypar{}}%
    \\endgroup
  \\fi}
\\makeatother
\\renewcommand{\\cftpartfont}{\\large\\normalfont}" 0 13 (face font-lock-keyword-face fontified nil) 13 14 (fontified nil) 14 27 (face font-lock-keyword-face fontified nil) 27 28 (fontified nil) 28 43 (face font-lock-function-name-face fontified nil) 43 59 (fontified nil) 59 73 (face font-lock-keyword-face fontified nil) 73 74 (fontified nil) 74 81 (face font-lock-function-name-face fontified nil) 81 86 (fontified nil) 86 88 (face font-lock-comment-face fontified nil) 88 90 (fontified nil) 90 96 (face font-lock-keyword-face fontified nil) 96 97 (fontified nil) 97 108 (face font-lock-keyword-face fontified nil) 108 112 (fontified nil) 112 118 (face font-lock-keyword-face fontified nil) 118 123 (fontified nil) 123 136 (face font-lock-keyword-face fontified nil) 136 141 (fontified nil) 141 152 (face font-lock-keyword-face fontified nil) 152 169 (fontified nil) 169 179 (face font-lock-keyword-face fontified nil) 179 180 (fontified nil) 180 195 (face font-lock-variable-name-face fontified nil) 195 210 (fontified nil) 210 220 (face font-lock-keyword-face fontified nil) 220 221 (fontified nil) 221 237 (face font-lock-variable-name-face fontified nil) 237 252 (fontified nil) 252 269 (face font-lock-keyword-face fontified nil) 269 272 (face font-lock-keyword-face fontified nil) 272 281 (fontified nil) 281 291 (face font-lock-keyword-face fontified nil) 291 300 (fontified nil) 300 312 (face font-lock-keyword-face fontified nil) 312 324 (fontified nil) 324 328 (face font-lock-keyword-face fontified nil) 328 343 (fontified nil) 343 351 (face font-lock-keyword-face fontified nil) 351 360 (fontified nil) 360 367 (face font-lock-keyword-face fontified nil) 367 380 (face font-lock-keyword-face fontified nil) 380 389 (fontified nil) 389 398 (face font-lock-keyword-face fontified nil) 398 399 (fontified nil) 399 406 (face font-lock-keyword-face fontified nil) 406 420 (face font-lock-keyword-face fontified nil) 420 429 (face font-lock-keyword-face fontified nil) 429 432 (fontified nil) 432 434 (face font-lock-comment-face fontified nil) 434 438 (fontified nil) 438 447 (face font-lock-keyword-face fontified nil) 447 450 (fontified nil) 450 453 (face font-lock-keyword-face fontified nil) 453 455 (fontified nil) 455 467 (face font-lock-keyword-face fontified nil) 467 468 (fontified nil) 468 481 (face font-lock-keyword-face fontified nil) 481 482 (fontified nil) 482 494 (face font-lock-function-name-face fontified nil) 494 496 (fontified nil) 496 502 (face font-lock-keyword-face fontified nil) 502 513 (face font-lock-keyword-face fontified nil) 513 514 (rear-nonsticky nil fontified nil)) . 4217) (undo-tree-id2646 . -513) (undo-tree-id2647 . -513) (undo-tree-id2648 . -468) (undo-tree-id2649 . -513) (undo-tree-id2650 . -513) (undo-tree-id2651 . -513) (undo-tree-id2652 . -513) (undo-tree-id2653 . -513) (undo-tree-id2654 . -513) (undo-tree-id2655 . -513) (undo-tree-id2656 . -513) (undo-tree-id2657 . -513) (undo-tree-id2658 . -513) (undo-tree-id2659 . -513) (undo-tree-id2660 . -513) (undo-tree-id2661 . -513) (undo-tree-id2662 . -513) (undo-tree-id2663 . -513) (undo-tree-id2664 . -513) (undo-tree-id2665 . -513) (undo-tree-id2666 . -513) (undo-tree-id2667 . -513) (undo-tree-id2668 . -513) (undo-tree-id2669 . -513) (undo-tree-id2670 . -513) (undo-tree-id2671 . -513) (undo-tree-id2672 . -513) (undo-tree-id2673 . -513) (undo-tree-id2674 . -513) (undo-tree-id2675 . -513) (undo-tree-id2676 . -513) (undo-tree-id2677 . -513) (undo-tree-id2678 . -513) (undo-tree-id2679 . -513) (undo-tree-id2680 . -513) (undo-tree-id2681 . -513) (undo-tree-id2682 . -513) (undo-tree-id2683 . -513) (undo-tree-id2684 . -513) (undo-tree-id2685 . -513) (undo-tree-id2686 . -513) (undo-tree-id2687 . -513) (undo-tree-id2688 . -513) (undo-tree-id2689 . -513) (undo-tree-id2690 . -513) (undo-tree-id2691 . -513) (undo-tree-id2692 . -513) (undo-tree-id2693 . -513) (undo-tree-id2694 . -513) (undo-tree-id2695 . -513) (undo-tree-id2696 . -513) (undo-tree-id2697 . -513) (undo-tree-id2698 . -513) (undo-tree-id2699 . -513) (undo-tree-id2700 . -513) (undo-tree-id2701 . -513) (undo-tree-id2702 . -513) (undo-tree-id2703 . -513) (undo-tree-id2704 . -513) (undo-tree-id2705 . -513) (undo-tree-id2706 . -513) (undo-tree-id2707 . -513) (undo-tree-id2708 . -513) (undo-tree-id2709 . -513) (undo-tree-id2710 . -513) (undo-tree-id2711 . -513) (undo-tree-id2712 . -513) (undo-tree-id2713 . -513) (undo-tree-id2714 . -513) (undo-tree-id2715 . -513) (undo-tree-id2716 . -513) (undo-tree-id2717 . -513) (undo-tree-id2718 . -513) (undo-tree-id2719 . -513) (undo-tree-id2720 . -513) (undo-tree-id2721 . -513) (undo-tree-id2722 . -513) (undo-tree-id2723 . -513) (undo-tree-id2724 . -513) (undo-tree-id2725 . -513) (undo-tree-id2726 . -513) (undo-tree-id2727 . -513) (undo-tree-id2728 . -513) (undo-tree-id2729 . -513) (undo-tree-id2730 . -513) (undo-tree-id2731 . -513) (undo-tree-id2732 . -513) (undo-tree-id2733 . -513) (undo-tree-id2734 . -513) (undo-tree-id2735 . -513) (undo-tree-id2736 . -513) (undo-tree-id2737 . -513) (undo-tree-id2738 . -513) (undo-tree-id2739 . -513) (undo-tree-id2740 . -513) (undo-tree-id2741 . -513) (undo-tree-id2742 . -513) (undo-tree-id2743 . -513) (undo-tree-id2744 . -513) (undo-tree-id2745 . -513) (undo-tree-id2746 . -513) (undo-tree-id2747 . -513) (undo-tree-id2748 . -513) (undo-tree-id2749 . -513) (undo-tree-id2750 . -513) (undo-tree-id2751 . -513) (undo-tree-id2752 . -513) (undo-tree-id2753 . -513) (undo-tree-id2754 . -513) (nil fontified t 4684 . 4685) (nil fontified t 4672 . 4684) (nil fontified t 4670 . 4672) (nil fontified t 4667 . 4670) (nil fontified t 4664 . 4667) (nil fontified t 4655 . 4664) (nil fontified t 4651 . 4655) (nil fontified t 4649 . 4651) (nil fontified t 4646 . 4649) (nil fontified t 4637 . 4646) (nil fontified t 4623 . 4637) (nil fontified t 4616 . 4623) (nil fontified t 4615 . 4616) (nil fontified t 4606 . 4615) (nil fontified t 4597 . 4606) (nil fontified t 4584 . 4597) (nil fontified t 4577 . 4584) (nil fontified t 4568 . 4577) (nil fontified t 4560 . 4568) (nil fontified t 4545 . 4560) (nil fontified t 4541 . 4545) (nil fontified t 4529 . 4541) (nil fontified t 4517 . 4529) (nil fontified t 4508 . 4517) (nil fontified t 4498 . 4508) (nil fontified t 4489 . 4498) (nil fontified t 4486 . 4489) (nil fontified t 4469 . 4486) (nil fontified t 4454 . 4469) (nil fontified t 4438 . 4454) (nil fontified t 4437 . 4438) (nil fontified t 4427 . 4437) (nil fontified t 4412 . 4427) (nil fontified t 4397 . 4412) (nil fontified t 4396 . 4397) (nil fontified t 4386 . 4396) (nil fontified t 4369 . 4386) (nil fontified t 4358 . 4369) (nil fontified t 4353 . 4358) (nil fontified t 4340 . 4353) (nil fontified t 4335 . 4340) (nil fontified t 4329 . 4335) (nil fontified t 4325 . 4329) (nil fontified t 4314 . 4325) (nil fontified t 4313 . 4314) (nil fontified t 4307 . 4313) (nil fontified t 4305 . 4307) (nil fontified t 4303 . 4305) (nil fontified t 4298 . 4303) (nil fontified t 4291 . 4298) (nil fontified t 4290 . 4291) (nil fontified t 4276 . 4290) (nil fontified t 4260 . 4276) (nil fontified t 4245 . 4260) (nil fontified t 4244 . 4245) (nil fontified t 4231 . 4244) (nil fontified t 4230 . 4231) (nil fontified t 4217 . 4230) (nil rear-nonsticky t 4730 . 4731) (t 26364 62593 789593 968000)) (26364 62593 735496 935000) 0 nil])
nil
nil
nil
nil
([nil nil ((4396 . 4397) 4395) ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 4396) (t 26364 62268 665631 907000)) (26364 62268 617407 968000) 0 nil])
nil
nil
([nil nil ((4282 . 4287) (t 26364 62772 591090 311000)) nil (26364 62784 172875 395000) 0 nil])
nil
nil
nil
nil
([nil nil ((4252 . 4259) (t 26364 62784 207420 704000)) nil (26364 62793 499556 467000) 0 nil])
([nil nil ((#("\\hfill " 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t)) . 4246) (undo-tree-id2923 . -6) (undo-tree-id2924 . -6) (undo-tree-id2925 . -6) (undo-tree-id2926 . -6) (undo-tree-id2927 . -6) (undo-tree-id2928 . -6) (undo-tree-id2929 . -5) (undo-tree-id2930 . -5) (undo-tree-id2931 . -5) (undo-tree-id2932 . -5) (undo-tree-id2933 . -5) (undo-tree-id2934 . -4) (undo-tree-id2935 . -4) (undo-tree-id2936 . -4) (undo-tree-id2937 . -4) (undo-tree-id2938 . -4) (undo-tree-id2939 . -3) (undo-tree-id2940 . -3) (undo-tree-id2941 . -3) (undo-tree-id2942 . -3) (undo-tree-id2943 . -3) (undo-tree-id2944 . -2) (undo-tree-id2945 . -2) (undo-tree-id2946 . -2) (undo-tree-id2947 . -2) (undo-tree-id2948 . -2) (undo-tree-id2949 . -2) (undo-tree-id2950 . -2) (undo-tree-id2951 . -2) (undo-tree-id2952 . -2) (undo-tree-id2953 . -2) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -7) (t 26364 62793 523817 640000)) nil (26364 62899 12121 288000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4468 . 4469) (nil fontified nil 4217 . 4469) (4217 . 4469) (#("\\renewcommand\\cftpartpresnum{thetuh}
\\renewcommand\\cftpartleader{ahaha\\hfill}" 0 13 (face font-lock-keyword-face fontified t) 13 28 (face font-lock-function-name-face fontified t) 28 29 (fontified t) 29 35 (fontified t) 35 37 (fontified t) 37 50 (face font-lock-keyword-face fontified t) 50 64 (face font-lock-function-name-face fontified t) 64 70 (fontified t) 70 76 (face font-lock-keyword-face fontified t) 76 77 (fontified t rear-nonsticky t)) . 4217) (undo-tree-id3012 . 42) (undo-tree-id3013 . -76) (undo-tree-id3014 . -37) (undo-tree-id3015 . -72) (undo-tree-id3016 . -72) (undo-tree-id3017 . -35) (undo-tree-id3018 . -37) (undo-tree-id3019 . -37) (undo-tree-id3020 . -37) (undo-tree-id3021 . -37) (undo-tree-id3022 . -37) (undo-tree-id3023 . -37) (undo-tree-id3024 . -37) (undo-tree-id3025 . -37) (undo-tree-id3026 . -37) (undo-tree-id3027 . -37) (undo-tree-id3028 . -37) (undo-tree-id3029 . -37) (undo-tree-id3030 . -37) (undo-tree-id3031 . -37) (undo-tree-id3032 . -37) (undo-tree-id3033 . -37) (undo-tree-id3034 . -37) (undo-tree-id3035 . -37) (undo-tree-id3036 . -37) (undo-tree-id3037 . -37) (undo-tree-id3038 . -37) (undo-tree-id3039 . -37) (undo-tree-id3040 . -37) (undo-tree-id3041 . -37) (undo-tree-id3042 . -37) (undo-tree-id3043 . -37) (undo-tree-id3044 . -37) (undo-tree-id3045 . -37) (undo-tree-id3046 . -37) (undo-tree-id3047 . -37) (undo-tree-id3048 . -37) (undo-tree-id3049 . -37) (undo-tree-id3050 . -37) (undo-tree-id3051 . -37) (undo-tree-id3052 . -37) (undo-tree-id3053 . -37) (undo-tree-id3054 . -37) (undo-tree-id3055 . -37) (undo-tree-id3056 . -37) (undo-tree-id3057 . -72) (undo-tree-id3058 . -77)) nil (26364 63180 552929 206000) 0 nil] [nil nil ((nil rear-nonsticky nil 4388 . 4389) (nil fontified nil 4295 . 4389) (4295 . 4389)) ((#("\\renewcommand{\\cftpartformatpnum}{\\hfill} % Ensure that the page number is pushed to the right" 0 13 (face font-lock-keyword-face fontified nil) 13 14 (fontified nil) 14 32 (face font-lock-function-name-face fontified nil) 32 34 (fontified nil) 34 40 (face font-lock-keyword-face fontified nil) 40 42 (fontified nil) 42 93 (face font-lock-comment-face fontified nil) 93 94 (face font-lock-comment-face fontified nil rear-nonsticky nil)) . 4295) (nil rear-nonsticky t 4388 . 4389)) (26364 62898 495488 779000) 0 nil] [nil nil ((nil rear-nonsticky nil 4537 . 4538) (nil fontified nil 4295 . 4538) (4295 . 4538) (t 26364 62821 856330 508000)) ((#("\\renewcommand{\\part}{%
    \\clearpage % Start on a new page
    \\thispagestyle{plain} % Use plain page style (no header or footer)
    \\centering % Center the part title
    \\normalfont\\itshape\\bfseries\\huge % Make it bold, italic, and large
}" 0 13 (face font-lock-keyword-face fontified nil) 13 14 (fontified nil) 14 19 (face font-lock-function-name-face fontified nil) 19 21 (fontified nil) 21 22 (face font-lock-comment-face fontified nil) 22 23 (face font-lock-comment-face fontified nil) 23 27 (fontified nil) 27 37 (face font-lock-warning-face fontified nil) 37 38 (fontified nil) 38 60 (face font-lock-comment-face fontified nil) 60 64 (fontified nil) 64 78 (face font-lock-keyword-face fontified nil) 78 86 (fontified nil) 86 131 (face font-lock-comment-face fontified nil) 131 135 (fontified nil) 135 145 (face font-lock-keyword-face fontified nil) 145 146 (fontified nil) 146 170 (face font-lock-comment-face fontified nil) 170 174 (fontified nil) 174 185 (face font-lock-keyword-face fontified nil) 185 193 (face font-lock-keyword-face fontified nil) 193 202 (face font-lock-keyword-face fontified nil) 202 207 (face (font-lock-keyword-face bold) fontified nil) 207 208 (face (bold) fontified nil) 208 242 (face (font-lock-comment-face bold) fontified nil) 242 243 (fontified nil rear-nonsticky nil)) . 4295) (nil fontified t 4503 . 4537) (nil fontified t 4502 . 4503) (nil fontified t 4497 . 4502) (nil fontified t 4488 . 4497) (nil fontified t 4480 . 4488) (nil fontified t 4469 . 4480) (nil fontified t 4465 . 4469) (nil fontified t 4441 . 4465) (nil fontified t 4440 . 4441) (nil fontified t 4430 . 4440) (nil fontified t 4426 . 4430) (nil fontified t 4381 . 4426) (nil fontified t 4373 . 4381) (nil fontified t 4359 . 4373) (nil fontified t 4355 . 4359) (nil fontified t 4333 . 4355) (nil fontified t 4332 . 4333) (nil fontified t 4322 . 4332) (nil fontified t 4318 . 4322) (nil fontified t 4317 . 4318) (nil fontified t 4316 . 4317) (nil fontified t 4314 . 4316) (nil fontified t 4309 . 4314) (nil fontified t 4308 . 4309) (nil fontified t 4295 . 4308) (nil rear-nonsticky t 4537 . 4538)) (26364 62866 336894 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4710 . 4711) (nil fontified nil 4217 . 4230) (nil fontified nil 4230 . 4231) (nil fontified nil 4231 . 4245) (nil fontified nil 4245 . 4252) (nil fontified nil 4252 . 4256) (nil fontified nil 4256 . 4258) (nil fontified nil 4258 . 4260) (nil fontified nil 4260 . 4266) (nil fontified nil 4266 . 4267) (nil fontified nil 4267 . 4278) (nil fontified nil 4278 . 4282) (nil fontified nil 4282 . 4288) (nil fontified nil 4288 . 4293) (nil fontified nil 4293 . 4304) (nil fontified nil 4304 . 4306) (nil fontified nil 4306 . 4319) (nil fontified nil 4319 . 4320) (nil fontified nil 4320 . 4322) (nil fontified nil 4322 . 4326) (nil fontified nil 4326 . 4336) (nil fontified nil 4336 . 4344) (nil fontified nil 4344 . 4350) (nil fontified nil 4350 . 4353) (nil fontified nil 4353 . 4354) (nil fontified nil 4354 . 4356) (nil fontified nil 4356 . 4360) (nil fontified nil 4360 . 4370) (nil fontified nil 4370 . 4380) (nil fontified nil 4380 . 4385) (nil fontified nil 4385 . 4387) (nil fontified nil 4387 . 4391) (nil fontified nil 4391 . 4402) (nil fontified nil 4402 . 4409) (nil fontified nil 4409 . 4419) (nil fontified nil 4419 . 4420) (nil fontified nil 4420 . 4423) (nil fontified nil 4423 . 4424) (nil fontified nil 4424 . 4434) (nil fontified nil 4434 . 4435) (nil fontified nil 4435 . 4446) (nil fontified nil 4446 . 4453) (nil fontified nil 4453 . 4465) (nil fontified nil 4465 . 4467) (nil fontified nil 4467 . 4478) (nil fontified nil 4478 . 4486) (nil fontified nil 4486 . 4497) (nil fontified nil 4497 . 4498) (nil fontified nil 4498 . 4505) (nil fontified nil 4505 . 4513) (nil fontified nil 4513 . 4514) (nil fontified nil 4514 . 4519) (nil fontified nil 4519 . 4520) (nil fontified nil 4520 . 4530) (nil fontified nil 4530 . 4531) (nil fontified nil 4531 . 4532) (nil fontified nil 4532 . 4533) (nil fontified nil 4533 . 4534) (nil fontified nil 4534 . 4535) (nil fontified nil 4535 . 4536) (nil fontified nil 4536 . 4545) (nil fontified nil 4545 . 4548) (nil fontified nil 4548 . 4556) (nil fontified nil 4556 . 4557) (nil fontified nil 4557 . 4562) (nil fontified nil 4562 . 4563) (nil fontified nil 4563 . 4564) (nil fontified nil 4564 . 4565) (nil fontified nil 4565 . 4566) (nil fontified nil 4566 . 4567) (nil fontified nil 4567 . 4568) (nil fontified nil 4568 . 4569) (nil fontified nil 4569 . 4570) (nil fontified nil 4570 . 4571) (nil fontified nil 4571 . 4572) (nil fontified nil 4572 . 4573) (nil fontified nil 4573 . 4577) (nil fontified nil 4577 . 4578) (nil fontified nil 4578 . 4585) (nil fontified nil 4585 . 4593) (nil fontified nil 4593 . 4594) (nil fontified nil 4594 . 4603) (nil fontified nil 4603 . 4610) (nil fontified nil 4610 . 4622) (nil fontified nil 4622 . 4623) (nil fontified nil 4623 . 4624) (nil fontified nil 4624 . 4633) (nil fontified nil 4633 . 4642) (nil fontified nil 4642 . 4643) (nil fontified nil 4643 . 4650) (nil fontified nil 4650 . 4664) (nil fontified nil 4664 . 4673) (nil fontified nil 4673 . 4676) (nil fontified nil 4676 . 4678) (nil fontified nil 4678 . 4682) (nil fontified nil 4682 . 4691) (nil fontified nil 4691 . 4694) (nil fontified nil 4694 . 4697) (nil fontified nil 4697 . 4699) (4217 . 4711) (#("% Center part titles in the TOC
\\renewcommand{\\cftpartleader}{\\hfill} % Remove dots, replace with horizontal space
\\setlength{\\cftpartindent}{0pt} % Remove indentation
\\setlength{\\cftpartnumwidth}{\\textwidth} % Make the part title span the entire width" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 32 (face font-lock-comment-face fontified t) 32 45 (face font-lock-keyword-face fontified t) 45 46 (fontified t) 46 60 (face font-lock-function-name-face fontified t) 60 62 (fontified t) 62 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 115 (face font-lock-comment-face fontified t) 115 125 (face font-lock-keyword-face fontified t) 125 126 (fontified t) 126 140 (face font-lock-variable-name-face fontified t) 140 147 (fontified t) 147 168 (face font-lock-comment-face fontified t) 168 178 (face font-lock-keyword-face fontified t) 178 179 (fontified t) 179 195 (face font-lock-variable-name-face fontified t) 195 197 (fontified t) 197 207 (face font-lock-keyword-face fontified t) 207 209 (fontified t) 209 251 (face font-lock-comment-face fontified t) 251 252 (face font-lock-comment-face rear-nonsticky t fontified t)) . 4217) (undo-tree-id3671 . -251) (undo-tree-id3672 . -251) (undo-tree-id3673 . -31) (undo-tree-id3674 . -251)) ((4217 . 4469) (#("\\makeatletter
\\renewcommand*\\l@part[2]{%
  \\ifnum \\c@tocdepth >-2\\relax
    \\addpenalty{-\\@highpenalty}%
    \\addvspace{2.25em \\@plus\\p@}%
    \\setlength\\@tempdima{3em}%
    \\begingroup
      \\parindent \\z@ \\rightskip \\@pnumwidth
      \\parfillskip -\\@pnumwidth
      {\\leavevmode
       \\hspace*{\\fill}\\centering\\large\\bfseries #1\\hspace*{\\fill}\\llap{#2}}\\par
       \\nobreak
         \\global\\@nobreaktrue
         \\everypar{\\global\\@nobreakfalse\\everypar{}}%
    \\endgroup
  \\fi}
\\makeatother" 0 13 (face font-lock-keyword-face fontified nil) 13 14 (fontified nil) 14 28 (face font-lock-keyword-face fontified nil) 28 35 (face font-lock-function-name-face fontified nil) 35 39 (fontified nil) 39 41 (face font-lock-comment-face fontified nil) 41 43 (fontified nil) 43 49 (face font-lock-keyword-face fontified nil) 49 50 (fontified nil) 50 61 (face font-lock-keyword-face fontified nil) 61 65 (fontified nil) 65 71 (face font-lock-keyword-face fontified nil) 71 76 (fontified nil) 76 87 (face font-lock-keyword-face fontified nil) 87 89 (fontified nil) 89 102 (face font-lock-keyword-face fontified nil) 102 103 (fontified nil) 103 105 (face font-lock-comment-face fontified nil) 105 109 (fontified nil) 109 119 (face font-lock-keyword-face fontified nil) 119 127 (fontified nil) 127 133 (face font-lock-keyword-face fontified nil) 133 136 (face font-lock-keyword-face fontified nil) 136 137 (fontified nil) 137 139 (face font-lock-comment-face fontified nil) 139 143 (fontified nil) 143 153 (face font-lock-keyword-face fontified nil) 153 163 (face font-lock-keyword-face fontified nil) 163 168 (fontified nil) 168 170 (face font-lock-comment-face fontified nil) 170 174 (fontified nil) 174 185 (face font-lock-keyword-face fontified nil) 185 192 (fontified nil) 192 202 (face font-lock-keyword-face fontified nil) 202 203 (fontified nil) 203 206 (face font-lock-keyword-face fontified nil) 206 207 (fontified nil) 207 217 (face font-lock-keyword-face fontified nil) 217 218 (fontified nil) 218 229 (face font-lock-keyword-face fontified nil) 229 236 (fontified nil) 236 248 (face font-lock-keyword-face fontified nil) 248 250 (fontified nil) 250 261 (face font-lock-keyword-face fontified nil) 261 269 (fontified nil) 269 280 (face font-lock-keyword-face fontified nil) 280 281 (fontified nil) 281 288 (fontified nil) 288 296 (face font-lock-keyword-face fontified nil) 296 297 (fontified nil) 297 302 (face font-lock-keyword-face fontified nil) 302 303 (fontified nil) 303 313 (face font-lock-keyword-face fontified nil) 313 314 (face font-lock-keyword-face fontified nil) 314 315 (face font-lock-keyword-face fontified nil) 315 316 (face font-lock-keyword-face fontified nil) 316 317 (face font-lock-keyword-face fontified nil) 317 318 (face font-lock-keyword-face fontified nil) 318 319 (face font-lock-keyword-face fontified nil) 319 328 (face font-lock-keyword-face fontified nil) 328 331 (face (bold) fontified nil) 331 339 (face (font-lock-keyword-face bold) fontified nil) 339 340 (face (bold) fontified nil) 340 345 (face (font-lock-keyword-face bold) fontified nil) 345 346 (face (bold) fontified nil) 346 347 (face (font-lock-keyword-face bold) fontified nil) 347 348 (face (font-lock-keyword-face bold) fontified nil) 348 349 (face (font-lock-keyword-face bold) fontified nil) 349 350 (face (font-lock-keyword-face bold) fontified nil) 350 351 (face (font-lock-keyword-face bold) fontified nil) 351 352 (face (bold) fontified nil) 352 353 (face (bold) fontified nil) 353 354 (face (bold) fontified nil) 354 355 (face (bold) fontified nil) 355 356 (fontified nil) 356 360 (face font-lock-keyword-face fontified nil) 360 361 (fontified nil) 361 368 (fontified nil) 368 376 (face font-lock-keyword-face fontified nil) 376 377 (fontified nil) 377 386 (fontified nil) 386 393 (face font-lock-keyword-face fontified nil) 393 405 (face font-lock-keyword-face fontified nil) 405 406 (face font-lock-keyword-face fontified nil) 406 407 (fontified nil) 407 416 (fontified nil) 416 425 (face font-lock-keyword-face fontified nil) 425 426 (fontified nil) 426 433 (face font-lock-keyword-face fontified nil) 433 447 (face font-lock-keyword-face fontified nil) 447 456 (face font-lock-keyword-face fontified nil) 456 459 (fontified nil) 459 461 (face font-lock-comment-face fontified nil) 461 465 (fontified nil) 465 474 (face font-lock-keyword-face fontified nil) 474 477 (fontified nil) 477 480 (face font-lock-keyword-face fontified nil) 480 482 (fontified nil) 482 493 (face font-lock-keyword-face fontified nil) 493 494 (face font-lock-keyword-face fontified nil rear-nonsticky nil)) . 4217) (undo-tree-id3415 . 166) (undo-tree-id3416 . -346) (undo-tree-id3417 . -346) (undo-tree-id3418 . -493) (undo-tree-id3419 . -341) (undo-tree-id3421 . -346) (undo-tree-id3423 . -346) (undo-tree-id3425 . -346) (undo-tree-id3427 . -346) (undo-tree-id3429 . -346) (undo-tree-id3431 . -376) (undo-tree-id3433 . -376) (undo-tree-id3435 . -376) (undo-tree-id3437 . -376) (undo-tree-id3439 . -376) (undo-tree-id3441 . -376) (undo-tree-id3443 . -375) (undo-tree-id3445 . -375) (undo-tree-id3447 . -375) (undo-tree-id3449 . -375) (undo-tree-id3451 . -375) (undo-tree-id3453 . -375) (undo-tree-id3455 . -375) (undo-tree-id3457 . -375) (undo-tree-id3459 . -375) (undo-tree-id3461 . -375) (undo-tree-id3462 . -376) (undo-tree-id3463 . -375) (undo-tree-id3465 . -405) (undo-tree-id3467 . -405) (undo-tree-id3469 . -405) (undo-tree-id3471 . -405) (undo-tree-id3473 . -405) (undo-tree-id3475 . -405) (undo-tree-id3477 . -405) (undo-tree-id3479 . -375) (undo-tree-id3480 . -405) (undo-tree-id3482 . -405) (undo-tree-id3484 . -405) (undo-tree-id3486 . -405) (undo-tree-id3488 . -405) (undo-tree-id3490 . -405) (undo-tree-id3492 . -405) (undo-tree-id3494 . -405) (undo-tree-id3496 . -405) (undo-tree-id3498 . -405) (undo-tree-id3500 . -405) (undo-tree-id3502 . -405) (undo-tree-id3504 . -405) (undo-tree-id3506 . -405) (undo-tree-id3508 . -405) (undo-tree-id3510 . -405) (undo-tree-id3512 . -405) (undo-tree-id3513 . -405) (undo-tree-id3515 . -377) (undo-tree-id3517 . -405) (undo-tree-id3519 . -405) (undo-tree-id3521 . -405) (undo-tree-id3523 . -405) (undo-tree-id3525 . -405) (undo-tree-id3527 . -405) (undo-tree-id3528 . -405) (undo-tree-id3530 . -405) (undo-tree-id3532 . -405) (undo-tree-id3534 . -405) (undo-tree-id3536 . -405) (undo-tree-id3538 . -405) (undo-tree-id3540 . -405) (undo-tree-id3541 . -405) (undo-tree-id3542 . -405) (undo-tree-id3544 . -405) (undo-tree-id3546 . -405) (undo-tree-id3548 . -405) (undo-tree-id3550 . -405) (undo-tree-id3552 . -405) (undo-tree-id3553 . -405) (undo-tree-id3555 . -405) (undo-tree-id3557 . -405) (undo-tree-id3559 . -405) (undo-tree-id3561 . -405) (undo-tree-id3563 . -405) (undo-tree-id3565 . -405) (undo-tree-id3567 . -405) (undo-tree-id3569 . -405) (undo-tree-id3571 . -405) (undo-tree-id3572 . -405) (undo-tree-id3574 . -328) (undo-tree-id3576 . -328) (undo-tree-id3578 . -328) (undo-tree-id3580 . -328) (undo-tree-id3582 . -328) (undo-tree-id3584 . -328) (undo-tree-id3585 . -405) (undo-tree-id3586 . -328) (undo-tree-id3588 . -313) (undo-tree-id3590 . -313) (undo-tree-id3592 . -313) (undo-tree-id3594 . -313) (undo-tree-id3596 . -313) (undo-tree-id3597 . -328) (undo-tree-id3598 . -313) (undo-tree-id3600 . -313) (undo-tree-id3602 . -313) (undo-tree-id3604 . -313) (undo-tree-id3606 . -313) (undo-tree-id3608 . -313) (undo-tree-id3610 . -313) (undo-tree-id3612 . -313) (undo-tree-id3614 . -313) (undo-tree-id3616 . -313) (undo-tree-id3618 . -313) (undo-tree-id3619 . -313) (undo-tree-id3621 . -313) (undo-tree-id3623 . -313) (undo-tree-id3625 . -313) (undo-tree-id3627 . -313) (undo-tree-id3629 . -313) (undo-tree-id3631 . -313) (undo-tree-id3633 . -313) (undo-tree-id3635 . -313) (undo-tree-id3637 . -313) (undo-tree-id3639 . -313) (undo-tree-id3641 . -313) (undo-tree-id3643 . -313) (undo-tree-id3645 . -313) (undo-tree-id3647 . -313) (undo-tree-id3649 . -313) (undo-tree-id3651 . -313) (undo-tree-id3653 . -313) (undo-tree-id3655 . -313) (undo-tree-id3657 . -313) (undo-tree-id3659 . -313) (undo-tree-id3661 . -313) (undo-tree-id3663 . -313) (undo-tree-id3665 . -313) (undo-tree-id3667 . -313) (undo-tree-id3669 . -405) (undo-tree-id3670 . -313) (nil fontified t 4697 . 4699) (nil fontified t 4694 . 4697) (nil fontified t 4691 . 4694) (nil fontified t 4682 . 4691) (nil fontified t 4678 . 4682) (nil fontified t 4676 . 4678) (nil fontified t 4673 . 4676) (nil fontified t 4664 . 4673) (nil fontified t 4650 . 4664) (nil fontified t 4643 . 4650) (nil fontified t 4642 . 4643) (nil fontified t 4633 . 4642) (nil fontified t 4624 . 4633) (nil fontified t 4623 . 4624) (nil fontified t 4622 . 4623) (nil fontified t 4610 . 4622) (nil fontified t 4603 . 4610) (nil fontified t 4594 . 4603) (nil fontified t 4593 . 4594) (nil fontified t 4585 . 4593) (nil fontified t 4578 . 4585) (nil fontified t 4577 . 4578) (nil fontified t 4573 . 4577) (nil fontified t 4572 . 4573) (nil fontified t 4571 . 4572) (nil fontified t 4570 . 4571) (nil fontified t 4569 . 4570) (nil fontified t 4568 . 4569) (nil fontified t 4567 . 4568) (nil fontified t 4566 . 4567) (nil fontified t 4565 . 4566) (nil fontified t 4564 . 4565) (nil fontified t 4563 . 4564) (nil fontified t 4562 . 4563) (nil fontified t 4557 . 4562) (nil fontified t 4556 . 4557) (nil fontified t 4548 . 4556) (nil fontified t 4545 . 4548) (nil fontified t 4536 . 4545) (nil fontified t 4535 . 4536) (nil fontified t 4534 . 4535) (nil fontified t 4533 . 4534) (nil fontified t 4532 . 4533) (nil fontified t 4531 . 4532) (nil fontified t 4530 . 4531) (nil fontified t 4520 . 4530) (nil fontified t 4519 . 4520) (nil fontified t 4514 . 4519) (nil fontified t 4513 . 4514) (nil fontified t 4505 . 4513) (nil fontified t 4498 . 4505) (nil fontified t 4497 . 4498) (nil fontified t 4486 . 4497) (nil fontified t 4478 . 4486) (nil fontified t 4467 . 4478) (nil fontified t 4465 . 4467) (nil fontified t 4453 . 4465) (nil fontified t 4446 . 4453) (nil fontified t 4435 . 4446) (nil fontified t 4434 . 4435) (nil fontified t 4424 . 4434) (nil fontified t 4423 . 4424) (nil fontified t 4420 . 4423) (nil fontified t 4419 . 4420) (nil fontified t 4409 . 4419) (nil fontified t 4402 . 4409) (nil fontified t 4391 . 4402) (nil fontified t 4387 . 4391) (nil fontified t 4385 . 4387) (nil fontified t 4380 . 4385) (nil fontified t 4370 . 4380) (nil fontified t 4360 . 4370) (nil fontified t 4356 . 4360) (nil fontified t 4354 . 4356) (nil fontified t 4353 . 4354) (nil fontified t 4350 . 4353) (nil fontified t 4344 . 4350) (nil fontified t 4336 . 4344) (nil fontified t 4326 . 4336) (nil fontified t 4322 . 4326) (nil fontified t 4320 . 4322) (nil fontified t 4319 . 4320) (nil fontified t 4306 . 4319) (nil fontified t 4304 . 4306) (nil fontified t 4293 . 4304) (nil fontified t 4288 . 4293) (nil fontified t 4282 . 4288) (nil fontified t 4278 . 4282) (nil fontified t 4267 . 4278) (nil fontified t 4266 . 4267) (nil fontified t 4260 . 4266) (nil fontified t 4258 . 4260) (nil fontified t 4256 . 4258) (nil fontified t 4252 . 4256) (nil fontified t 4245 . 4252) (nil fontified t 4231 . 4245) (nil fontified t 4230 . 4231) (nil fontified t 4217 . 4230) (nil rear-nonsticky t 4710 . 4711)) (26364 63181 530860 325000) 0 nil])
([nil nil ((#("\\renewcommand\\cftpartpresnum{thetuh}
" 0 13 (face font-lock-keyword-face fontified t) 13 28 (face font-lock-function-name-face fontified t) 28 29 (fontified t) 29 35 (fontified t) 35 37 (fontified t)) . 4217) (undo-tree-id2979 . 2) (undo-tree-id2980 . -36) (undo-tree-id2982 . -35) (undo-tree-id2984 . -35) (undo-tree-id2986 . -35) (undo-tree-id2988 . -35) (undo-tree-id2990 . -35) (undo-tree-id2992 . -35) (undo-tree-id2994 . -35) (undo-tree-id2996 . -35) (undo-tree-id2998 . -35) (undo-tree-id3000 . -35) (undo-tree-id3002 . -35) (undo-tree-id3004 . -35) (undo-tree-id3006 . -35) (undo-tree-id3007 . -29) (undo-tree-id3008 . -35) (undo-tree-id3010 . -35) 4252) ((4217 . 4254) (t 26364 62894 934213 172000)) (26364 62894 893032 775000) 0 nil])
([nil nil ((#("\\renewcommand\\cftpartpresnum{thetuh}
" 0 13 (face font-lock-keyword-face fontified t) 13 28 (face font-lock-function-name-face fontified t) 28 29 (fontified t) 29 35 (fontified t) 35 37 (fontified t)) . 4217) (undo-tree-id2970 . 2) (undo-tree-id2971 . -36) (undo-tree-id2973 . -37) (undo-tree-id2975 . -37) (undo-tree-id2977 . -29)) ((4217 . 4254)) (26364 62865 616395 276000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4712) (undo-tree-id3675 . 1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1)) ((4712 . 4713)) (26364 63181 943673 34000) 0 nil])
nil
([nil nil ((#("\\renewcommand\\cftpartleader{ahaha\\hfill}
" 0 13 (face font-lock-keyword-face fontified t) 13 27 (face font-lock-function-name-face fontified t) 27 33 (fontified t) 33 39 (face font-lock-keyword-face fontified t) 39 40 (fontified t rear-nonsticky t) 40 41 (fontified t)) . 4217) (undo-tree-id2965 . -41) (undo-tree-id2966 . 41) (undo-tree-id2967 . -40) (undo-tree-id2969 . -41)) ((4217 . 4258) (t 26364 62858 728595 722000)) (26364 62858 699392 544000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 4530)) ((4530 . 4531)) (26364 63182 519598 535000) 0 nil])
nil
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified t)) . 4530)) ((4530 . 4531)) (26364 63183 176019 938000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-keyword-face fontified t)) . 4530)) ((4530 . 4531)) (26364 63183 415946 179000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-keyword-face fontified t)) . 4530)) ((4530 . 4531)) (26364 63183 591329 330000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-keyword-face fontified t)) . 4530)) ((4530 . 4531)) (26364 63183 767473 362000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 4530)) ((4530 . 4531)) (26364 63183 943302 497000) 0 nil])
([nil nil ((4540 . 4547) (#("i" 0 1 (face (bold) fontified nil)) . 4540) (4539 . 4541)) ((#("\\i" 0 1 (face (font-lock-keyword-face bold) fontified nil) 1 2 (face (bold) fontified nil)) . 4539) (4540 . 4541) (#("itshape" 0 7 (face (font-lock-keyword-face bold) fontified t)) . 4540) (t 26364 63151 903421 817000)) (26364 63184 120141 893000) 0 nil])
([nil nil ((#("\\llap{#2}" 0 1 (face (font-lock-keyword-face bold) fontified t) 1 2 (face (font-lock-keyword-face bold) fontified t) 2 3 (face (font-lock-keyword-face bold) fontified t) 3 4 (face (font-lock-keyword-face bold) fontified t) 4 5 (face (font-lock-keyword-face bold) fontified t) 5 6 (face (bold) fontified t) 6 7 (face (bold) fontified t) 7 8 (face (bold) fontified t) 8 9 (face (bold) fontified t)) . 4565) (undo-tree-id3680 . -8) (undo-tree-id3681 . -8) (undo-tree-id3682 . -8) (undo-tree-id3683 . -8) 4573 (t 26364 63151 903421 817000)) nil (26364 63189 266695 309000) 0 nil] [nil nil ((4624 . 4628) (t 26364 63151 903421 817000)) ((#("uuuu" 0 4 (face font-lock-keyword-face fontified t)) . 4624)) (26364 63178 696395 963000) 0 nil] [nil nil ((#("\\" 0 1 (face (font-lock-keyword-face bold) fontified t)) . 4565) (undo-tree-id3131 . -1) (undo-tree-id3133 . -1) (undo-tree-id3135 . -1) (t 26364 63123 920901 519000)) ((4565 . 4566)) (26364 63149 672300 363000) 0 nil])
([nil nil ((#("\\renewcommand{\\cftpartfont}{\\itshape\\bfseries}
" 0 1 (face font-lock-keyword-face fontified t) 1 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 18 (face font-lock-function-name-face fontified t) 18 22 (face font-lock-function-name-face fontified t) 22 26 (face font-lock-function-name-face fontified t) 26 28 (fontified t) 28 29 (face font-lock-keyword-face fontified t) 29 31 (face font-lock-keyword-face fontified t) 31 36 (face font-lock-keyword-face fontified t) 36 42 (face font-lock-keyword-face fontified t) 42 45 (face font-lock-keyword-face fontified t) 45 46 (fontified t) 46 47 (fontified t)) . 4169) (undo-tree-id3684 . -28) (undo-tree-id3685 . -46) (undo-tree-id3686 . -28) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -31) 4200 (t 26364 63189 302335 530000)) nil (26364 63212 812318 459000) 0 nil])
([nil nil ((4624 . 4629) (#("uuuue" 0 5 (face font-lock-keyword-face fontified t)) . 4624)) ((4624 . 4629) (#("UUUUE" 0 5 (face font-lock-keyword-face fontified t)) . 4624) (undo-tree-id3335 . -4) (undo-tree-id3336 . -4) (undo-tree-id3337 . -5) (undo-tree-id3338 . -5) (undo-tree-id3339 . -5) (undo-tree-id3340 . -5) (undo-tree-id3341 . -5) (undo-tree-id3342 . -5) (undo-tree-id3343 . -5) (undo-tree-id3344 . -5) (undo-tree-id3345 . -5) (undo-tree-id3346 . -5) (undo-tree-id3347 . -5) (undo-tree-id3348 . -5) (undo-tree-id3349 . -5) (undo-tree-id3350 . -5) (undo-tree-id3351 . -5) (undo-tree-id3352 . -5) (undo-tree-id3353 . -5) (undo-tree-id3354 . -5) (undo-tree-id3355 . -5) (undo-tree-id3356 . -5) (undo-tree-id3357 . -5) (undo-tree-id3358 . -5) (undo-tree-id3359 . -5) (undo-tree-id3360 . -5) (undo-tree-id3361 . -5) (undo-tree-id3362 . -5) (undo-tree-id3363 . -5) (undo-tree-id3364 . -5) (undo-tree-id3365 . -5) (undo-tree-id3366 . -5) (undo-tree-id3367 . -5) (undo-tree-id3368 . -5) (undo-tree-id3369 . -5) (undo-tree-id3370 . -5) (undo-tree-id3371 . -5) (undo-tree-id3372 . -5) (undo-tree-id3373 . -5) (undo-tree-id3374 . -5) (undo-tree-id3375 . -5) (undo-tree-id3376 . -5) (undo-tree-id3377 . -5) (undo-tree-id3378 . -5) (undo-tree-id3379 . -5) (undo-tree-id3380 . -5) (undo-tree-id3381 . -5) (undo-tree-id3382 . -5) (undo-tree-id3383 . -5) (undo-tree-id3384 . -5) (undo-tree-id3385 . -5) (undo-tree-id3386 . -5) (undo-tree-id3387 . -5) (undo-tree-id3388 . -5) (undo-tree-id3389 . -5) (undo-tree-id3390 . -5) (undo-tree-id3391 . -5) (undo-tree-id3392 . -5) (undo-tree-id3393 . -5) (undo-tree-id3394 . -5) (undo-tree-id3395 . -5) (undo-tree-id3396 . -5) (undo-tree-id3397 . -5) (undo-tree-id3398 . -5) (undo-tree-id3399 . -5) (undo-tree-id3400 . -5) (undo-tree-id3401 . -4) (undo-tree-id3402 . -4) (undo-tree-id3403 . -4) (undo-tree-id3404 . -4) (undo-tree-id3405 . -4) (undo-tree-id3406 . -4) (undo-tree-id3407 . -4) (undo-tree-id3408 . -4) (undo-tree-id3409 . -5) (undo-tree-id3410 . -4) (undo-tree-id3411 . -4) (undo-tree-id3412 . -4) (undo-tree-id3413 . -5) (undo-tree-id3414 . -4)) (26364 63178 536248 818000) 0 nil])
([nil nil ((#("l" 0 1 (face (bold) fontified t)) . 4565) (undo-tree-id3129 . -1)) ((4565 . 4566)) (26364 63149 512940 510000) 0 nil])
([nil nil ((4173 . 4176) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4173) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (4167 . 4174) (t 26364 63212 848320 179000)) nil (26364 63292 244775 967000) 0 nil])
([nil nil ((4629 . 4630)) ((#("u" 0 1 (face font-lock-keyword-face fontified t)) . 4629) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1)) (26364 63178 392363 290000) 0 nil])
([nil nil ((#("l" 0 1 (face (bold) fontified t)) . 4565) (undo-tree-id3127 . -1)) ((4565 . 4566)) (26364 63149 368418 264000) 0 nil])
([nil nil ((4299 . 4300) (#("2" 0 1 (fontified t)) . 4299) (undo-tree-id3697 . -1) (t 26364 63292 955998 638000)) nil (26364 63309 226266 188000) 0 nil] [nil nil ((4053 . 4054) (#("2" 0 1 (fontified t)) . 4053) (undo-tree-id3696 . -1) (t 26364 63222 574705 88000)) ((4053 . 4054) (#("1" 0 1 (fontified t)) . 4053) (t 26364 63284 962897 39000)) (26364 63284 932445 814000) 0 nil])
([nil nil ((4630 . 4649) (#("
         \\everypar" 0 1 (fontified t) 1 10 (fontified t) 10 19 (face font-lock-keyword-face fontified t)) . 4630)) ((4630 . 4649) (#("
         \\EVERYPAR" 0 1 (fontified t) 1 10 (fontified t) 10 19 (face font-lock-keyword-face fontified t)) . 4630) (undo-tree-id3228 . -19) (undo-tree-id3229 . -19) (undo-tree-id3230 . -19) (undo-tree-id3231 . -19) (undo-tree-id3232 . -19) (undo-tree-id3233 . -19) (undo-tree-id3234 . -19) (undo-tree-id3235 . -19) (undo-tree-id3236 . -19) (undo-tree-id3237 . -19) (undo-tree-id3238 . -19) (undo-tree-id3239 . -19) (undo-tree-id3240 . -19) (undo-tree-id3241 . -19) (undo-tree-id3242 . -19) (undo-tree-id3243 . -19) (undo-tree-id3244 . -19) (undo-tree-id3245 . -19) (undo-tree-id3246 . -19) (undo-tree-id3247 . -19) (undo-tree-id3248 . -19) (undo-tree-id3249 . -19) (undo-tree-id3250 . -19) (undo-tree-id3251 . -19) (undo-tree-id3252 . -19) (undo-tree-id3253 . -19) (undo-tree-id3254 . -19) (undo-tree-id3255 . -19) (undo-tree-id3256 . -19) (undo-tree-id3257 . -19) (undo-tree-id3258 . -19) (undo-tree-id3259 . -19) (undo-tree-id3260 . -19) (undo-tree-id3261 . -19) (undo-tree-id3262 . -1) (undo-tree-id3263 . -19) (undo-tree-id3264 . -19) (undo-tree-id3265 . -19) (undo-tree-id3266 . -19) (undo-tree-id3267 . -19) (undo-tree-id3268 . -19) (undo-tree-id3269 . -19) (undo-tree-id3270 . -19) (undo-tree-id3271 . -19) (undo-tree-id3272 . -19) (undo-tree-id3273 . -19) (undo-tree-id3274 . -19) (undo-tree-id3275 . -19) (undo-tree-id3276 . -19) (undo-tree-id3277 . -19) (undo-tree-id3278 . -19) (undo-tree-id3279 . -19) (undo-tree-id3280 . -19) (undo-tree-id3281 . -19)) (26364 63178 168246 932000) 0 nil])
([nil nil ((#("a" 0 1 (face (bold) fontified t)) . 4565) (undo-tree-id3125 . -1)) ((4565 . 4566)) (26364 63149 208522 125000) 0 nil])
([nil current ((4299 . 4300) (#("0" 0 1 (fontified t)) . 4299) (undo-tree-id3698 . -1) (t 26364 63309 278858 693000)) nil (26364 63317 941181 49000) 0 nil])
nil
([nil nil ((4649 . 4657) (#("{\\global" 0 1 (fontified t) 1 8 (face font-lock-keyword-face fontified t)) . 4649)) ((4649 . 4657) (#("{\\GLOBAL" 0 1 (fontified t) 1 8 (face font-lock-keyword-face fontified t)) . 4649) (undo-tree-id3192 . -8) (undo-tree-id3193 . -8) (undo-tree-id3194 . -8) (undo-tree-id3195 . -8) (undo-tree-id3196 . -8) (undo-tree-id3197 . -8) (undo-tree-id3198 . -8) (undo-tree-id3199 . -8) (undo-tree-id3200 . -8) (undo-tree-id3201 . -8) (undo-tree-id3202 . -8) (undo-tree-id3203 . -8) (undo-tree-id3204 . -8) (undo-tree-id3205 . -8) (undo-tree-id3206 . -8) (undo-tree-id3207 . -8) (undo-tree-id3208 . -8) (undo-tree-id3209 . -8) (undo-tree-id3210 . -8) (undo-tree-id3211 . -8) (undo-tree-id3212 . -8) (undo-tree-id3213 . -8) (undo-tree-id3214 . -8) (undo-tree-id3215 . -8) (undo-tree-id3216 . -8) (undo-tree-id3217 . -8) (undo-tree-id3218 . -8) (undo-tree-id3219 . -8) (undo-tree-id3220 . -8) (undo-tree-id3221 . -8) (undo-tree-id3222 . -8) (undo-tree-id3223 . -8) (undo-tree-id3224 . -8) (undo-tree-id3225 . -8) (undo-tree-id3226 . -8) (undo-tree-id3227 . -8)) (26364 63177 848314 333000) 0 nil])
([nil nil ((#("p" 0 1 (face (bold) fontified t)) . 4565) (undo-tree-id3123 . -1)) ((4565 . 4566)) (26364 63149 48289 677000) 0 nil])
nil
([nil nil ((4657 . 4662)) ((#("uuuuu" 0 5 (face font-lock-keyword-face fontified t)) . 4657) (undo-tree-id3173 . -5) (undo-tree-id3174 . -5) (undo-tree-id3175 . -5) (undo-tree-id3176 . -5) (undo-tree-id3177 . -5) (undo-tree-id3178 . -5) (undo-tree-id3179 . -5) (undo-tree-id3180 . -5) (undo-tree-id3181 . -5) (undo-tree-id3182 . -5) (undo-tree-id3183 . -5) (undo-tree-id3184 . -5) (undo-tree-id3185 . -5) (undo-tree-id3186 . -5) (undo-tree-id3187 . -5) (undo-tree-id3188 . -5) (undo-tree-id3189 . -5) (undo-tree-id3190 . -5) (undo-tree-id3191 . -5)) (26364 63177 447688 32000) 0 nil])
([nil nil ((#("{" 0 1 (face (bold) fontified t)) . 4565) (undo-tree-id3121 . -1)) ((4565 . 4566)) (26364 63148 888559 970000) 0 nil])
([nil nil ((4662 . 4667)) ((#("uuuuu" 0 5 (face font-lock-keyword-face fontified t)) . 4662) (undo-tree-id3172 . -5)) (26364 63176 846452 554000) 0 nil])
([nil nil ((#("#" 0 1 (face (bold) fontified t)) . 4565) (undo-tree-id3119 . -1)) ((4565 . 4566)) (26364 63148 536356 729000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4607) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (4603 . 4608) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4603) (undo-tree-id3143 . -1) (4602 . 4604) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4602) (undo-tree-id3144 . -1) (4595 . 4603)) ((#("uuuuuuui" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (face font-lock-keyword-face fontified nil)) . 4595) (undo-tree-id3145 . -7) (undo-tree-id3146 . -7) (undo-tree-id3147 . -7) (undo-tree-id3148 . -7) (undo-tree-id3149 . -7) (undo-tree-id3150 . -7) (undo-tree-id3151 . -7) (undo-tree-id3152 . -8) (undo-tree-id3153 . -7) (4602 . 4603) (#("ii" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil)) . 4602) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -2) (undo-tree-id3162 . -1) (4603 . 4604) (#("iuuui" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 4603) (undo-tree-id3163 . -3) (undo-tree-id3164 . -5) (undo-tree-id3165 . -5) (undo-tree-id3166 . -5) (undo-tree-id3167 . -5) (undo-tree-id3168 . -5) (undo-tree-id3169 . -4) (undo-tree-id3170 . -3) (undo-tree-id3171 . -3) (4607 . 4608)) (26364 63176 846260 620000) 0 nil])
([nil nil ((#("2" 0 1 (face (bold) fontified t)) . 4565) (undo-tree-id3117 . -1)) ((4565 . 4566)) (26364 63148 9269 74000) 0 nil])
nil
([nil nil ((#("}" 0 1 (fontified t)) . 4565) (undo-tree-id3115 . -1)) ((4565 . 4566) (t 26364 63131 847337 900000)) (26364 63131 808971 883000) 0 nil])
nil
