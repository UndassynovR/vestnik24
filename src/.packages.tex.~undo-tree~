(undo-tree-save-format-version . 1)
"e2501d10d807b422b6e8ae1f5f376ffe5d17cffa"
[nil nil nil nil (26363 37413 829485 387000) 0 nil]
([nil nil ((1969 . 1972) (#("3" 0 1 (fontified t)) . -1969) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 1970 (t 26362 26199 117633 140000)) nil (26363 37413 829483 993000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 1972) (undo-tree-id3 . 1) (undo-tree-id4 . -1) (undo-tree-id5 . -1)) nil (26363 37413 829479 962000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1972) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) nil (26363 37413 829473 791000) 0 nil])
([nil nil ((1967 . 1970) (#("h" 0 1 (face (font-lock-keyword-face bold) fontified t)) . -1967) (undo-tree-id9 . -1) 1968 (1965 . 1968) (#("?" 0 1 (face (bold) fontified t)) . -1965) (undo-tree-id10 . -1) 1966 (1965 . 1966) (t 26363 37413 874521 432000)) nil (26363 37434 899448 474000) 0 nil])
([nil nil ((#("\\" 0 1 (face (font-lock-keyword-face bold) fontified t)) . 1965) (t 26363 37434 943897 541000)) nil (26363 37490 247627 110000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 1965)) nil (26363 37490 247626 353000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-keyword-face fontified t)) . 1965)) nil (26363 37490 247625 563000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-keyword-face fontified t)) . 1965) (undo-tree-id14 . -1)) nil (26363 37490 247624 543000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-keyword-face fontified t)) . 1965) (undo-tree-id13 . -1)) nil (26363 37490 247622 700000) 0 nil])
([nil nil ((1968 . 1973) (#("m" 0 1 (face (font-lock-keyword-face bold) fontified t)) . -1968) (undo-tree-id11 . -1) 1969 (1966 . 1969) (#("i" 0 1 (face (font-lock-keyword-face bold) fontified nil)) . -1966) (undo-tree-id12 . -1) (1965 . 1967)) nil (26363 38462 357489 128000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3975 . 3976) (nil fontified nil 3809 . 3976) (3809 . 3976) (t 26363 38463 283388 980000)) nil (26363 38519 371672 934000) 0 nil] [nil nil ((403 . 419) (#("i" 0 1 (fontified nil)) . -403) (undo-tree-id15 . -1) (401 . 404) (t 26363 37490 292258 385000)) ((#("[li" 0 2 (fontified nil) 2 3 (fontified nil)) . 401) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -3) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (403 . 404) (#("inktocpage=true]" 0 16 (fontified t)) . 403) (undo-tree-id130 . -15) (undo-tree-id131 . -3) (undo-tree-id132 . -15) (undo-tree-id133 . -15) (undo-tree-id134 . -15) (undo-tree-id135 . -15) (undo-tree-id136 . -15) (undo-tree-id137 . -15) (undo-tree-id138 . -15) (undo-tree-id139 . -15) (undo-tree-id140 . -15) (undo-tree-id141 . -15) (undo-tree-id142 . -15) (undo-tree-id143 . -15) (undo-tree-id144 . -15) (undo-tree-id145 . -15) (undo-tree-id146 . -15) (undo-tree-id147 . -15) (undo-tree-id148 . -15) (undo-tree-id149 . -15) (undo-tree-id150 . -15) (undo-tree-id151 . -15) (undo-tree-id152 . -15) (undo-tree-id153 . -15) (undo-tree-id154 . -15) (undo-tree-id155 . -15) (undo-tree-id156 . -15) (undo-tree-id157 . -15) (undo-tree-id158 . -15) (undo-tree-id159 . -15) (undo-tree-id160 . -15) (undo-tree-id161 . -15) (undo-tree-id162 . -15) (undo-tree-id163 . -15) (undo-tree-id164 . -15) (undo-tree-id165 . -15) (undo-tree-id166 . -15) (undo-tree-id167 . -15) (undo-tree-id168 . -15) (undo-tree-id169 . -15) (undo-tree-id170 . -15) (undo-tree-id171 . -15) (undo-tree-id172 . -15) (undo-tree-id173 . -15) (undo-tree-id174 . -15) (undo-tree-id175 . -15) (undo-tree-id176 . -15) (undo-tree-id177 . -15) (undo-tree-id178 . -15) (undo-tree-id179 . -15) (undo-tree-id180 . -15) (undo-tree-id181 . -15) (undo-tree-id182 . -15) (undo-tree-id183 . -15) (undo-tree-id184 . -15) (undo-tree-id185 . -15) (undo-tree-id186 . -15) (undo-tree-id187 . -15) (undo-tree-id188 . -15) (undo-tree-id189 . -15) (undo-tree-id190 . -15) (undo-tree-id191 . -15) (undo-tree-id192 . -15) (undo-tree-id193 . -15) (undo-tree-id194 . -15) (undo-tree-id195 . -15) (undo-tree-id196 . -15) (undo-tree-id197 . -15) (undo-tree-id198 . -15) (undo-tree-id199 . -15) (undo-tree-id200 . -15) (undo-tree-id201 . -15) (undo-tree-id202 . -15) (undo-tree-id203 . -15) (undo-tree-id204 . -15) (undo-tree-id205 . -15) (undo-tree-id206 . -15) (undo-tree-id207 . -15) (undo-tree-id208 . -15) (undo-tree-id209 . -15) (undo-tree-id210 . -15) (undo-tree-id211 . -15) (undo-tree-id212 . -15) (undo-tree-id213 . -15) (undo-tree-id214 . -15) (undo-tree-id215 . -15) (undo-tree-id216 . -15) (undo-tree-id217 . -15) (undo-tree-id218 . -15) (undo-tree-id219 . -15) (undo-tree-id220 . -15) (undo-tree-id221 . -15) (undo-tree-id222 . -15) (undo-tree-id223 . -15) (undo-tree-id224 . -15) (undo-tree-id225 . -15) (undo-tree-id226 . -15) (undo-tree-id227 . -15) (undo-tree-id228 . -15) (undo-tree-id229 . -15) (undo-tree-id230 . -15) (undo-tree-id231 . -15) (undo-tree-id232 . -15) (undo-tree-id233 . -15) (undo-tree-id234 . -15) (undo-tree-id235 . -15) (undo-tree-id236 . -15) (undo-tree-id237 . -15) (undo-tree-id238 . -15) (undo-tree-id239 . -15) (undo-tree-id240 . -15) (undo-tree-id241 . -15) (undo-tree-id242 . -15) (undo-tree-id243 . -15) (t 26363 38445 317256 217000)) (26363 38445 274759 25000) 0 nil])
([nil nil ((3976 . 3977) 3975) nil (26363 38563 538219 667000) 0 nil])
nil
([nil nil ((apply -9 3868 3987 undo--wrap-and-run-primitive-undo 3868 3987 ((3948 . 3951) (3909 . 3912) (3868 . 3871)))) ((apply 9 3868 3978 undo--wrap-and-run-primitive-undo 3868 3978 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 3868) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 3909) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 3948) 3859))) (26363 38564 402231 557000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 3859)) ((3859 . 3860)) (26363 38564 562022 27000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-keyword-face fontified t)) . 3859)) ((3859 . 3860) (t 26363 38538 414489 300000)) (26363 38565 58289 46000) 0 nil])
([nil nil ((3859 . 3861) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 3859) (undo-tree-id273 . -1) (3859 . 3860) (t 26363 38538 414489 300000)) ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 3859) (undo-tree-id245 . -1) (3859 . 3860) (#("it" 0 2 (face font-lock-keyword-face fontified t)) . 3859) (undo-tree-id246 . -1) (undo-tree-id248 . -1) (undo-tree-id250 . -1) (undo-tree-id252 . -1) (undo-tree-id254 . -1) (undo-tree-id256 . -1) (undo-tree-id258 . -1) (undo-tree-id260 . -1) (undo-tree-id262 . -1) (undo-tree-id264 . -1) (undo-tree-id266 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (t 26363 38519 431720 207000)) (26363 38565 474202 406000) 0 nil])
([nil nil ((apply -3 3830 3912 undo--wrap-and-run-primitive-undo 3830 3912 ((3830 . 3833) 3868))) nil (26363 38569 511465 284000) 0 nil])
([nil nil ((apply -3 3809 3874 undo--wrap-and-run-primitive-undo 3809 3874 ((3809 . 3812) 3830))) nil (26363 38601 444460 960000) 0 nil])
([nil nil ((apply 6 3809 3868 undo--wrap-and-run-primitive-undo 3809 3868 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3830) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3809) 3874))) nil (26363 38645 27089 789000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3867 . 3868) (#("
" 0 1 (fontified nil)) . -3905) (3867 . 3906) 3854) nil (26363 38645 27088 643000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . 3886) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1)) nil (26363 38645 27087 85000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-function-name-face fontified t)) . 3886) (undo-tree-id278 . -1) (undo-tree-id279 . -1)) nil (26363 39025 972941 525000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face fontified t)) . 3886)) ((3886 . 3887)) (26363 39026 564888 0) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-function-name-face fontified t)) . 3886)) ((3886 . 3887)) (26363 39026 740827 888000) 0 nil])
([nil nil ((3886 . 3890)) ((#("part" 0 4 (face font-lock-function-name-face fontified t)) . 3886)) (26363 39026 884783 899000) 0 nil])
([nil nil ((3904 . 3905)) ((#("?" 0 1 (fontified t)) . 3904) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1)) (26363 39027 28916 512000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . 3904) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1)) ((3904 . 3905)) (26363 39027 220859 461000) 0 nil])
([nil nil ((3910 . 3913) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 3910) (3904 . 3911)) ((#("\\bfseri" 0 6 (face font-lock-keyword-face fontified nil) 6 7 (face font-lock-keyword-face fontified nil)) . 3904) (3910 . 3911) (#("ies" 0 3 (face font-lock-keyword-face fontified t)) . 3910)) (26363 39027 396927 963000) 0 nil])
([nil nil ((4263 . 4269) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 4263) (4260 . 4264)) ((#("\\noi" 0 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 4260) (4263 . 4264) (#("indent" 0 6 (face font-lock-keyword-face fontified t)) . 4263)) (26363 39030 197548 422000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4437 . 4438) (nil fontified nil 4092 . 4438) (4092 . 4438) (#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\protect\\numberline{}%
    #1 \\\\ % Authors
    \\protect\\numberline{}%
    \\noindent\\normalfont\\normalsize\\itshape #2 % Section Title
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 36 (fontified t) 36 38 (face font-lock-comment-face fontified t) 38 40 (fontified t) 40 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 52 (face font-lock-function-name-face fontified t) 52 53 (fontified t) 53 55 (face font-lock-comment-face fontified t) 55 57 (fontified t) 57 73 (face font-lock-keyword-face fontified t) 73 88 (fontified t) 88 90 (face font-lock-comment-face fontified t) 90 94 (fontified t) 94 102 (face font-lock-keyword-face fontified t) 102 113 (face font-lock-keyword-face fontified t) 113 115 (fontified t) 115 117 (face font-lock-comment-face fontified t) 117 123 (fontified t) 123 124 (fontified t) 124 125 (face font-lock-warning-face fontified t) 125 126 (face font-lock-warning-face fontified t) 126 127 (fontified t) 127 137 (face font-lock-comment-face fontified t) 137 141 (fontified t) 141 149 (face font-lock-keyword-face fontified t) 149 160 (face font-lock-keyword-face fontified t) 160 162 (fontified t) 162 164 (face font-lock-comment-face fontified t) 164 168 (fontified t) 168 171 (face font-lock-keyword-face fontified t) 171 177 (face font-lock-keyword-face fontified t) 177 178 (face font-lock-keyword-face fontified t) 178 188 (face font-lock-keyword-face fontified t) 188 199 (face font-lock-keyword-face fontified t) 199 207 (face font-lock-keyword-face fontified t) 207 211 (fontified t) 211 227 (face font-lock-comment-face fontified t) 227 230 (fontified t) 230 232 (face font-lock-comment-face fontified t) 232 234 (fontified t) 234 245 (face font-lock-keyword-face fontified t) 245 246 (fontified t) 246 252 (face font-lock-variable-name-face fontified t) 252 256 (fontified t) 256 258 (face font-lock-comment-face fontified t) 258 260 (fontified t) 260 271 (face font-lock-keyword-face fontified t) 271 272 (fontified t) 272 277 (face font-lock-variable-name-face fontified t) 277 281 (fontified t) 281 283 (face font-lock-comment-face fontified t) 283 285 (fontified t) 285 296 (face font-lock-keyword-face fontified t) 296 297 (fontified t) 297 305 (face font-lock-variable-name-face fontified t) 305 309 (fontified t) 309 311 (face font-lock-comment-face fontified t) 311 313 (fontified t)) . 4092) (undo-tree-id1013 . -313) (undo-tree-id1014 . 136) (undo-tree-id1015 . -312) (undo-tree-id1016 . -311) (undo-tree-id1017 . -313) (undo-tree-id1018 . -123) (undo-tree-id1019 . -123) (undo-tree-id1020 . -124) (undo-tree-id1021 . -313) (undo-tree-id1022 . -313) (undo-tree-id1023 . -313) (undo-tree-id1024 . -168) (undo-tree-id1025 . -168) (undo-tree-id1026 . -38) (undo-tree-id1027 . -38) (undo-tree-id1028 . -38) (undo-tree-id1029 . -38) (undo-tree-id1030 . -38) (undo-tree-id1031 . -38) (undo-tree-id1032 . -38) (undo-tree-id1033 . -38) (undo-tree-id1034 . -38) (undo-tree-id1035 . -38) (undo-tree-id1036 . -38) (undo-tree-id1037 . -38) (undo-tree-id1038 . -38) (undo-tree-id1039 . -38) (undo-tree-id1040 . -38) (undo-tree-id1041 . -38) (undo-tree-id1042 . -38) (undo-tree-id1043 . -55) (undo-tree-id1044 . -55) (undo-tree-id1045 . -55) (undo-tree-id1046 . -55) (undo-tree-id1047 . -55) (undo-tree-id1048 . -90) (undo-tree-id1049 . -90) (undo-tree-id1050 . -90) (undo-tree-id1051 . -90) (undo-tree-id1052 . -90) (undo-tree-id1053 . -117) (undo-tree-id1054 . -117) (undo-tree-id1055 . -117) (undo-tree-id1056 . -117) (undo-tree-id1057 . -117) (undo-tree-id1058 . -137) (undo-tree-id1059 . -137) (undo-tree-id1060 . -137) (undo-tree-id1061 . -137) (undo-tree-id1062 . -137) (undo-tree-id1063 . -164) (undo-tree-id1064 . -164) (undo-tree-id1065 . -164) (undo-tree-id1066 . -164) (undo-tree-id1067 . -164) (undo-tree-id1068 . -227) (undo-tree-id1069 . -227) (undo-tree-id1070 . -227) (undo-tree-id1071 . -227) (undo-tree-id1072 . -227) (undo-tree-id1073 . -232) (undo-tree-id1074 . -232) (undo-tree-id1075 . -232) (undo-tree-id1076 . -232) (undo-tree-id1077 . -232) (undo-tree-id1078 . -258) (undo-tree-id1079 . -258) (undo-tree-id1080 . -258) (undo-tree-id1081 . -258) (undo-tree-id1082 . -258) (undo-tree-id1083 . -283) (undo-tree-id1084 . -283) (undo-tree-id1085 . -283) (undo-tree-id1086 . -283) (undo-tree-id1087 . -283) (undo-tree-id1088 . -311) (undo-tree-id1089 . -311) (undo-tree-id1090 . -311) (undo-tree-id1091 . -311) (undo-tree-id1092 . -311) (undo-tree-id1093 . -311) (undo-tree-id1094 . -311) (undo-tree-id1095 . -311) (undo-tree-id1096 . -311) (undo-tree-id1097 . -311) (undo-tree-id1098 . -311) (undo-tree-id1099 . -311) (undo-tree-id1100 . -311) (undo-tree-id1101 . -311) (undo-tree-id1102 . -311) (undo-tree-id1103 . -311) (undo-tree-id1104 . -311) (undo-tree-id1105 . -311) (undo-tree-id1106 . -311) (undo-tree-id1107 . -311) (undo-tree-id1108 . -311) (undo-tree-id1109 . -311) (undo-tree-id1110 . -313) (undo-tree-id1111 . -313) 4405 (t 26363 39033 249808 384000)) nil (26363 39278 558285 543000) 0 nil] [nil nil ((nil rear-nonsticky nil 4397 . 4398) (nil fontified nil 4092 . 4103) (nil fontified nil 4103 . 4104) (nil fontified nil 4104 . 4123) (nil fontified nil 4123 . 4128) (nil fontified nil 4128 . 4130) (nil fontified nil 4130 . 4132) (nil fontified nil 4132 . 4141) (nil fontified nil 4141 . 4142) (nil fontified nil 4142 . 4144) (nil fontified nil 4144 . 4145) (nil fontified nil 4145 . 4147) (nil fontified nil 4147 . 4149) (nil fontified nil 4149 . 4165) (nil fontified nil 4165 . 4180) (nil fontified nil 4180 . 4182) (nil fontified nil 4182 . 4186) (nil fontified nil 4186 . 4193) (nil fontified nil 4193 . 4194) (nil fontified nil 4194 . 4196) (nil fontified nil 4196 . 4198) (nil fontified nil 4198 . 4200) (nil fontified nil 4200 . 4201) (nil fontified nil 4201 . 4247) (nil fontified nil 4247 . 4251) (nil fontified nil 4251 . 4252) (nil fontified nil 4252 . 4262) (nil fontified nil 4262 . 4273) (nil fontified nil 4273 . 4281) (nil fontified nil 4281 . 4285) (nil fontified nil 4285 . 4311) (nil fontified nil 4311 . 4312) (nil fontified nil 4312 . 4315) (nil fontified nil 4315 . 4316) (nil fontified nil 4316 . 4317) (nil fontified nil 4317 . 4319) (nil fontified nil 4319 . 4330) (nil fontified nil 4330 . 4331) (nil fontified nil 4331 . 4337) (nil fontified nil 4337 . 4341) (nil fontified nil 4341 . 4343) (nil fontified nil 4343 . 4345) (nil fontified nil 4345 . 4356) (nil fontified nil 4356 . 4357) (nil fontified nil 4357 . 4362) (nil fontified nil 4362 . 4366) (nil fontified nil 4366 . 4368) (nil fontified nil 4368 . 4370) (nil fontified nil 4370 . 4381) (nil fontified nil 4381 . 4382) (nil fontified nil 4382 . 4390) (nil fontified nil 4390 . 4394) (nil fontified nil 4394 . 4396) (4092 . 4398) (#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\protect\\numberline{}%
    #1 \\\\ % Authors
    \\protect\\numberline{}%
    \\noindent\\normalfont\\normalsize\\itshape #2 % Section Title
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 36 (fontified t) 36 38 (face font-lock-comment-face fontified t) 38 40 (fontified t) 40 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 52 (face font-lock-function-name-face fontified t) 52 53 (fontified t) 53 55 (face font-lock-comment-face fontified t) 55 57 (fontified t) 57 73 (face font-lock-keyword-face fontified t) 73 88 (fontified t) 88 90 (face font-lock-comment-face fontified t) 90 94 (fontified t) 94 102 (face font-lock-keyword-face fontified t) 102 113 (face font-lock-keyword-face fontified t) 113 115 (fontified t) 115 117 (face font-lock-comment-face fontified t) 117 123 (fontified t) 123 124 (fontified t) 124 125 (face font-lock-warning-face fontified t) 125 126 (face font-lock-warning-face fontified t) 126 127 (fontified t) 127 137 (face font-lock-comment-face fontified t) 137 141 (fontified t) 141 149 (face font-lock-keyword-face fontified t) 149 160 (face font-lock-keyword-face fontified t) 160 162 (fontified t) 162 164 (face font-lock-comment-face fontified t) 164 168 (fontified t) 168 171 (face font-lock-keyword-face fontified t) 171 177 (face font-lock-keyword-face fontified t) 177 178 (face font-lock-keyword-face fontified t) 178 188 (face font-lock-keyword-face fontified t) 188 199 (face font-lock-keyword-face fontified t) 199 207 (face font-lock-keyword-face fontified t) 207 211 (fontified t) 211 227 (face font-lock-comment-face fontified t) 227 230 (fontified t) 230 232 (face font-lock-comment-face fontified t) 232 234 (fontified t) 234 245 (face font-lock-keyword-face fontified t) 245 246 (fontified t) 246 252 (face font-lock-variable-name-face fontified t) 252 256 (fontified t) 256 258 (face font-lock-comment-face fontified t) 258 260 (fontified t) 260 271 (face font-lock-keyword-face fontified t) 271 272 (fontified t) 272 277 (face font-lock-variable-name-face fontified t) 277 281 (fontified t) 281 283 (face font-lock-comment-face fontified t) 283 285 (fontified t) 285 296 (face font-lock-keyword-face fontified t) 296 297 (fontified t) 297 305 (face font-lock-variable-name-face fontified t) 305 309 (fontified t) 309 311 (face font-lock-comment-face fontified t) 311 313 (fontified t)) . 4092) (undo-tree-id960 . 136) (undo-tree-id961 . -312) (undo-tree-id962 . -7) (undo-tree-id963 . -312) (undo-tree-id965 . -313) (undo-tree-id966 . -313) (undo-tree-id967 . -123) (undo-tree-id968 . -123) (undo-tree-id969 . -124) (undo-tree-id970 . -313) (undo-tree-id971 . -313) (undo-tree-id973 . -313) (undo-tree-id974 . -168) (undo-tree-id975 . -168) (undo-tree-id977 . -171) (undo-tree-id979 . -171) (undo-tree-id981 . -171) (undo-tree-id983 . -171) (undo-tree-id985 . -123) (undo-tree-id986 . -171) (undo-tree-id988 . -171)) ((4092 . 4405) (#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\textit{#1} \\\\ % Authors in italics (or any preferred style)
    \\normalfont\\normalsize\\itshape #2 % Section Title in italics
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified nil) 11 12 (fontified nil) 12 31 (face font-lock-function-name-face fontified nil) 31 36 (fontified nil) 36 38 (face font-lock-comment-face fontified nil) 38 40 (fontified nil) 40 49 (face font-lock-keyword-face fontified nil) 49 50 (fontified nil) 50 52 (face font-lock-function-name-face fontified nil) 52 53 (fontified nil) 53 55 (face font-lock-comment-face fontified nil) 55 57 (fontified nil) 57 73 (face font-lock-keyword-face fontified nil) 73 88 (fontified nil) 88 90 (face font-lock-comment-face fontified nil) 90 94 (fontified nil) 94 101 (face font-lock-keyword-face fontified nil) 101 102 (fontified nil) 102 104 (face (italic) fontified nil) 104 106 (fontified nil) 106 108 (face font-lock-warning-face fontified nil) 108 109 (fontified nil) 109 155 (face font-lock-comment-face fontified nil) 155 159 (fontified nil) 159 160 (face font-lock-keyword-face fontified nil) 160 170 (face font-lock-keyword-face fontified nil) 170 181 (face font-lock-keyword-face fontified nil) 181 189 (face font-lock-keyword-face fontified nil) 189 193 (fontified nil) 193 219 (face font-lock-comment-face fontified nil) 219 220 (face font-lock-comment-face fontified nil) 220 223 (fontified nil) 223 224 (face font-lock-comment-face fontified nil) 224 225 (face font-lock-comment-face fontified nil) 225 227 (fontified nil) 227 238 (face font-lock-keyword-face fontified nil) 238 239 (fontified nil) 239 245 (face font-lock-variable-name-face fontified nil) 245 249 (fontified nil) 249 251 (face font-lock-comment-face fontified nil) 251 253 (fontified nil) 253 264 (face font-lock-keyword-face fontified nil) 264 265 (fontified nil) 265 270 (face font-lock-variable-name-face fontified nil) 270 274 (fontified nil) 274 276 (face font-lock-comment-face fontified nil) 276 278 (fontified nil) 278 289 (face font-lock-keyword-face fontified nil) 289 290 (fontified nil) 290 298 (face font-lock-variable-name-face fontified nil) 298 302 (fontified nil) 302 304 (face font-lock-comment-face fontified nil) 304 305 (fontified nil) 305 306 (fontified nil rear-nonsticky nil)) . 4092) (undo-tree-id990 . -159) (undo-tree-id991 . 147) (undo-tree-id992 . -220) (undo-tree-id993 . -220) (undo-tree-id994 . -155) (undo-tree-id995 . 86) (undo-tree-id996 . -159) (undo-tree-id997 . -159) (undo-tree-id998 . -159) (undo-tree-id999 . -159) (undo-tree-id1000 . -159) (undo-tree-id1001 . -223) (undo-tree-id1002 . -223) (undo-tree-id1003 . -220) (undo-tree-id1004 . -220) (undo-tree-id1005 . -155) (undo-tree-id1006 . -155) (undo-tree-id1007 . -159) (undo-tree-id1008 . -159) (undo-tree-id1009 . -220) (undo-tree-id1010 . -220) (undo-tree-id1011 . -159) (undo-tree-id1012 . -223) (nil fontified t 4368 . 4370) (nil fontified t 4343 . 4345) (nil fontified t 4317 . 4319) (nil fontified t 4312 . 4315) (nil fontified t 4247 . 4251) (nil fontified t 4182 . 4186) (nil fontified t 4147 . 4149) (nil fontified t 4130 . 4132) (nil fontified t 4092 . 4103) (nil rear-nonsticky t 4397 . 4398)) (26363 39027 734563 618000) 0 nil] [nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 4216) (t 26363 38725 608923 408000)) ((4216 . 4217)) (26363 38859 785757 677000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4085 . 4086) (nil fontified nil 4033 . 4086) (4033 . 4086) (t 26363 39279 442638 983000)) nil (26363 39306 483349 133000) 0 nil] [nil nil ((nil rear-nonsticky nil 4013 . 4014) (nil fontified nil 3808 . 4014) (3808 . 4014) (t 26363 39083 681673 866000)) ((#("\\makeatletter
\\renewcommand\\tableofcontents{%
  \\null\\hfill\\textbf{\\Large\\contentsname}\\hfill\\null\\par
  \\@mkboth{\\MakeUppercase\\contentsname}{\\MakeUppercase\\contentsname}%
  \\@starttoc{toc}%
}
\\makeatother" 0 13 (face font-lock-keyword-face fontified nil) 13 14 (fontified nil) 14 27 (face font-lock-keyword-face fontified nil) 27 43 (face font-lock-function-name-face fontified nil) 43 44 (fontified nil) 44 46 (face font-lock-comment-face fontified nil) 46 48 (fontified nil) 48 53 (face font-lock-keyword-face fontified nil) 53 59 (face font-lock-keyword-face fontified nil) 59 66 (face font-lock-keyword-face fontified nil) 66 67 (fontified nil) 67 73 (face (font-lock-keyword-face bold) fontified nil) 73 86 (face (font-lock-keyword-face bold) fontified nil) 86 87 (fontified nil) 87 93 (face font-lock-keyword-face fontified nil) 93 98 (face font-lock-keyword-face fontified nil) 98 102 (face font-lock-keyword-face fontified nil) 102 105 (fontified nil) 105 113 (face font-lock-keyword-face fontified nil) 113 114 (fontified nil) 114 128 (face font-lock-keyword-face fontified nil) 128 141 (face font-lock-keyword-face fontified nil) 141 143 (fontified nil) 143 157 (face font-lock-keyword-face fontified nil) 157 170 (face font-lock-keyword-face fontified nil) 170 171 (fontified nil) 171 173 (face font-lock-comment-face fontified nil) 173 175 (fontified nil) 175 185 (face font-lock-keyword-face fontified nil) 185 190 (fontified nil) 190 192 (face font-lock-comment-face fontified nil) 192 194 (fontified nil) 194 205 (face font-lock-keyword-face fontified nil) 205 206 (face font-lock-keyword-face fontified nil rear-nonsticky nil)) . 3808) (undo-tree-id1267 . -205) (undo-tree-id1268 . -194) (undo-tree-id1269 . -205) (undo-tree-id1270 . -205) (undo-tree-id1271 . -205) (undo-tree-id1272 . -205) (undo-tree-id1273 . -205) (undo-tree-id1274 . -205) (undo-tree-id1275 . -205) (undo-tree-id1276 . -205) (undo-tree-id1277 . -205) (undo-tree-id1278 . -205) (undo-tree-id1279 . -205) (undo-tree-id1280 . -205) (undo-tree-id1281 . -205) (undo-tree-id1282 . -205) (undo-tree-id1283 . -205) (undo-tree-id1284 . -205) (undo-tree-id1285 . -205) (undo-tree-id1286 . -205) (undo-tree-id1287 . -205) (undo-tree-id1288 . -205) (undo-tree-id1289 . -205) (undo-tree-id1290 . -205) (nil fontified t 4000 . 4002) (nil fontified t 3998 . 4000) (nil fontified t 3993 . 3998) (nil fontified t 3983 . 3993) (nil fontified t 3981 . 3983) (nil fontified t 3979 . 3981) (nil fontified t 3978 . 3979) (nil fontified t 3965 . 3978) (nil fontified t 3951 . 3965) (nil fontified t 3949 . 3951) (nil fontified t 3936 . 3949) (nil fontified t 3922 . 3936) (nil fontified t 3921 . 3922) (nil fontified t 3913 . 3921) (nil fontified t 3910 . 3913) (nil fontified t 3906 . 3910) (nil fontified t 3901 . 3906) (nil fontified t 3895 . 3901) (nil fontified t 3894 . 3895) (nil fontified t 3881 . 3894) (nil fontified t 3875 . 3881) (nil fontified t 3874 . 3875) (nil fontified t 3867 . 3874) (nil fontified t 3861 . 3867) (nil fontified t 3856 . 3861) (nil fontified t 3854 . 3856) (nil fontified t 3852 . 3854) (nil fontified t 3851 . 3852) (nil fontified t 3835 . 3851) (nil fontified t 3822 . 3835) (nil fontified t 3821 . 3822) (nil fontified t 3808 . 3821) (nil rear-nonsticky t 4013 . 4014)) (26363 39277 821900 26000) 0 nil] [nil nil ((nil rear-nonsticky nil 3841 . 3842) (nil fontified nil 3808 . 3842) (3808 . 3842) (t 26363 39083 681673 866000)) ((#(" МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS}}" 0 33 (fontified nil) 33 34 (rear-nonsticky nil fontified nil)) . 3808) (undo-tree-id1124 . -33) (undo-tree-id1125 . -33) (undo-tree-id1126 . -33) (undo-tree-id1127 . -33) (nil rear-nonsticky t 3841 . 3842)) (26363 39261 727512 324000) 0 nil] [nil nil ((3425 . 3429) (t 26363 39083 681673 866000)) ((#("tttt" 0 4 (face font-lock-keyword-face fontified t)) . 3425) (undo-tree-id1121 . -3) (undo-tree-id1122 . -3) (undo-tree-id1123 . -3)) (26363 39258 591398 524000) 0 nil] [nil nil ((#(" МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS}}" 0 21 (fontified t) 21 34 (fontified t)) . 3425) (undo-tree-id1112 . -33) (undo-tree-id1113 . -1) (undo-tree-id1114 . 32) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -34) (undo-tree-id1120 . -34) (t 26363 39083 681673 866000)) ((3425 . 3459)) (26363 39257 83874 623000) 0 nil])
([nil nil ((4254 . 4260) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4254) (undo-tree-id680 . -1) (undo-tree-id682 . -1) (undo-tree-id684 . -1) (4251 . 4255) (t 26363 38907 56858 927000)) ((#("\\noi" 0 1 (face font-lock-keyword-face fontified nil) 1 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 4251) (undo-tree-id748 . 4) (undo-tree-id749 . -3) (undo-tree-id750 . -3) (undo-tree-id751 . -3) (undo-tree-id752 . -3) (undo-tree-id753 . -3) (4254 . 4255) (#("indent" 0 6 (face font-lock-keyword-face fontified t)) . 4254) (undo-tree-id754 . -5) (undo-tree-id755 . -5) (undo-tree-id756 . -5) (undo-tree-id757 . -5) (undo-tree-id758 . -5)) (26363 39009 925664 48000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 4216)) ((4216 . 4217)) (26363 38858 681806 284000) 0 nil])
([nil nil ((apply -18 3809 4082 undo--wrap-and-run-primitive-undo 3809 4082 ((4010 . 4013) (3968 . 3971) (3924 . 3927) (3874 . 3877) (3833 . 3836) (3809 . 3812)))) nil (26363 39348 912821 761000) 0 nil])
([nil nil ((4014 . 4015) 4013) ((#("
" 0 1 (fontified t)) . 4014)) (26363 39277 197992 186000) 0 nil])
nil
nil
nil
([nil nil ((4247 . 4267) (4321 . 4339) (t 26363 38931 689459 272000)) ((#("\\end{noparindent}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 18 (fontified t)) . 4321) (undo-tree-id699 . -17) (undo-tree-id700 . 18) (undo-tree-id701 . -7) (undo-tree-id702 . -7) (undo-tree-id703 . -7) (undo-tree-id704 . -7) (undo-tree-id705 . -7) (undo-tree-id706 . -7) (undo-tree-id707 . -7) (undo-tree-id708 . -7) (undo-tree-id709 . -7) (undo-tree-id710 . -7) (undo-tree-id711 . -7) (undo-tree-id712 . -7) (undo-tree-id713 . -7) (undo-tree-id714 . -7) (undo-tree-id715 . -7) (undo-tree-id716 . -7) (undo-tree-id717 . -7) (undo-tree-id718 . -7) (undo-tree-id719 . -7) (undo-tree-id720 . -7) (undo-tree-id721 . -7) (undo-tree-id722 . -7) (undo-tree-id723 . -7) (undo-tree-id724 . -7) (undo-tree-id725 . -7) (undo-tree-id726 . -7) (undo-tree-id727 . -7) (undo-tree-id728 . -7) (#("\\begin{noparindent}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 18 (face font-lock-function-name-face latex-env-pair t fontified t) 18 19 (latex-env-pair t fontified t) 19 20 (fontified t)) . 4247) (undo-tree-id729 . -20) (undo-tree-id730 . -7) (undo-tree-id731 . -7) (undo-tree-id732 . -7) (undo-tree-id733 . -7) (undo-tree-id734 . -7) (undo-tree-id735 . -7) (undo-tree-id736 . -7) (undo-tree-id737 . -7) (undo-tree-id738 . -7) (undo-tree-id739 . -7) (undo-tree-id740 . -7) (undo-tree-id741 . -7) (undo-tree-id742 . -7) (undo-tree-id743 . -7) (undo-tree-id744 . -7) (undo-tree-id745 . -7) (undo-tree-id746 . -20) (undo-tree-id747 . -7)) (26363 39009 525598 583000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4215) (undo-tree-id301 . -1)) ((4215 . 4216)) (26363 38858 378848 58000) 0 nil])
([nil nil ((3832 . 3833) (t 26363 39306 548515 742000) 3831) nil (26363 39361 647186 39000) 0 nil] [nil nil ((nil rear-nonsticky nil 3901 . 3902) (nil fontified nil 3832 . 3902) (3832 . 3902) 3831 (t 26363 39306 548515 742000)) ((#("\\cftsetindents{section}{0em}{2em}
\\cftsetindents{subsection}{0em}{2em}" 0 34 (face font-lock-comment-face fontified nil) 34 48 (face font-lock-keyword-face fontified nil) 48 69 (fontified nil) 69 70 (rear-nonsticky nil fontified nil)) . 3832) (undo-tree-id1291 . -69) (undo-tree-id1292 . -69) (undo-tree-id1293 . -34) (undo-tree-id1294 . -69) (undo-tree-id1295 . -69) (nil fontified t 3832 . 3866) (nil rear-nonsticky t 3901 . 3902)) (26363 39348 912559 341000) 0 nil])
([nil nil ((3807 . 3808) 3786) ((#("
" 0 1 (fontified t)) . 3807) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (t 26363 39269 402931 527000)) (26363 39269 350508 734000) 0 nil])
([nil nil ((4271 . 4275) (t 26363 38947 495655 572000)) ((#("\\par" 0 4 (face font-lock-keyword-face fontified t)) . 4271) (undo-tree-id698 . -4)) (26363 39009 269559 780000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4445 . 4446) (nil fontified nil 4092 . 4446) (4092 . 4446) (#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\protect\\numberline{}%
    #1 % Authors
    \\protect\\numberline{}%
    \\noindent\\normalfont\\normalsize\\itshape #2 % Section Title
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 36 (fontified t) 36 38 (face font-lock-comment-face fontified t) 38 40 (fontified t) 40 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 52 (face font-lock-function-name-face fontified t) 52 53 (fontified t) 53 55 (face font-lock-comment-face fontified t) 55 57 (fontified t) 57 73 (face font-lock-keyword-face fontified t) 73 88 (fontified t) 88 90 (face font-lock-comment-face fontified t) 90 94 (fontified t) 94 102 (face font-lock-keyword-face fontified t) 102 113 (face font-lock-keyword-face fontified t) 113 115 (fontified t) 115 117 (face font-lock-comment-face fontified t) 117 123 (fontified t) 123 124 (fontified t) 124 134 (face font-lock-comment-face fontified t) 134 138 (fontified t) 138 146 (face font-lock-keyword-face fontified t) 146 157 (face font-lock-keyword-face fontified t) 157 159 (fontified t) 159 161 (face font-lock-comment-face fontified t) 161 165 (fontified t) 165 174 (face font-lock-keyword-face fontified t) 174 175 (face font-lock-keyword-face fontified t) 175 185 (face font-lock-keyword-face fontified t) 185 196 (face font-lock-keyword-face fontified t) 196 204 (face font-lock-keyword-face fontified t) 204 208 (fontified t) 208 224 (face font-lock-comment-face fontified t) 224 227 (fontified t) 227 229 (face font-lock-comment-face fontified t) 229 231 (fontified t) 231 242 (face font-lock-keyword-face fontified t) 242 243 (fontified t) 243 249 (face font-lock-variable-name-face fontified t) 249 253 (fontified t) 253 255 (face font-lock-comment-face fontified t) 255 257 (fontified t) 257 268 (face font-lock-keyword-face fontified t) 268 269 (fontified t) 269 274 (face font-lock-variable-name-face fontified t) 274 278 (fontified t) 278 280 (face font-lock-comment-face fontified t) 280 282 (fontified t) 282 293 (face font-lock-keyword-face fontified t) 293 294 (fontified t) 294 302 (face font-lock-variable-name-face fontified t) 302 306 (fontified t) 306 308 (face font-lock-comment-face fontified t) 308 310 (fontified t)) . 4092) (undo-tree-id302 . -310) (undo-tree-id303 . 136) (undo-tree-id304 . -309) (undo-tree-id305 . -6) (undo-tree-id306 . -309) (undo-tree-id308 . -123) (undo-tree-id310 . -123) (undo-tree-id312 . -123) (undo-tree-id314 . -123) (undo-tree-id316 . -123) (undo-tree-id318 . -123) (undo-tree-id320 . -123) (undo-tree-id322 . -123) (undo-tree-id324 . -123) (undo-tree-id326 . -123) (undo-tree-id328 . -123) (undo-tree-id330 . -96) (undo-tree-id332 . -96) (undo-tree-id334 . -96) (undo-tree-id336 . -96) (undo-tree-id338 . -96) (undo-tree-id340 . -96) (undo-tree-id342 . -61) (undo-tree-id344 . -61) (undo-tree-id346 . -61) (undo-tree-id348 . -44) (undo-tree-id350 . -44) (undo-tree-id352 . -44) (undo-tree-id354 . -44) (undo-tree-id356 . -44) (undo-tree-id358 . -6) (undo-tree-id360 . -6) (undo-tree-id362 . -6) (undo-tree-id364 . -6) (undo-tree-id366 . -6) (undo-tree-id368 . -6) (undo-tree-id370 . -6) (undo-tree-id372 . -6) (undo-tree-id374 . -6) (undo-tree-id376 . -6) (undo-tree-id378 . -6) (undo-tree-id380 . -6) (undo-tree-id382 . -6) (undo-tree-id384 . -6) (undo-tree-id386 . -6) (undo-tree-id388 . -6) (undo-tree-id390 . -6) (undo-tree-id392 . -6) (undo-tree-id394 . -6) (undo-tree-id396 . -6) (undo-tree-id398 . -6) (undo-tree-id400 . -44) (undo-tree-id402 . -44) (undo-tree-id404 . -44) (undo-tree-id406 . -44) (undo-tree-id408 . -44) (undo-tree-id410 . -44) (undo-tree-id412 . -44) (undo-tree-id414 . -44) (undo-tree-id416 . -61) (undo-tree-id418 . -61) (undo-tree-id420 . -61) (undo-tree-id422 . -96) (undo-tree-id424 . -96) (undo-tree-id426 . -123) (undo-tree-id428 . -123) (undo-tree-id430 . -123) (undo-tree-id432 . -140) (undo-tree-id434 . -140) (undo-tree-id436 . -167) (undo-tree-id438 . -167) (undo-tree-id440 . -167) (undo-tree-id442 . -228) (undo-tree-id444 . -228) (undo-tree-id446 . -235) (undo-tree-id448 . -235) (undo-tree-id450 . -235) (undo-tree-id452 . -261) (undo-tree-id454 . -261) (undo-tree-id456 . -286) (undo-tree-id458 . -286) (undo-tree-id460 . -286) (undo-tree-id462 . -286) (undo-tree-id464 . -286) (undo-tree-id466 . -286) (undo-tree-id468 . -286) (undo-tree-id470 . -286) (undo-tree-id472 . -309) (undo-tree-id474 . -309) (undo-tree-id476 . -309) (undo-tree-id478 . -309) (undo-tree-id480 . -309) (undo-tree-id482 . -309) (undo-tree-id484 . -309) (undo-tree-id486 . -309) (undo-tree-id488 . -309) (undo-tree-id490 . -123) (undo-tree-id491 . -309) (undo-tree-id493 . -309) (undo-tree-id495 . -310) 4402 (t 26363 38771 897546 653000)) ((4092 . 4402) (#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\protect\\numberline{}%
    \\parbox{\\linewidth}{#1} \\\\ % Authors without introducing indent
    \\protect\\numberline{}%
    {\\normalfont\\normalsize\\itshape #2} % Section Title
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified nil) 11 12 (fontified nil) 12 31 (face font-lock-function-name-face fontified nil) 31 36 (fontified nil) 36 38 (face font-lock-comment-face fontified nil) 38 40 (fontified nil) 40 49 (face font-lock-keyword-face fontified nil) 49 50 (fontified nil) 50 52 (face font-lock-function-name-face fontified nil) 52 53 (fontified nil) 53 55 (face font-lock-comment-face fontified nil) 55 57 (fontified nil) 57 73 (face font-lock-keyword-face fontified nil) 73 88 (fontified nil) 88 90 (face font-lock-comment-face fontified nil) 90 94 (fontified nil) 94 102 (face font-lock-keyword-face fontified nil) 102 113 (face font-lock-keyword-face fontified nil) 113 115 (fontified nil) 115 117 (face font-lock-comment-face fontified nil) 117 121 (fontified nil) 121 128 (face font-lock-keyword-face fontified nil) 128 129 (fontified nil) 129 139 (face font-lock-keyword-face fontified nil) 139 145 (fontified nil) 145 146 (face font-lock-warning-face fontified nil) 146 147 (face font-lock-warning-face fontified nil) 147 148 (fontified nil) 148 149 (face font-lock-comment-face fontified nil) 149 150 (face font-lock-comment-face fontified nil) 150 185 (face font-lock-comment-face fontified nil) 185 189 (fontified nil) 189 197 (face font-lock-keyword-face fontified nil) 197 208 (face font-lock-keyword-face fontified nil) 208 210 (fontified nil) 210 212 (face font-lock-comment-face fontified nil) 212 217 (fontified nil) 217 228 (face font-lock-keyword-face fontified nil) 228 239 (face font-lock-keyword-face fontified nil) 239 247 (face font-lock-keyword-face fontified nil) 247 252 (fontified nil) 252 268 (face font-lock-comment-face fontified nil) 268 271 (fontified nil) 271 273 (face font-lock-comment-face fontified nil) 273 275 (fontified nil) 275 286 (face font-lock-keyword-face fontified nil) 286 287 (fontified nil) 287 293 (face font-lock-variable-name-face fontified nil) 293 297 (fontified nil) 297 299 (face font-lock-comment-face fontified nil) 299 301 (fontified nil) 301 312 (face font-lock-keyword-face fontified nil) 312 313 (fontified nil) 313 318 (face font-lock-variable-name-face fontified nil) 318 322 (fontified nil) 322 324 (face font-lock-comment-face fontified nil) 324 326 (fontified nil) 326 337 (face font-lock-keyword-face fontified nil) 337 338 (fontified nil) 338 346 (face font-lock-variable-name-face fontified nil) 346 350 (fontified nil) 350 352 (face font-lock-comment-face fontified nil) 352 353 (fontified nil) 353 354 (fontified nil rear-nonsticky nil)) . 4092) (undo-tree-id496 . -149) (undo-tree-id497 . -145) (undo-tree-id498 . -145) (undo-tree-id499 . -149) (undo-tree-id500 . 204) (undo-tree-id501 . -149) (undo-tree-id502 . -149) (undo-tree-id503 . -149) (undo-tree-id504 . -149) (undo-tree-id505 . -145) (undo-tree-id506 . -145) (undo-tree-id507 . -145) (undo-tree-id508 . -145) (undo-tree-id509 . -145) (undo-tree-id510 . -145) (undo-tree-id511 . -145) (undo-tree-id512 . -145) (undo-tree-id513 . -145) (undo-tree-id514 . -145) (undo-tree-id515 . -145) (undo-tree-id516 . -145) (undo-tree-id517 . -145) (undo-tree-id518 . -145) (undo-tree-id519 . -145) (undo-tree-id520 . -145) (undo-tree-id521 . -145) (undo-tree-id522 . -145) (undo-tree-id523 . -145) (undo-tree-id524 . -145) (undo-tree-id525 . -145) (undo-tree-id526 . -145) (undo-tree-id527 . -145) (undo-tree-id528 . -145) (undo-tree-id529 . -145) (undo-tree-id530 . -149) (undo-tree-id531 . -145) (undo-tree-id532 . -145) (undo-tree-id533 . -145) (undo-tree-id534 . -145) (undo-tree-id535 . -145) (undo-tree-id536 . -145) (undo-tree-id537 . -145) (undo-tree-id538 . -145) (undo-tree-id539 . -145) (undo-tree-id540 . -145) (undo-tree-id541 . -145) (undo-tree-id542 . -145) (undo-tree-id543 . -145) (undo-tree-id544 . -145) (undo-tree-id545 . -145) (undo-tree-id546 . -145) (undo-tree-id547 . -145) (undo-tree-id548 . -145) (undo-tree-id549 . -145) (undo-tree-id550 . -145) (undo-tree-id551 . -145) (undo-tree-id552 . -145) (undo-tree-id553 . -145) (undo-tree-id554 . -145) (undo-tree-id555 . -145) (undo-tree-id556 . -145) (undo-tree-id557 . -145) (undo-tree-id558 . -145) (undo-tree-id559 . -145) (undo-tree-id560 . -145) (undo-tree-id561 . -145) (undo-tree-id562 . -145) (undo-tree-id563 . -145) (undo-tree-id564 . -145) (undo-tree-id565 . -145) (undo-tree-id566 . -145) (undo-tree-id567 . -145) (undo-tree-id568 . -145) (undo-tree-id569 . -145) (undo-tree-id570 . -145) (undo-tree-id571 . -145) (undo-tree-id572 . -145) (undo-tree-id573 . -145) (undo-tree-id574 . -145) (undo-tree-id575 . -145) (undo-tree-id576 . -145) (undo-tree-id577 . -145) (undo-tree-id578 . -145) (undo-tree-id579 . -145) (undo-tree-id580 . -145) (undo-tree-id581 . -145) (undo-tree-id582 . -145) (undo-tree-id583 . -145) (undo-tree-id584 . -145) (undo-tree-id585 . -145) (undo-tree-id586 . -145) (undo-tree-id587 . -145) (undo-tree-id588 . -145) (undo-tree-id589 . -117) (undo-tree-id590 . -149) (undo-tree-id591 . -149) (undo-tree-id592 . -149) (undo-tree-id593 . -149) (undo-tree-id594 . -149) (undo-tree-id595 . -149) (undo-tree-id596 . -149) (undo-tree-id597 . -149) (undo-tree-id598 . -149) (undo-tree-id599 . -149) (undo-tree-id600 . -149) (undo-tree-id601 . -149) (undo-tree-id602 . -149) (undo-tree-id603 . -145) (undo-tree-id604 . -149) (undo-tree-id605 . -149) (undo-tree-id606 . -149) (undo-tree-id607 . -145) (undo-tree-id608 . -149) (nil fontified t 4442 . 4444) (nil fontified t 4438 . 4442) (nil fontified t 4430 . 4438) (nil fontified t 4429 . 4430) (nil fontified t 4418 . 4429) (nil fontified t 4416 . 4418) (nil fontified t 4414 . 4416) (nil fontified t 4410 . 4414) (nil fontified t 4405 . 4410) (nil fontified t 4404 . 4405) (nil fontified t 4393 . 4404) (nil fontified t 4391 . 4393) (nil fontified t 4389 . 4391) (nil fontified t 4385 . 4389) (nil fontified t 4379 . 4385) (nil fontified t 4378 . 4379) (nil fontified t 4367 . 4378) (nil fontified t 4365 . 4367) (nil fontified t 4363 . 4365) (nil fontified t 4360 . 4363) (nil fontified t 4344 . 4360) (nil fontified t 4339 . 4344) (nil fontified t 4331 . 4339) (nil fontified t 4320 . 4331) (nil fontified t 4309 . 4320) (nil fontified t 4304 . 4309) (nil fontified t 4302 . 4304) (nil fontified t 4300 . 4302) (nil fontified t 4289 . 4300) (nil fontified t 4281 . 4289) (nil fontified t 4277 . 4281) (nil fontified t 4242 . 4277) (nil fontified t 4241 . 4242) (nil fontified t 4240 . 4241) (nil fontified t 4239 . 4240) (nil fontified t 4238 . 4239) (nil fontified t 4237 . 4238) (nil fontified t 4231 . 4237) (nil fontified t 4221 . 4231) (nil fontified t 4220 . 4221) (nil fontified t 4213 . 4220) (nil fontified t 4209 . 4213) (nil fontified t 4207 . 4209) (nil fontified t 4205 . 4207) (nil fontified t 4194 . 4205) (nil fontified t 4186 . 4194) (nil fontified t 4182 . 4186) (nil fontified t 4180 . 4182) (nil fontified t 4165 . 4180) (nil fontified t 4149 . 4165) (nil fontified t 4147 . 4149) (nil fontified t 4145 . 4147) (nil fontified t 4144 . 4145) (nil fontified t 4142 . 4144) (nil fontified t 4141 . 4142) (nil fontified t 4132 . 4141) (nil fontified t 4130 . 4132) (nil fontified t 4128 . 4130) (nil fontified t 4123 . 4128) (nil fontified t 4104 . 4123) (nil fontified t 4103 . 4104) (nil fontified t 4092 . 4103) (nil rear-nonsticky t 4445 . 4446)) (26363 38858 105926 837000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3902 . 3903) (nil fontified nil 3833 . 3903) (3833 . 3903)) nil (26363 39361 647185 13000) 0 nil])
nil
nil
([nil nil ((#("\\begin{noparindent}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 18 (face font-lock-function-name-face latex-env-pair t fontified t) 18 19 (latex-env-pair t fontified t) 19 20 (fontified t)) . 4247) (undo-tree-id695 . -19) (undo-tree-id696 . -20) (undo-tree-id697 . -7) 4254) ((4247 . 4267)) (26363 39008 325716 659000) 0 nil])
([nil nil ((4241 . 4242) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 4241) (t 26363 38803 796597 786000)) ((4241 . 4242) (#(" " 0 1 (face font-lock-comment-face fontified t)) . 4241)) (26363 38857 801173 836000) 0 nil])
([nil nil ((apply 3 3809 3830 undo--wrap-and-run-primitive-undo 3809 3830 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3809) (#<marker at 2971 in packages.tex> . -3) (#<marker at 2971 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 6750 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) (#<marker at 3782 in packages.tex> . -3) 3833))) nil (26363 39361 647184 102000) 0 nil])
([nil nil ((#("\\end{noparindent}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 18 (fontified t)) . 4325) (undo-tree-id685 . -17) (undo-tree-id686 . 18) (undo-tree-id688 . -7) (undo-tree-id690 . -7) (undo-tree-id691 . -7) (undo-tree-id693 . -7) 4332) ((4325 . 4343) (t 26363 38989 444416 375000)) (26363 38989 400884 454000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 4237)) ((4237 . 4238)) (26363 38857 465777 968000) 0 nil])
([nil nil ((apply 3 3901 3939 undo--wrap-and-run-primitive-undo 3901 3939 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3901) 3942))) nil (26363 39361 647183 524000) 0 nil])
nil
([nil nil ((#("\\" 0 1 (fontified t)) . 4237)) ((4237 . 4238)) (26363 38857 98164 22000) 0 nil])
([nil nil ((apply 3 3939 3986 undo--wrap-and-run-primitive-undo 3939 3986 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3939) 3989))) nil (26363 39361 647182 879000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4237)) ((4237 . 4238) (t 26363 38841 15490 558000)) (26363 38840 978642 465000) 0 nil])
([nil nil ((#("\\usepackage[tocflat]{tocstyle}
" 0 11 (face font-lock-keyword-face fontified t) 11 21 (fontified t) 21 29 (face font-lock-builtin-face fontified t) 29 31 (fontified t)) . 4113) (undo-tree-id1299 . -30) (undo-tree-id1300 . -31)) nil (26363 39361 647182 25000) 0 nil])
nil
([nil nil ((#("\\usetocstyle{standard}
" 0 12 (face font-lock-keyword-face fontified t) 12 21 (fontified t) 21 22 (fontified t rear-nonsticky t) 22 23 (fontified t)) . 4113) (undo-tree-id1296 . -22) (undo-tree-id1297 . -22) (undo-tree-id1298 . -23)) nil (26363 39361 647178 580000) 0 nil])
([nil nil ((4112 . 4113) 4072) nil (26363 39361 647155 416000) 0 nil])
([nil nil ((#("%% %% \\renewcommand{\\cftfigfont}{Figure }
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 6 (face font-lock-comment-face fontified t) 6 19 (face font-lock-comment-face fontified t) 19 20 (face font-lock-comment-face fontified t) 20 31 (face font-lock-comment-face fontified t) 31 42 (face font-lock-comment-face fontified t)) . 4030) (undo-tree-id1309 . -41) (t 26363 39361 680242 145000)) nil (26363 39367 381011 270000) 0 nil])
([nil nil ((#("%% %% \\renewcommand{\\cfttabfont}{Table }
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 6 (face font-lock-comment-face fontified t) 6 19 (face font-lock-comment-face fontified t) 19 20 (face font-lock-comment-face fontified t) 20 31 (face font-lock-comment-face fontified t) 31 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face fontified t rear-nonsticky t) 40 41 (face font-lock-comment-face fontified t)) . 4030) (undo-tree-id1306 . -40) (undo-tree-id1307 . -24) (undo-tree-id1308 . -41)) nil (26363 39367 381008 324000) 0 nil])
([nil nil ((#("%% %% \\renewcommand{\\cftsecfont}{\\bfseries}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 6 (face font-lock-comment-face fontified t) 6 19 (face font-lock-comment-face fontified t) 19 20 (face font-lock-comment-face fontified t) 20 31 (face font-lock-comment-face fontified t) 31 33 (face font-lock-comment-face fontified t) 33 42 (face font-lock-comment-face fontified t) 42 44 (face font-lock-comment-face fontified t)) . 3986) (undo-tree-id1301 . -43) (undo-tree-id1302 . 44) (undo-tree-id1303 . -44) (undo-tree-id1304 . -44) (undo-tree-id1305 . -44)) nil (26363 39367 380999 997000) 0 nil])
([nil nil ((3830 . 3864) (t 26363 39367 410075 104000)) nil (26363 39407 763198 904000) 0 nil])
([nil nil ((3845 . 3852) (#("p" 0 1 (fontified t)) . -3845) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (#("a" 0 1 (fontified t)) . -3846) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (#("r" 0 1 (fontified t)) . -3847) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (#("t" 0 1 (fontified t)) . -3848) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) 3849 (3845 . 3849) (#("section" 0 7 (fontified t)) . 3845) (undo-tree-id1619 . -6) (undo-tree-id1620 . -7) (undo-tree-id1621 . -7)) nil (26363 39407 763186 599000) 0 nil])
([nil nil ((3830 . 3864) 3855 (t 26363 39407 815563 732000)) nil (26363 39432 80700 911000) 0 nil])
([nil nil ((3845 . 3849) (#("chapter" 0 7 (fontified t)) . 3845) (undo-tree-id1622 . -6) (undo-tree-id1623 . -7) (undo-tree-id1624 . -7)) nil (26363 39432 80696 438000) 0 nil])
([nil nil ((4050 . 4051) (t 26363 39432 141521 70000) 4022) nil (26363 39470 317669 586000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4148 . 4149) (nil fontified nil 4051 . 4149) (4051 . 4149)) nil (26363 39470 317664 965000) 0 nil])
([nil nil ((4050 . 4051) (t 26363 39470 357073 198000) 4048) nil (26363 39471 294262 519000) 0 nil])
([nil nil ((4089 . 4090) (#("L" 0 1 (face font-lock-keyword-face fontified t)) . 4089) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (t 26363 39471 347044 323000)) nil (26363 39482 129240 617000) 0 nil])
([nil nil ((#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\addcontentsline{toc}{section}{%
    \\parbox{\\linewidth}{\\centering \\textit{#1}} \\\\ % Authors, centered with no extra indent
    \\noindent\\normalfont\\normalsize\\itshape #2 % Section Title without indent
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 36 (fontified t) 36 38 (face font-lock-comment-face fontified t) 38 40 (fontified t) 40 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 52 (face font-lock-function-name-face fontified t) 52 53 (fontified t) 53 55 (face font-lock-comment-face fontified t) 55 57 (fontified t) 57 73 (face font-lock-keyword-face fontified t) 73 88 (fontified t) 88 90 (face font-lock-comment-face fontified t) 90 94 (fontified t) 94 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 112 (face font-lock-keyword-face fontified t) 112 114 (fontified t) 114 124 (face font-lock-keyword-face fontified t) 124 125 (fontified t) 125 132 (face font-lock-keyword-face fontified t) 132 133 (fontified t) 133 135 (face (italic) fontified t) 135 138 (fontified t) 138 140 (face font-lock-warning-face fontified t) 140 141 (fontified t) 141 182 (face font-lock-comment-face fontified t) 182 186 (fontified t) 186 195 (face font-lock-keyword-face fontified t) 195 206 (face font-lock-keyword-face fontified t) 206 217 (face font-lock-keyword-face fontified t) 217 225 (face font-lock-keyword-face fontified t) 225 229 (fontified t) 229 260 (face font-lock-comment-face fontified t) 260 263 (fontified t) 263 265 (face font-lock-comment-face fontified t) 265 267 (fontified t) 267 278 (face font-lock-keyword-face fontified t) 278 279 (fontified t) 279 285 (face font-lock-variable-name-face fontified t) 285 289 (fontified t) 289 291 (face font-lock-comment-face fontified t) 291 293 (fontified t) 293 304 (face font-lock-keyword-face fontified t) 304 305 (fontified t) 305 310 (face font-lock-variable-name-face fontified t) 310 314 (fontified t) 314 316 (face font-lock-comment-face fontified t) 316 318 (fontified t) 318 329 (face font-lock-keyword-face fontified t) 329 330 (fontified t) 330 338 (face font-lock-variable-name-face fontified t) 338 342 (fontified t) 342 344 (face font-lock-comment-face fontified t) 344 345 (fontified t) 345 346 (fontified t rear-nonsticky t)) . 4210) (undo-tree-id1641 . -345) (undo-tree-id1642 . -345) (undo-tree-id1643 . -36) (undo-tree-id1644 . -345) (undo-tree-id1645 . -345) 4555 (t 26363 39482 173395 207000)) nil (26363 39513 611513 261000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4521 . 4522) (nil fontified nil 4210 . 4522) (4210 . 4522)) nil (26363 39513 611496 531000) 0 nil])
([nil nil ((4522 . 4523) 4521) nil (26363 39513 611491 56000) 0 nil])
([nil nil ((#("    \\protect\\numberline{}%
" 0 4 (fontified t) 4 12 (face font-lock-keyword-face fontified t) 12 23 (face font-lock-keyword-face fontified t) 23 25 (fontified t) 25 27 (face font-lock-comment-face fontified t)) . 4347) (undo-tree-id1646 . -26) (undo-tree-id1647 . -8) 4355 (t 26363 39513 659143 403000)) nil (26363 39537 385411 385000) 0 nil])
([nil nil ((#("    \\protect\\numberline{}%
" 0 4 (fontified t) 4 12 (face font-lock-keyword-face fontified t) 12 23 (face font-lock-keyword-face fontified t) 23 25 (fontified t) 25 27 (face font-lock-comment-face fontified t)) . 4300) (undo-tree-id1648 . -26) (undo-tree-id1649 . -8) (undo-tree-id1650 . -8) (undo-tree-id1651 . -8) (undo-tree-id1652 . -8) (undo-tree-id1653 . -8) (undo-tree-id1654 . -8) (undo-tree-id1655 . -8) (undo-tree-id1656 . -8) (undo-tree-id1657 . -8) (undo-tree-id1658 . -8) (undo-tree-id1659 . -8) (undo-tree-id1660 . -8) (undo-tree-id1661 . -8) (undo-tree-id1662 . -8) (undo-tree-id1663 . -8) (undo-tree-id1664 . -8) (undo-tree-id1665 . -8) (undo-tree-id1666 . -8) (undo-tree-id1667 . -8) (undo-tree-id1668 . -8) (undo-tree-id1669 . -8) (undo-tree-id1670 . -8) (undo-tree-id1671 . -8) (undo-tree-id1672 . -8) (undo-tree-id1673 . -8) (undo-tree-id1674 . -8) (undo-tree-id1675 . -8) (undo-tree-id1676 . -8) (undo-tree-id1677 . -8) (undo-tree-id1678 . -27) 4308 (t 26363 39537 418450 236000)) nil (26363 39538 876259 749000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 4324) (t 26363 39538 918406 471000)) nil (26363 39542 985028 102000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 4324)) nil (26363 39542 985026 728000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 4324)) nil (26363 39542 985025 777000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 4324)) nil (26363 39542 985025 60000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 4324)) nil (26363 39542 985024 392000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 4324)) nil (26363 39542 985023 309000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4324)) nil (26363 39542 985022 466000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . 4324)) nil (26363 39542 985020 961000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 4324)) nil (26363 39542 985016 132000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4693 . 4694) (nil fontified nil 4460 . 4694) (4460 . 4694) (t 26363 39543 18286 849000)) nil (26363 40063 916414 453000) 0 nil])
([nil nil ((apply -30 4210 4527 undo--wrap-and-run-primitive-undo 4210 4527 ((4485 . 4488) (4454 . 4457) (4426 . 4429) (4397 . 4400) (4389 . 4392) (4332 . 4335) (4309 . 4312) (4271 . 4274) (4251 . 4254) (4210 . 4213)))) nil (26363 40063 916409 825000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4667 . 4668) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -4722) (4663 . 4723) 4634 (t 26363 40063 979735 62000)) nil (26363 40384 994080 917000) 0 nil])
([nil nil ((4700 . 4701) (#("2" 0 1 (fontified t)) . 4700) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1)) nil (26363 40384 994078 727000) 0 nil])
([nil nil ((#("    \\noindent \\textbf{Authors:} #1 % Display the authors above the section title
" 0 4 (fontified t) 4 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 21 (face font-lock-keyword-face fontified t) 21 22 (fontified t) 22 30 (face (bold) fontified t) 30 35 (fontified t) 35 81 (face font-lock-comment-face fontified t)) . 4527) (undo-tree-id1679 . -80) (undo-tree-id1680 . -36) (undo-tree-id1681 . -36) (undo-tree-id1682 . -36) (undo-tree-id1683 . -36) (undo-tree-id1684 . -36) (undo-tree-id1685 . -36) (undo-tree-id1686 . -36) (undo-tree-id1687 . -36) (undo-tree-id1688 . -36) (undo-tree-id1689 . -36) (undo-tree-id1690 . -36) (undo-tree-id1691 . -36) (undo-tree-id1692 . -36) (undo-tree-id1693 . -36) (undo-tree-id1694 . -36) (undo-tree-id1695 . -36) (undo-tree-id1696 . -36) (undo-tree-id1697 . -36) (undo-tree-id1698 . -36) (undo-tree-id1699 . -36) (undo-tree-id1700 . -36) (undo-tree-id1701 . -36) (undo-tree-id1702 . -36) (undo-tree-id1703 . -36) (undo-tree-id1704 . -36) (undo-tree-id1705 . -36) (undo-tree-id1706 . -36) (undo-tree-id1707 . -36) (undo-tree-id1708 . -36) (undo-tree-id1709 . -36) (undo-tree-id1710 . -36) (undo-tree-id1711 . -36) (undo-tree-id1712 . -36) (undo-tree-id1713 . -36) (undo-tree-id1714 . -36) (undo-tree-id1715 . -36) (undo-tree-id1716 . -36) (undo-tree-id1717 . -36) (undo-tree-id1718 . -36) (undo-tree-id1719 . -36) (undo-tree-id1720 . -36) (undo-tree-id1721 . -36) (undo-tree-id1722 . -36) (undo-tree-id1723 . -36) (undo-tree-id1724 . -36) (undo-tree-id1725 . -36) (undo-tree-id1726 . -36) (undo-tree-id1727 . -36) (undo-tree-id1728 . -36) (undo-tree-id1729 . -36) (undo-tree-id1730 . -36) (undo-tree-id1731 . -36) (undo-tree-id1732 . -36) (undo-tree-id1733 . -36) (undo-tree-id1734 . -36) (undo-tree-id1735 . -36) (undo-tree-id1736 . -36) (undo-tree-id1737 . -36) (undo-tree-id1738 . -36) (undo-tree-id1739 . -36) (undo-tree-id1740 . -36) (undo-tree-id1741 . -36) (undo-tree-id1742 . -36) (undo-tree-id1743 . -36) (undo-tree-id1744 . -36) (undo-tree-id1745 . -36) (undo-tree-id1746 . -36) (undo-tree-id1747 . -36) (undo-tree-id1748 . -36) (undo-tree-id1749 . -81) 4563) nil (26363 40566 762072 138000) 0 nil])
([nil nil ((4634 . 4639) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4634) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (4618 . 4635)) nil (26363 40611 954654 229000) 0 nil] [nil nil ((#("    \\addcontentsline{toc}{section}{#1} % Add it to the TOC
" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 20 (face font-lock-keyword-face fontified t) 20 36 (fontified t) 36 37 (fontified t) 37 39 (fontified t) 39 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t)) . 4583) (undo-tree-id1768 . -58) (undo-tree-id1769 . -36) (undo-tree-id1770 . -36) 4619 (t 26363 40385 43672 364000)) ((4583 . 4642)) (26363 40566 378146 123000) 0 nil])
([nil nil ((#("    \\addcontentsline{toc}{section}{\\protect\\numberline{}#1} % Add it to the TOC
" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 20 (face font-lock-keyword-face fontified t) 20 35 (fontified t) 35 43 (face font-lock-keyword-face fontified t) 43 54 (face font-lock-keyword-face fontified t) 54 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 60 (fontified t) 60 79 (face font-lock-comment-face fontified t) 79 80 (face font-lock-comment-face fontified t)) . 4583) (undo-tree-id1884 . -50) (undo-tree-id1885 . 24) (undo-tree-id1886 . -79) (undo-tree-id1887 . -55) (undo-tree-id1888 . -55) 4638 (t 26363 40612 13689 485000)) nil (26363 40739 355609 121000) 0 nil])
([nil nil ((4618 . 4619)) ((#("$" 0 1 (fontified t)) . 4618) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1)) (26363 40565 994054 251000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4586 . 4587) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -4641) (4582 . 4642) 4581) nil (26363 40739 355576 345000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . -4618) (undo-tree-id1767 . -1) 4619) ((4618 . 4619)) (26363 40565 593480 636000) 0 nil])
([nil nil ((#("    \\addcontentsline{toc}{section}{#2} % Add it to the TOC
" 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t) 4 20 (face font-lock-keyword-face fontified t) 20 35 (fontified t) 35 36 (fontified t) 36 39 (fontified t) 39 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t)) . 4583) (undo-tree-id1871 . -59) (undo-tree-id1872 . -58) (undo-tree-id1873 . -30) (undo-tree-id1874 . -30) (undo-tree-id1875 . -30) (undo-tree-id1876 . -30) (undo-tree-id1877 . -30) (undo-tree-id1878 . -59) (undo-tree-id1879 . -30) (undo-tree-id1880 . -30) (undo-tree-id1881 . -30) (undo-tree-id1882 . -30) (undo-tree-id1883 . -59) 4613) nil (26363 40739 355573 112000) 0 nil])
([nil nil ((4618 . 4619)) ((#("`" 0 1 (fontified t)) . 4618) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1)) (26363 40565 177793 231000) 0 nil])
([nil nil ((4618 . 4622)) nil (26363 40739 355546 529000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -4618) (undo-tree-id1766 . -1) 4619) ((4618 . 4619)) (26363 40564 745577 53000) 0 nil])
([nil nil ((4622 . 4629) (t 26363 40739 413287 911000)) nil (26363 40756 148670 638000) 0 nil])
([nil nil ((4618 . 4622)) ((#("#1\\\\" 0 2 (fontified t) 2 4 (face font-lock-warning-face fontified t)) . 4618) (undo-tree-id1771 . -3) (undo-tree-id1772 . -3) (undo-tree-id1773 . -3) (undo-tree-id1774 . -3) (undo-tree-id1775 . -3) (undo-tree-id1776 . -3) (undo-tree-id1777 . -3) (undo-tree-id1778 . -3) (undo-tree-id1779 . -3) (undo-tree-id1780 . -3) (undo-tree-id1781 . -3) (undo-tree-id1782 . -3) (undo-tree-id1783 . -3) (undo-tree-id1784 . -3) (undo-tree-id1785 . -3) (undo-tree-id1786 . -3) (undo-tree-id1787 . -3) (undo-tree-id1788 . -3) (undo-tree-id1789 . -3) (undo-tree-id1790 . -3) (undo-tree-id1791 . -3) (undo-tree-id1792 . -3) (undo-tree-id1793 . -3) (undo-tree-id1794 . -3) (undo-tree-id1795 . -3) (undo-tree-id1796 . -3) (undo-tree-id1797 . -3) (undo-tree-id1798 . -3) (undo-tree-id1799 . -3) (undo-tree-id1800 . -3) (undo-tree-id1801 . -3) (undo-tree-id1802 . -3) (undo-tree-id1803 . -3) (undo-tree-id1804 . -3) (undo-tree-id1805 . -3) (undo-tree-id1806 . -3) (undo-tree-id1807 . -3) (undo-tree-id1808 . -3) (undo-tree-id1809 . -3) (undo-tree-id1810 . -3) (undo-tree-id1811 . -3) (undo-tree-id1812 . -3) (undo-tree-id1813 . -3) (undo-tree-id1814 . -3) (undo-tree-id1815 . -3) (undo-tree-id1816 . -3) (undo-tree-id1817 . -3) (undo-tree-id1818 . -3) (undo-tree-id1819 . -3) (undo-tree-id1820 . -3) (undo-tree-id1821 . -3) (undo-tree-id1822 . -3) (undo-tree-id1823 . -3) (undo-tree-id1824 . -4) (undo-tree-id1825 . -3) (undo-tree-id1826 . -3) (undo-tree-id1827 . -3) (undo-tree-id1828 . -3) (t 26363 40503 610199 423000)) (26363 40503 545314 210000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified t)) . -4624) (undo-tree-id1892 . -1) (#("p" 0 1 (face font-lock-keyword-face fontified t)) . -4625) (undo-tree-id1893 . -1) (#("a" 0 1 (face font-lock-keyword-face fontified t)) . -4626) (undo-tree-id1894 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -4627) (undo-tree-id1895 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -4628) (undo-tree-id1896 . -1) 4629) nil (26363 40756 148668 908000) 0 nil])
nil
([nil nil ((4624 . 4628)) nil (26363 40756 148663 877000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-keyword-face fontified t)) . -4625) (undo-tree-id1889 . -1) (#("c" 0 1 (face font-lock-keyword-face fontified t)) . -4626) (undo-tree-id1890 . -1) (#("p" 0 1 (face font-lock-keyword-face fontified t)) . -4627) (undo-tree-id1891 . -1) 4628) nil (26363 40756 148661 835000) 0 nil])
([nil nil ((4625 . 4635)) nil (26363 40756 148646 823000) 0 nil])
([nil nil ((4632 . 4633) (t 26363 40756 186129 385000)) nil (26363 40934 932648 771000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 4632) (t 26363 40934 994217 543000)) nil (26363 40980 273847 730000) 0 nil])
([nil nil ((3924 . 3925) (#("2" 0 1 (fontified t)) . 3924)) nil (26363 40980 273842 613000) 0 nil])
([nil nil ((#("\\newcommand{\\sectionwithauthors}[2]{
    \\section*{#2} % Create the section without a number
    \\addcontentsline{toc}{section}{#1\\\\\\hspace{-2em}#2} % Add it to the TOC
}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 37 (fontified t) 37 41 (fontified t) 41 50 (face font-lock-keyword-face fontified t) 50 51 (fontified t) 51 53 (face font-lock-function-name-face fontified t) 53 55 (fontified t) 55 92 (face font-lock-comment-face fontified t) 92 93 (face font-lock-comment-face fontified t) 93 97 (fontified t) 97 113 (face font-lock-keyword-face fontified t) 113 130 (fontified t) 130 132 (face font-lock-warning-face fontified t) 132 139 (face font-lock-keyword-face fontified t) 139 145 (fontified t) 145 146 (fontified t) 146 149 (fontified t) 149 168 (face font-lock-comment-face fontified t) 168 169 (face font-lock-comment-face fontified t) 169 170 (fontified t rear-nonsticky t) 170 171 (fontified t)) . 4490) (undo-tree-id1897 . -170) (undo-tree-id1898 . -93) (undo-tree-id1899 . 29) (undo-tree-id1900 . -170) (undo-tree-id1901 . -29) (undo-tree-id1902 . -170) (undo-tree-id1903 . -120) (undo-tree-id1904 . -128) (undo-tree-id1905 . -128) (undo-tree-id1906 . -128) (undo-tree-id1907 . -128) (undo-tree-id1908 . -128) (undo-tree-id1909 . -128) (undo-tree-id1910 . -128) (undo-tree-id1911 . -128) (undo-tree-id1912 . -170) 4660 (t 26363 40980 329553 830000)) nil (26363 40996 133048 577000) 0 nil])
([nil nil ((apply 30 4210 4460 undo--wrap-and-run-primitive-undo 4210 4460 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4458) (#<marker at 2971 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#<marker at 4626 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4430) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#<marker at 4598 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4405) (#<marker at 4573 in packages.tex> . -1) (#<marker at 4573 in packages.tex> . -1) (#<marker at 4573 in packages.tex> . -1) (#<marker at 4573 in packages.tex> . -1) (#<marker at 4573 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4379) (#<marker at 4547 in packages.tex> . -1) (#<marker at 4547 in packages.tex> . -1) (#<marker at 4547 in packages.tex> . -1) (#<marker at 4547 in packages.tex> . -1) (#<marker at 4547 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4374) (#<marker at 4542 in packages.tex> . -1) (#<marker at 4542 in packages.tex> . -1) (#<marker at 4542 in packages.tex> . -1) (#<marker at 4542 in packages.tex> . -1) (#<marker at 4542 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4320) (#<marker at 4488 in packages.tex> . -1) (#<marker at 4488 in packages.tex> . -1) (#<marker at 4488 in packages.tex> . -1) (#<marker at 4488 in packages.tex> . -1) (#<marker at 4488 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4300) (#<marker at 4468 in packages.tex> . -1) (#<marker at 4468 in packages.tex> . -1) (#<marker at 4468 in packages.tex> . -1) (#<marker at 4468 in packages.tex> . -1) (#<marker at 4468 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4265) (#<marker at 4433 in packages.tex> . -1) (#<marker at 4433 in packages.tex> . -1) (#<marker at 4433 in packages.tex> . -1) (#<marker at 4433 in packages.tex> . -1) (#<marker at 4433 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4248) (#<marker at 4416 in packages.tex> . -1) (#<marker at 4416 in packages.tex> . -1) (#<marker at 4416 in packages.tex> . -1) (#<marker at 4416 in packages.tex> . -1) (#<marker at 4416 in packages.tex> . -1) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4210) (#<marker at 2971 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 6750 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1) (#<marker at 4378 in packages.tex> . -1)))) nil (26363 40996 133023 261000) 0 nil])
([nil nil ((4459 . 4460) (t 26363 40996 172422 213000) 4458) nil (26363 41066 172019 27000) 0 nil])
([nil nil ((3920 . 3922)) nil (26363 41068 963297 652000) 0 nil] [nil nil ((3925 . 3927) (t 26363 40998 429022 650000)) ((#(".5" 0 2 (fontified t)) . 3925) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (t 26363 41057 567286 784000)) (26363 41057 519872 416000) 0 nil])
([nil nil ((3829 . 3830) (t 26363 41068 993618 19000) 3828) nil (26363 41204 716737 240000) 0 nil])
nil
([nil nil ((3830 . 3831) 3830) nil (26363 41204 716735 581000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4018 . 4019) (nil fontified nil 3830 . 4019) (3830 . 4019)) nil (26363 41204 716731 153000) 0 nil])
([nil nil ((3917 . 3918) (t 26363 41204 776343 514000)) nil (26363 41217 656410 728000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3917) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1)) nil (26363 41217 656408 447000) 0 nil])
([nil nil ((3918 . 3920)) nil (26363 42065 711757 399000) 0 nil])
([nil nil ((apply -3 2971 3053 undo--wrap-and-run-primitive-undo 2971 3053 ((2971 . 2974) 2998))) nil (26363 42083 451367 76000) 0 nil] [nil nil ((nil rear-nonsticky nil 3572 . 3573) (nil fontified nil 3460 . 3573) (3460 . 3573) (t 26363 41217 699305 118000)) ((#("% Define a new command for the TOC title
\\newcommand{\\customcontentsname}{\\large МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS}" 0 2 (face font-lock-comment-delimiter-face fontified nil) 2 40 (face font-lock-comment-face fontified nil) 40 41 (face font-lock-comment-face fontified nil) 41 52 (face font-lock-keyword-face fontified nil) 52 53 (fontified nil) 53 72 (face font-lock-function-name-face fontified nil) 72 74 (fontified nil) 74 80 (face font-lock-keyword-face fontified nil) 80 112 (fontified nil) 112 113 (fontified nil rear-nonsticky nil)) . 3460) (undo-tree-id2180 . -40) (undo-tree-id2181 . -41) (undo-tree-id2182 . -41) (undo-tree-id2183 . -41) (undo-tree-id2184 . -41) (undo-tree-id2185 . -41) (undo-tree-id2186 . -41) (undo-tree-id2187 . -41) (undo-tree-id2188 . -41) (undo-tree-id2189 . -41) (undo-tree-id2190 . -41) (undo-tree-id2191 . -41) (undo-tree-id2192 . -41) (undo-tree-id2193 . -41) (undo-tree-id2194 . -41) (undo-tree-id2195 . -41) (undo-tree-id2196 . -41) (undo-tree-id2197 . -41) (undo-tree-id2198 . -41) (undo-tree-id2199 . -41) (undo-tree-id2200 . -41) (undo-tree-id2201 . -41) (undo-tree-id2202 . -41) (undo-tree-id2203 . -41) (undo-tree-id2204 . -41) (undo-tree-id2205 . -80) (undo-tree-id2206 . -80) (undo-tree-id2207 . -80) (undo-tree-id2208 . -80) (undo-tree-id2209 . -80) (undo-tree-id2210 . -80) (undo-tree-id2211 . -80) (undo-tree-id2212 . -80) (undo-tree-id2213 . -80) (undo-tree-id2214 . -80) (undo-tree-id2215 . -80) (undo-tree-id2216 . -80) (undo-tree-id2217 . -80) (undo-tree-id2218 . -80) (undo-tree-id2219 . -80) (undo-tree-id2220 . -41) (undo-tree-id2221 . -80) (undo-tree-id2222 . -113) (undo-tree-id2223 . -80) (nil fontified t 3500 . 3501) (nil fontified t 3462 . 3500) (nil fontified t 3460 . 3462) (nil rear-nonsticky t 3572 . 3573)) (26363 42064 464487 216000) 0 nil])
([nil nil ((#("%% \\fancyhead[LO]{\\rightmark}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 13 (face font-lock-comment-face fontified t) 13 18 (face font-lock-comment-face fontified t) 18 28 (face font-lock-comment-face fontified t) 28 29 (face font-lock-comment-face fontified t) 29 30 (face font-lock-comment-face fontified t)) . 2971) (undo-tree-id2224 . -29) (undo-tree-id2225 . -30) (t 26363 42083 507678 444000)) nil (26363 42127 211239 844000) 0 nil])
([nil nil ((#("\\addto\\captionsrussian{\\renewcommand{\\contentsname}{\\large МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS}}
" 0 6 (face font-lock-keyword-face fontified t) 6 22 (face font-lock-keyword-face fontified t) 22 23 (fontified t) 23 36 (face font-lock-keyword-face fontified t) 36 37 (fontified t) 37 50 (face font-lock-function-name-face fontified t) 50 52 (fontified t) 52 58 (face font-lock-keyword-face fontified t) 58 79 (fontified t) 79 92 (fontified t) 92 93 (fontified t)) . 3367) (undo-tree-id1959 . -93) (undo-tree-id1960 . -92) (undo-tree-id1961 . -57) (undo-tree-id1962 . -58) (undo-tree-id1963 . -93) (undo-tree-id1965 . -71) (undo-tree-id1967 . -71) (undo-tree-id1969 . -71) (undo-tree-id1971 . -71) (undo-tree-id1973 . -71) (undo-tree-id1975 . -71) (undo-tree-id1977 . -71) (undo-tree-id1979 . -71) (undo-tree-id1981 . -71) (undo-tree-id1983 . -71) (undo-tree-id1985 . -71) (undo-tree-id1987 . -71) (undo-tree-id1989 . -71) (undo-tree-id1990 . -71) (undo-tree-id1992 . -71) 3438) ((3367 . 3460)) (26363 42064 127974 181000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6750 . 6751) (nil fontified nil 6641 . 6751) (6641 . 6751) (t 26363 42127 263080 962000)) nil (26363 43234 518172 274000) 0 nil])
([nil nil ((3480 . 3481) 3447) ((#("
" 0 1 (fontified t)) . 3480) (undo-tree-id2179 . -1)) (26363 42063 781089 539000) 0 nil])
([nil current ((6751 . 6752) 6750) nil (26363 43234 518167 708000) 0 nil])
([nil nil ((#("\\newcommand{\\customcontentsname}{\\large МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 31 (face font-lock-function-name-face fontified t) 31 33 (fontified t) 33 39 (face font-lock-keyword-face fontified t) 39 71 (fontified t) 71 72 (rear-nonsticky t fontified t) 72 73 (fontified t)) . 3408) (undo-tree-id2116 . -72) (undo-tree-id2118 . -73) (undo-tree-id2120 . -73) (undo-tree-id2122 . -73) (undo-tree-id2124 . -73) (undo-tree-id2126 . -73) (undo-tree-id2128 . -73) (undo-tree-id2130 . -73) (undo-tree-id2132 . -73) (undo-tree-id2134 . -73) (undo-tree-id2136 . -73) (undo-tree-id2138 . -73) (undo-tree-id2140 . -73) (undo-tree-id2142 . -73) (undo-tree-id2144 . -73) (undo-tree-id2146 . -73) (undo-tree-id2148 . -73) (undo-tree-id2150 . -73) (undo-tree-id2152 . -73) (undo-tree-id2154 . -73) (undo-tree-id2156 . -73) (undo-tree-id2158 . -73) (undo-tree-id2160 . -73) (undo-tree-id2162 . -73) (undo-tree-id2164 . -73) (undo-tree-id2166 . -73) (undo-tree-id2168 . -73) (undo-tree-id2170 . -73) (undo-tree-id2172 . -73) (undo-tree-id2174 . -73) (undo-tree-id2176 . -73) (undo-tree-id2177 . -73) (t 26363 42000 663404 557000)) ((3408 . 3481)) (26363 42063 567987 102000) 0 nil] [nil nil ((apply -3 3408 3485 undo--wrap-and-run-primitive-undo 3408 3485 ((3408 . 3411) 3481))) ((apply 3 3408 3482 undo--wrap-and-run-primitive-undo 3408 3482 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 3408)))) (26363 41988 674197 554000) 0 nil])
nil
([nil nil ((#("% Define a new command for the TOC title
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 40 (face font-lock-comment-face fontified t) 40 41 (face font-lock-comment-face fontified t)) . 3367) (undo-tree-id1994 . -41) (undo-tree-id1995 . -40) (undo-tree-id1996 . -41) (undo-tree-id1997 . -41) (undo-tree-id1998 . -41) (undo-tree-id1999 . -41) (undo-tree-id2000 . -41) (undo-tree-id2001 . -41) (undo-tree-id2002 . -41) (undo-tree-id2004 . -41) (undo-tree-id2006 . -41) (undo-tree-id2008 . -41) (undo-tree-id2010 . -41) (undo-tree-id2012 . -41) (undo-tree-id2014 . -41) (undo-tree-id2016 . -41) (undo-tree-id2018 . -41) (undo-tree-id2020 . -41) (undo-tree-id2022 . -41) (undo-tree-id2024 . -41) (undo-tree-id2026 . -41) (undo-tree-id2028 . -41) (undo-tree-id2030 . -41) (undo-tree-id2032 . -41) (undo-tree-id2034 . -41) (undo-tree-id2036 . -41) (undo-tree-id2038 . -41) (undo-tree-id2040 . -41) (undo-tree-id2042 . -41) (undo-tree-id2044 . -41) (undo-tree-id2046 . -41) (undo-tree-id2048 . -41) (undo-tree-id2050 . -41) (undo-tree-id2052 . -41) (undo-tree-id2054 . -41) (undo-tree-id2056 . -41) (undo-tree-id2058 . -41) (undo-tree-id2060 . -41) (undo-tree-id2062 . -41) (undo-tree-id2064 . -41) (undo-tree-id2066 . -41) (undo-tree-id2068 . -41) (undo-tree-id2070 . -41) (undo-tree-id2072 . -41) (undo-tree-id2074 . -41) (undo-tree-id2076 . -41) (undo-tree-id2078 . -41) (undo-tree-id2080 . -41) (undo-tree-id2082 . -41) (undo-tree-id2084 . -41) (undo-tree-id2086 . -41) (undo-tree-id2088 . -41) (undo-tree-id2090 . -41) (undo-tree-id2092 . -41) (undo-tree-id2094 . -41) (undo-tree-id2096 . -41) (undo-tree-id2098 . -41) (undo-tree-id2100 . -41) (undo-tree-id2102 . -41) (undo-tree-id2104 . -41) (undo-tree-id2106 . -41) (undo-tree-id2108 . -41) (undo-tree-id2110 . -41) (undo-tree-id2112 . -41) (undo-tree-id2114 . -41)) ((3367 . 3408) (t 26363 42012 686390 687000)) (26363 42012 661070 386000) 0 nil])
nil
nil
