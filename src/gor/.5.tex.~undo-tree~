(undo-tree-save-format-version . 1)
"3a00149d6f781d35e8360b56ebec4a2036284d84"
[nil nil nil nil (26357 27607 212460 492000) 0 nil]
([nil nil ((#("
" 0 1 (fontified t)) . 1) (t 26354 21871 546099 487000)) nil (26357 27607 212459 650000) 0 nil])
([nil nil ((#("{\\bfseries IRSTI 55.39.01}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 25 (face (bold) fontified t) 25 26 (fontified t)) . -10) (undo-tree-id2 . -14) (undo-tree-id3 . -14) 24) nil (26357 27607 212458 969000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23 . 24) (nil fontified nil 10 . 24) (10 . 24)) nil (26357 27607 212457 166000) 0 nil])
([nil nil ((#("{\\bfseries REPUBLIC OF KAZAKHSTAN}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 33 (face (bold) fontified t) 33 34 (fontified t)) . -85) (undo-tree-id0 . -13) (undo-tree-id1 . -13) 98) nil (26357 27607 212507 720000) 0 nil])
([nil nil ((82 . 83)) nil (26357 27616 559341 596000) 0 nil] [nil nil ((nil rear-nonsticky nil 103 . 104) (nil fontified nil 82 . 104) (82 . 104)) ((#("REPUBLIC OF KAZAKHSTAN" 0 21 (face (bold) fontified nil) 21 22 (face (bold) rear-nonsticky nil fontified nil)) . 82) (undo-tree-id4 . -21) (undo-tree-id5 . -21) (undo-tree-id6 . -21) (undo-tree-id7 . -21) (undo-tree-id8 . -21) (nil rear-nonsticky t 103 . 104)) (26357 27607 212436 377000) 0 nil])
([nil nil ((nil rear-nonsticky nil 104 . 105) (nil fontified nil 83 . 105) (83 . 105) 82) nil (26357 27616 559341 105000) 0 nil])
nil
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 27) (undo-tree-id130 . -1)) nil (26357 27616 559340 313000) 0 nil])
([nil nil (27) nil (26357 27616 559339 261000) 0 nil])
([nil nil ((35 . 47) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -35) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (31 . 36) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -31) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (26 . 32)) nil (26357 27616 559338 440000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 128) (undo-tree-id117 . -1)) nil (26357 27616 559333 360000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 128) (undo-tree-id116 . -1)) nil (26357 27616 559444 538000) 0 nil])
([nil nil ((nil rear-nonsticky nil 127 . 128) (nil fontified nil 46 . 128) (46 . 128) 45) nil (26357 27628 215955 341000) 0 nil] [nil nil ((#("{\\bfseries \\textsuperscript{1}N.T. Smailova\\textsuperscript{ðŸ–‚}, A.Y.
Popov\\textsuperscript{2}}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t) 11 27 (face (font-lock-keyword-face bold) fontified t) 27 43 (face (bold) fontified t) 43 59 (face (font-lock-keyword-face bold) fontified t) 59 68 (face (bold) fontified t) 68 69 (face (bold) fontified t) 69 74 (face (bold) fontified t) 74 90 (face (font-lock-keyword-face bold) fontified t) 90 93 (face (bold) fontified t) 93 94 (fontified t)) . -128) (undo-tree-id9 . -68) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -3) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (undo-tree-id42 . -6) (undo-tree-id43 . -6) (undo-tree-id44 . -6) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -9) (undo-tree-id56 . -9) (undo-tree-id57 . -9) (undo-tree-id58 . -9) (undo-tree-id59 . -9) (undo-tree-id60 . -10) (undo-tree-id61 . -10) (undo-tree-id62 . -10) (undo-tree-id63 . -10) (undo-tree-id64 . -10) (undo-tree-id65 . -10) (undo-tree-id66 . -10) (undo-tree-id67 . -10) (undo-tree-id68 . -10) (undo-tree-id69 . -10) (undo-tree-id70 . -10) (undo-tree-id71 . -10) (undo-tree-id72 . -10) (undo-tree-id73 . -10) (undo-tree-id74 . -10) (undo-tree-id75 . -11) (undo-tree-id76 . -11) (undo-tree-id77 . -11) (undo-tree-id78 . -11) (undo-tree-id79 . -11) (undo-tree-id80 . -11) (undo-tree-id81 . -11) (undo-tree-id82 . -11) (undo-tree-id83 . -11) (undo-tree-id84 . -11) (undo-tree-id85 . -11) (undo-tree-id86 . -11) (undo-tree-id87 . -11) (undo-tree-id88 . -11) (undo-tree-id89 . -11) (undo-tree-id90 . -11) (undo-tree-id91 . -11) (undo-tree-id92 . -11) (undo-tree-id93 . -11) (undo-tree-id94 . -11) (undo-tree-id95 . -11) (undo-tree-id96 . -11) (undo-tree-id97 . -11) (undo-tree-id98 . -11) (undo-tree-id99 . -11) (undo-tree-id100 . -11) (undo-tree-id101 . -11) (undo-tree-id102 . -11) (undo-tree-id103 . -11) (undo-tree-id104 . -11) (undo-tree-id105 . -11) (undo-tree-id106 . -11) (undo-tree-id107 . -11) (undo-tree-id108 . -11) (undo-tree-id109 . -11) (undo-tree-id110 . -11) (undo-tree-id111 . -11) (undo-tree-id112 . -11) (undo-tree-id113 . -11) (undo-tree-id114 . -11) (undo-tree-id115 . -11) 139) ((128 . 222)) (26357 27616 559326 948000) 0 nil])
([nil nil ((103 . 104) (#("
" 0 1 (fontified t)) . -103) 49) nil (26357 27628 215954 189000) 0 nil])
nil
([nil nil ((#("\\textsuperscript{1}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 46) (undo-tree-id134 . -18)) nil (26357 27628 215953 417000) 0 nil])
([nil nil ((#("\\textsuperscript{ðŸ–‚}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 59) (undo-tree-id132 . -18) (undo-tree-id133 . -19)) nil (26357 27628 215952 225000) 0 nil])
([nil nil ((#("\\textsuperscript{2}" 0 16 (face font-lock-keyword-face fontified t) 16 18 (fontified t) 18 19 (rear-nonsticky t fontified t)) . 71) (undo-tree-id131 . -18)) nil (26357 27628 215949 520000) 0 nil])
([nil nil ((153 . 168) (512 . 525)) nil (26357 27628 215937 638000) 0 nil])
([nil nil ((2142 . 2143) (#("
" 0 1 (fontified t)) . -2142) (#("
" 0 1 (fontified t)) . -2142) (undo-tree-id146 . -1) 2133 (t 26357 27628 218936 654000)) nil (26357 27650 113146 913000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 2141) (undo-tree-id145 . -1)) nil (26357 27650 113145 119000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 2142) (undo-tree-id144 . -10)) nil (26357 27650 113144 468000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 2089) (undo-tree-id143 . -9)) nil (26357 27650 113143 496000) 0 nil])
([nil nil (2089) nil (26357 27650 113142 615000) 0 nil])
([nil nil ((2100 . 2103) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -2100) (undo-tree-id140 . -1) (2093 . 2101) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -2093) (undo-tree-id141 . -1) (2089 . 2094) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -2089) (undo-tree-id142 . -1) 2090 (2088 . 2090)) nil (26357 27650 113141 302000) 0 nil])
([nil nil ((2188 . 2203) (2491 . 2504)) nil (26357 27650 113137 305000) 0 nil])
([nil nil ((4013 . 4014) (#("
" 0 1 (fontified t)) . -4013) (#("
" 0 1 (fontified t)) . -4013) 3965) nil (26357 27650 113136 624000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 4012)) nil (26357 27650 113135 902000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (face (bold) fontified t) 1 10 (face (font-lock-keyword-face bold) fontified t) 10 11 (face (bold) fontified t)) . 4013) (undo-tree-id139 . -10)) nil (26357 27650 113135 321000) 0 nil])
([nil nil (4013) nil (26357 27650 113134 670000) 0 nil])
([nil nil ((3963 . 3966) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3963) (undo-tree-id136 . -1) (3956 . 3964) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3956) (undo-tree-id137 . -1) (3951 . 3957) (#("@" 0 1 (fontified t)) . -3951) (undo-tree-id138 . -1) 3952 (3951 . 3952)) nil (26357 27650 113133 818000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 3967) (undo-tree-id135 . -9)) nil (26357 27650 113130 963000) 0 nil])
([nil nil ((4043 . 4058) (4355 . 4368)) nil (26357 27650 113119 451000) 0 nil])
([nil nil ((5809 . 5830) (11254 . 11270) (t 26357 27650 118817 565000)) nil (26357 27656 973862 317000) 0 nil])
([nil nil ((#("{\\bfseries Figure 1 - Location of the planned underground oil storage
facility located in Inder district}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 104 (face (bold) fontified t) 104 105 (fontified t)) . -11400) (undo-tree-id208 . -70) (undo-tree-id209 . -70) (undo-tree-id210 . -70) (undo-tree-id211 . -70) (undo-tree-id212 . -70) (undo-tree-id213 . -70) (undo-tree-id214 . -70) (undo-tree-id215 . -70) (undo-tree-id216 . -70) (undo-tree-id217 . -70) (undo-tree-id218 . -70) (undo-tree-id219 . -70) (undo-tree-id220 . -70) (undo-tree-id221 . -70) (undo-tree-id222 . -70) (undo-tree-id223 . -70) (undo-tree-id224 . -70) (undo-tree-id225 . -70) (undo-tree-id226 . -70) (undo-tree-id227 . -71) (undo-tree-id228 . -71) (undo-tree-id229 . -71) (undo-tree-id230 . -71) (undo-tree-id231 . -71) (undo-tree-id232 . -71) (undo-tree-id233 . -71) (undo-tree-id234 . -71) (undo-tree-id235 . -71) (undo-tree-id236 . -71) (undo-tree-id237 . -72) (undo-tree-id238 . -72) (undo-tree-id239 . -72) (undo-tree-id240 . -72) (undo-tree-id241 . -72) (undo-tree-id242 . -73) (undo-tree-id243 . -73) (undo-tree-id244 . -73) (undo-tree-id245 . -73) (undo-tree-id246 . -73) (undo-tree-id247 . -74) (undo-tree-id248 . -74) (undo-tree-id249 . -74) (undo-tree-id250 . -74) (undo-tree-id251 . -74) (undo-tree-id252 . -75) (undo-tree-id253 . -75) (undo-tree-id254 . -75) (undo-tree-id255 . -75) (undo-tree-id256 . -75) (undo-tree-id257 . -76) (undo-tree-id258 . -76) (undo-tree-id259 . -76) (undo-tree-id260 . -76) (undo-tree-id261 . -76) (undo-tree-id262 . -77) (undo-tree-id263 . -77) (undo-tree-id264 . -77) (undo-tree-id265 . -77) (undo-tree-id266 . -77) (undo-tree-id267 . -78) (undo-tree-id268 . -78) (undo-tree-id269 . -78) (undo-tree-id270 . -78) (undo-tree-id271 . -78) (undo-tree-id272 . -79) (undo-tree-id273 . -79) (undo-tree-id274 . -79) (undo-tree-id275 . -79) (undo-tree-id276 . -79) (undo-tree-id277 . -80) (undo-tree-id278 . -80) (undo-tree-id279 . -80) (undo-tree-id280 . -80) (undo-tree-id281 . -80) (undo-tree-id282 . -81) (undo-tree-id283 . -81) (undo-tree-id284 . -81) (undo-tree-id285 . -81) (undo-tree-id286 . -81) (undo-tree-id287 . -82) (undo-tree-id288 . -82) (undo-tree-id289 . -82) (undo-tree-id290 . -82) (undo-tree-id291 . -82) (undo-tree-id292 . -70) (undo-tree-id293 . -83) (undo-tree-id294 . -83) (undo-tree-id295 . -83) (undo-tree-id296 . -83) (undo-tree-id297 . -83) (undo-tree-id298 . -83) (undo-tree-id299 . -83) (undo-tree-id300 . -83) (undo-tree-id301 . -83) (undo-tree-id302 . -83) (undo-tree-id303 . -83) (undo-tree-id304 . -83) (undo-tree-id305 . -83) (undo-tree-id306 . -83) (undo-tree-id307 . -83) (undo-tree-id308 . -83) (undo-tree-id309 . -83) (undo-tree-id310 . -83) (undo-tree-id311 . -83) (undo-tree-id312 . -83) (undo-tree-id313 . -83) (undo-tree-id314 . -83) (undo-tree-id315 . -83) (undo-tree-id316 . -83) (undo-tree-id317 . -83) (undo-tree-id318 . -83) (undo-tree-id319 . -83) (undo-tree-id320 . -83) (undo-tree-id321 . -83) (undo-tree-id322 . -83) (undo-tree-id323 . -83) (undo-tree-id324 . -83) (undo-tree-id325 . -83) (undo-tree-id326 . -83) (undo-tree-id327 . -83) (undo-tree-id328 . -83) (undo-tree-id329 . -83) (undo-tree-id330 . -83) (undo-tree-id331 . -83) (undo-tree-id332 . -83) (undo-tree-id333 . -83) (undo-tree-id334 . -83) (undo-tree-id335 . -83) (undo-tree-id336 . -83) (undo-tree-id337 . -83) (undo-tree-id338 . -83) 11483 (t 26357 27656 976780 252000)) nil (26357 27670 189476 452000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11476 . 11477) (nil fontified nil 11384 . 11477) (11384 . 11477)) nil (26357 27670 189410 428000) 0 nil])
([nil nil ((11477 . 11478)) nil (26357 27670 189409 937000) 0 nil])
([nil nil ((#("{\\bfseries of Atyrau region}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 27 (face (bold) fontified t) 27 28 (fontified t)) . -11496) (undo-tree-id147 . -27) (undo-tree-id148 . -27) (undo-tree-id149 . -27) (undo-tree-id150 . -27) (undo-tree-id151 . -27) (undo-tree-id152 . -27) (undo-tree-id153 . -27) (undo-tree-id154 . -27) (undo-tree-id155 . -27) (undo-tree-id156 . -27) (undo-tree-id157 . -27) (undo-tree-id158 . -27) (undo-tree-id159 . -27) (undo-tree-id160 . -27) (undo-tree-id161 . -27) (undo-tree-id162 . -26) (undo-tree-id163 . -26) (undo-tree-id164 . -26) (undo-tree-id165 . -26) (undo-tree-id166 . -26) (undo-tree-id167 . -26) (undo-tree-id168 . -26) (undo-tree-id169 . -26) (undo-tree-id170 . -26) (undo-tree-id171 . -26) (undo-tree-id172 . -25) (undo-tree-id173 . -25) (undo-tree-id174 . -25) (undo-tree-id175 . -25) (undo-tree-id176 . -25) (undo-tree-id177 . -25) (undo-tree-id178 . -25) (undo-tree-id179 . -25) (undo-tree-id180 . -25) (undo-tree-id181 . -25) (undo-tree-id182 . -25) (undo-tree-id183 . -25) (undo-tree-id184 . -25) (undo-tree-id185 . -25) (undo-tree-id186 . -25) (undo-tree-id187 . -25) (undo-tree-id188 . -25) (undo-tree-id189 . -25) (undo-tree-id190 . -25) (undo-tree-id191 . -25) (undo-tree-id192 . -25) (undo-tree-id193 . -25) (undo-tree-id194 . -25) (undo-tree-id195 . -25) (undo-tree-id196 . -25) (undo-tree-id197 . -25) (undo-tree-id198 . -25) (undo-tree-id199 . -25) (undo-tree-id200 . -25) (undo-tree-id201 . -25) (undo-tree-id202 . -25) (undo-tree-id203 . -25) (undo-tree-id204 . -25) (undo-tree-id205 . -25) (undo-tree-id206 . -25) (undo-tree-id207 . -25) 11521) nil (26357 27670 189538 157000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11493 . 11494) (nil fontified nil 11478 . 11494) (11478 . 11494)) nil (26357 27671 334204 767000) 0 nil] [nil nil ((nil rear-nonsticky nil 11494 . 11495) (nil fontified nil 11479 . 11495) (11479 . 11495) 11478) ((#("of Atyrau region" 0 15 (fontified nil) 15 16 (rear-nonsticky nil fontified nil)) . 11479) (undo-tree-id339 . -15) (undo-tree-id340 . -15) (undo-tree-id341 . -15) (undo-tree-id342 . -15) (undo-tree-id343 . -15) (nil rear-nonsticky t 11494 . 11495)) (26357 27670 189375 553000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11509) (undo-tree-id348 . -1) (t 26357 27671 339702 83000)) nil (26357 27673 583247 937000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 11509) (undo-tree-id347 . -1)) nil (26357 27673 583246 705000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11509) (undo-tree-id345 . -1) (undo-tree-id346 . -1)) nil (26357 27673 583245 102000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11509) (undo-tree-id344 . -1)) nil (26357 27673 583239 982000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -11348) (t 26357 27673 585689 855000) (11349 . 11350) 11348 (t 26357 27673 585689 855000)) nil (26357 27689 370435 581000) 0 nil])
([nil nil ((nil fontified t 11348 . 11349) (#("7" 0 1 (fontified t)) . -11348) (11349 . 11350) 11348) nil (26357 27689 370430 812000) 0 nil])
([nil nil ((11510 . 11531) (25579 . 25595) (t 26357 27689 376603 872000)) nil (26357 27700 740213 732000) 0 nil])
([nil nil ((25617 . 25632) (25640 . 25653)) nil (26357 27700 740205 988000) 0 nil])
([nil nil ((#("\\begin{enumerate}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 18 (fontified t)) . 25669) (undo-tree-id353 . -17) (undo-tree-id354 . -16) (undo-tree-id355 . -16) (undo-tree-id356 . -16) (undo-tree-id357 . -16) (undo-tree-id358 . -16) (undo-tree-id359 . -16) (undo-tree-id360 . -16) (undo-tree-id361 . -16) (undo-tree-id362 . -16) (undo-tree-id363 . -16) (undo-tree-id364 . -16) (undo-tree-id365 . -16) (undo-tree-id366 . -16) (undo-tree-id367 . -16) (undo-tree-id368 . -16) (undo-tree-id369 . -16) (undo-tree-id370 . -16) (undo-tree-id371 . -16) (undo-tree-id372 . -16) (undo-tree-id373 . -16) (undo-tree-id374 . -16) (undo-tree-id375 . -16) (undo-tree-id376 . -16) (undo-tree-id377 . -16) (undo-tree-id378 . -18) 25685 (t 26357 27700 745541 942000)) nil (26357 27726 299782 674000) 0 nil])
([nil nil ((#("\\def\\labelenumi{\\arabic{enumi}.}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 15 (face font-lock-function-name-face fontified t) 15 16 (fontified t) 16 23 (face font-lock-keyword-face fontified t) 23 32 (fontified t) 32 33 (fontified t)) . 25669) (undo-tree-id351 . -32) (undo-tree-id352 . -16) 25685) nil (26357 27726 299769 720000) 0 nil])
([nil nil ((nil fontified t 26720 . 26723) (nil face font-lock-keyword-face 26720 . 26723) (#("\\item" 0 5 (face font-lock-keyword-face fontified t)) . -26720) (26725 . 26728) (nil fontified t 26520 . 26523) (nil face font-lock-keyword-face 26520 . 26523) (#("\\item" 0 5 (face font-lock-keyword-face fontified t)) . -26520) (26525 . 26528) (nil fontified t 26425 . 26428) (nil face font-lock-keyword-face 26425 . 26428) (#("\\item" 0 5 (face font-lock-keyword-face fontified t)) . -26425) (26430 . 26433) (nil fontified t 26289 . 26292) (nil face font-lock-keyword-face 26289 . 26292) (#("\\item" 0 5 (face font-lock-keyword-face fontified t)) . -26289) (26294 . 26297) (nil fontified t 26039 . 26042) (nil face font-lock-keyword-face 26039 . 26042) (#("\\item" 0 5 (face font-lock-keyword-face fontified t)) . -26039) (26044 . 26047) (nil fontified t 25837 . 25840) (nil face font-lock-keyword-face 25837 . 25840) (#("\\item" 0 5 (face font-lock-keyword-face fontified t)) . -25837) (25842 . 25845) (nil fontified t 25669 . 25672) (nil face font-lock-keyword-face 25669 . 25672) (#("\\item" 0 5 (face font-lock-keyword-face fontified t)) . -25669) (25674 . 25677)) nil (26357 27726 299767 415000) 0 nil])
([nil nil ((#("\\end{enumerate}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 27000) (undo-tree-id349 . -15) (undo-tree-id350 . 16)) nil (26357 27726 299765 201000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -26721) (26722 . 26723) (#("1" 0 1 (fontified t)) . -26521) (26522 . 26523) (#("1" 0 1 (fontified t)) . -26426) (26427 . 26428) (#("1" 0 1 (fontified t)) . -26290) (26291 . 26292) (#("1" 0 1 (fontified t)) . -26040) (26041 . 26042) (#("1" 0 1 (fontified t)) . -25838) (25839 . 25840)) nil (26357 27726 299755 703000) 0 nil])
([nil nil ((25670 . 25690) (27270 . 27288)) nil (26357 27726 299754 912000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -26914) (#("  " 0 2 (fontified t)) . -26844) (#("  " 0 2 (fontified t)) . -26773) (#("  " 0 2 (fontified t)) . -26712) (#("  " 0 2 (fontified t)) . -26652) (#("  " 0 2 (fontified t)) . -26586) (#("  " 0 2 (fontified t)) . -26518) (#("  " 0 2 (fontified t)) . -26496) (#("  " 0 2 (fontified t)) . -26427) (#("  " 0 2 (fontified t)) . -26362) (#("  " 0 2 (fontified t)) . -26295) (#("  " 0 2 (fontified t)) . -26264) (#("  " 0 2 (fontified t)) . -26193) (#("  " 0 2 (fontified t)) . -26124) (#("  " 0 2 (fontified t)) . -26053) (#("  " 0 2 (fontified t)) . -25993) (#("  " 0 2 (fontified t)) . -25928) (#("  " 0 2 (fontified t)) . -25857) (#("  " 0 2 (fontified t)) . -25743) (#("  " 0 2 (fontified t)) . -25693) 25690) nil (26357 27726 299749 632000) 0 nil])
([nil nil ((27269 . 27284) (27292 . 27305) (t 26357 27726 305402 619000)) nil (26357 27744 748700 613000) 0 nil])
([nil nil ((27321 . 27341) (29217 . 29235)) nil (26357 27744 748699 661000) 0 nil])
([nil nil ((29302 . 29322) (29641 . 29659)) nil (26357 27744 748698 679000) 0 nil])
([nil nil ((29720 . 29740) (30034 . 30052)) nil (26357 27776 517202 609000) 0 nil])
([nil nil ((27071 . 27073) (t 26357 27778 884115 605000)) nil (26357 27797 478771 743000) 0 nil] [nil nil ((27023 . 27024) (t 26357 27744 757301 967000) 26981) ((#("
" 0 1 (fontified t)) . 27023) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (t 26357 27771 821154 198000)) (26357 27771 814476 459000) 0 nil])
([nil current ((27638 . 27639) (#(" " 0 1 (fontified nil)) . 27637) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (27638 . 27639) (t 26357 27797 485013 939000)) nil (26357 27832 540796 128000) 0 nil])
nil
([nil nil ((nil fontified t 11348 . 11349) (t 26357 27809 776946 719000) (#("6" 0 1 (fontified t)) . -11348) (t 26357 27809 776946 719000) (11349 . 11350) 11348 (t 26357 27809 776946 719000)) ((#("5" 0 1 (fontified nil)) . 11349) (11348 . 11349) (t 26357 27825 119862 783000)) (26357 27825 113362 752000) 0 nil])
nil
