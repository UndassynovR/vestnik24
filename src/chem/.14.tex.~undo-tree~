(undo-tree-save-format-version . 1)
"0065ace6ba2595103fd6225e5cf62791647fcea3"
[nil nil nil nil (26361 56636 612655 72000) 0 nil]
([nil nil ((#("{\\bfseries МРНТИ 61.71.29}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 25 (face (bold) fontified t) 25 26 (fontified t)) . -10) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -3) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -7) (undo-tree-id167 . -7) (undo-tree-id168 . -7) (undo-tree-id169 . -7) (undo-tree-id170 . -7) (undo-tree-id171 . -8) (undo-tree-id172 . -8) (undo-tree-id173 . -8) (undo-tree-id174 . -8) (undo-tree-id175 . -8) (undo-tree-id176 . -8) (undo-tree-id177 . -8) (undo-tree-id178 . -8) (undo-tree-id179 . -8) (undo-tree-id180 . -8) (undo-tree-id181 . -9) (undo-tree-id182 . -9) (undo-tree-id183 . -9) (undo-tree-id184 . -9) (undo-tree-id185 . -9) (undo-tree-id186 . -9) (undo-tree-id187 . -9) (undo-tree-id188 . -9) (undo-tree-id189 . -9) (undo-tree-id190 . -9) (undo-tree-id191 . -10) (undo-tree-id192 . -10) (undo-tree-id193 . -10) (undo-tree-id194 . -10) (undo-tree-id195 . -10) (undo-tree-id196 . -10) (undo-tree-id197 . -10) (undo-tree-id198 . -10) (undo-tree-id199 . -10) (undo-tree-id200 . -10) (undo-tree-id201 . -11) (undo-tree-id202 . -11) (undo-tree-id203 . -11) (undo-tree-id204 . -11) (undo-tree-id205 . -11) (undo-tree-id206 . -11) (undo-tree-id207 . -11) (undo-tree-id208 . -11) (undo-tree-id209 . -11) (undo-tree-id210 . -11) (undo-tree-id211 . -12) (undo-tree-id212 . -12) (undo-tree-id213 . -12) (undo-tree-id214 . -12) (undo-tree-id215 . -12) (undo-tree-id216 . -12) (undo-tree-id217 . -12) (undo-tree-id218 . -12) (undo-tree-id219 . -12) (undo-tree-id220 . -12) (undo-tree-id221 . -12) (undo-tree-id222 . -12) (undo-tree-id223 . -12) (undo-tree-id224 . -12) (undo-tree-id225 . -12) (undo-tree-id226 . -12) (undo-tree-id227 . -12) (undo-tree-id228 . -12) (undo-tree-id229 . -12) (undo-tree-id230 . -12) (undo-tree-id231 . -12) (undo-tree-id232 . -12) (undo-tree-id233 . -12) (undo-tree-id234 . -12) (undo-tree-id235 . -12) (undo-tree-id236 . -12) (undo-tree-id237 . -12) (undo-tree-id238 . -12) (undo-tree-id239 . -12) (undo-tree-id240 . -12) (undo-tree-id241 . -12) (undo-tree-id242 . -12) (undo-tree-id243 . -12) (undo-tree-id244 . -12) (undo-tree-id245 . -12) (undo-tree-id246 . -12) 22 (t 26361 56522 121811 629000)) nil (26361 56636 612652 527000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23 . 24) (nil fontified nil 10 . 24) (10 . 24)) nil (26361 56636 612612 51000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 27) (undo-tree-id129 . -9) (undo-tree-id130 . -10)) nil (26361 56636 612611 570000) 0 nil])
([nil nil (27) nil (26361 56636 612610 498000) 0 nil])
([nil nil ((45 . 47) (#("." 0 1 (fontified t)) . -45) (undo-tree-id126 . -1) 46 (35 . 46) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -35) (undo-tree-id127 . -1) (31 . 36) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -31) (undo-tree-id128 . -1) (26 . 32)) nil (26361 56640 317260 582000) 0 nil])
([nil nil ((nil rear-nonsticky nil 58 . 59) (nil fontified nil 46 . 59) (46 . 59) 45) nil (26361 56670 673209 193000) 0 nil] [nil nil ((nil rear-nonsticky nil 57 . 58) (nil fontified nil 45 . 58) (45 . 58)) ((#("Е.М. Сүлеймен" 0 12 (fontified nil) 12 13 (rear-nonsticky nil fontified nil)) . 45) (undo-tree-id313 . -12) (undo-tree-id314 . -12) (undo-tree-id315 . -12) (undo-tree-id316 . -12) (undo-tree-id317 . -12) (nil rear-nonsticky t 57 . 58)) (26361 56640 317192 425000) 0 nil] [nil nil ((#("Е.М. Сүлеймен" 0 13 (face (bold) fontified t)) . 128) (undo-tree-id247 . -12) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -13)) ((128 . 141)) (26361 56638 247805 50000) 0 nil] [nil nil ((#("{\\bfseries \\textsuperscript{1,2}Е.М. Сүлеймен}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t) 11 27 (face (font-lock-keyword-face bold) fontified t) 27 45 (face (bold) fontified t) 45 46 (fontified t)) . -96) (undo-tree-id0 . -20) (undo-tree-id1 . -20) (undo-tree-id2 . -20) (undo-tree-id3 . -20) (undo-tree-id4 . -20) (undo-tree-id5 . -20) (undo-tree-id6 . -20) (undo-tree-id7 . -20) (undo-tree-id8 . -20) (undo-tree-id9 . -20) (undo-tree-id10 . -20) (undo-tree-id11 . -20) (undo-tree-id12 . -20) (undo-tree-id13 . -20) (undo-tree-id14 . -20) (undo-tree-id15 . -21) (undo-tree-id16 . -21) (undo-tree-id17 . -21) (undo-tree-id18 . -21) (undo-tree-id19 . -21) (undo-tree-id20 . -21) (undo-tree-id21 . -21) (undo-tree-id22 . -21) (undo-tree-id23 . -21) (undo-tree-id24 . -21) (undo-tree-id25 . -22) (undo-tree-id26 . -22) (undo-tree-id27 . -22) (undo-tree-id28 . -22) (undo-tree-id29 . -22) (undo-tree-id30 . -23) (undo-tree-id31 . -23) (undo-tree-id32 . -23) (undo-tree-id33 . -23) (undo-tree-id34 . -23) (undo-tree-id35 . -24) (undo-tree-id36 . -24) (undo-tree-id37 . -24) (undo-tree-id38 . -24) (undo-tree-id39 . -24) (undo-tree-id40 . -25) (undo-tree-id41 . -25) (undo-tree-id42 . -25) (undo-tree-id43 . -25) (undo-tree-id44 . -25) (undo-tree-id45 . -26) (undo-tree-id46 . -26) (undo-tree-id47 . -26) (undo-tree-id48 . -26) (undo-tree-id49 . -26) (undo-tree-id50 . -27) (undo-tree-id51 . -27) (undo-tree-id52 . -27) (undo-tree-id53 . -27) (undo-tree-id54 . -27) (undo-tree-id55 . -28) (undo-tree-id56 . -28) (undo-tree-id57 . -28) (undo-tree-id58 . -28) (undo-tree-id59 . -28) (undo-tree-id60 . -29) (undo-tree-id61 . -29) (undo-tree-id62 . -29) (undo-tree-id63 . -29) (undo-tree-id64 . -29) (undo-tree-id65 . -30) (undo-tree-id66 . -30) (undo-tree-id67 . -30) (undo-tree-id68 . -30) (undo-tree-id69 . -30) (undo-tree-id70 . -31) (undo-tree-id71 . -31) (undo-tree-id72 . -31) (undo-tree-id73 . -31) (undo-tree-id74 . -31) (undo-tree-id75 . -32) (undo-tree-id76 . -32) (undo-tree-id77 . -32) (undo-tree-id78 . -32) (undo-tree-id79 . -32) (undo-tree-id80 . -33) (undo-tree-id81 . -33) (undo-tree-id82 . -33) (undo-tree-id83 . -33) (undo-tree-id84 . -33) (undo-tree-id85 . -33) (undo-tree-id86 . -33) (undo-tree-id87 . -33) (undo-tree-id88 . -33) (undo-tree-id89 . -33) (undo-tree-id90 . -33) (undo-tree-id91 . -33) (undo-tree-id92 . -33) (undo-tree-id93 . -33) (undo-tree-id94 . -33) (undo-tree-id95 . -33) (undo-tree-id96 . -33) (undo-tree-id97 . -33) (undo-tree-id98 . -33) (undo-tree-id99 . -33) (undo-tree-id100 . -33) (undo-tree-id101 . -33) (undo-tree-id102 . -33) (undo-tree-id103 . -33) (undo-tree-id104 . -33) (undo-tree-id105 . -33) (undo-tree-id106 . -33) (undo-tree-id107 . -33) (undo-tree-id108 . -33) (undo-tree-id109 . -33) (undo-tree-id110 . -33) (undo-tree-id111 . -33) (undo-tree-id112 . -33) (undo-tree-id113 . -33) (undo-tree-id114 . -33) (undo-tree-id115 . -33) (undo-tree-id116 . -33) (undo-tree-id117 . -33) (undo-tree-id118 . -33) (undo-tree-id119 . -33) (undo-tree-id120 . -33) (undo-tree-id121 . -33) (undo-tree-id122 . -33) (undo-tree-id123 . -33) (undo-tree-id124 . -33) (undo-tree-id125 . -33) 129) ((96 . 142)) (26361 56636 612604 26000) 0 nil])
([nil nil ((109 . 124) (320 . 333)) nil (26361 56670 673208 743000) 0 nil])
nil
nil
nil
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 1428) (undo-tree-id330 . -9)) nil (26361 56670 673208 412000) 0 nil])
([nil nil (1428) nil (26361 56670 673207 911000) 0 nil])
([nil nil ((1439 . 1442) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -1439) (undo-tree-id328 . -1) (1432 . 1440) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -1432) (undo-tree-id329 . -1) (1427 . 1433)) nil (26361 56670 673207 470000) 0 nil])
([nil nil ((1499 . 1514) (1740 . 1753)) nil (26361 56670 673206 358000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 2862)) nil (26361 56670 673206 7000) 0 nil])
([nil nil (2862) nil (26361 56670 673205 76000) 0 nil])
([nil nil ((#("bfseries " 0 8 (fontified t) 8 9 (fontified t)) . 2862) (undo-tree-id327 . -8)) nil (26361 56670 673204 665000) 0 nil])
([nil nil ((2873 . 2876) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -2873) (undo-tree-id325 . -1) (2865 . 2874) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -2865) (undo-tree-id326 . -1) (2861 . 2866)) nil (26361 56670 673203 753000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified t)) . 2865) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1)) nil (26361 56670 673201 569000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2866 . 2867) (nil fontified nil 2866 . 2867) (2866 . 2867) 2865) nil (26361 56670 673192 31000) 0 nil])
([nil nil ((2931 . 2946) (3180 . 3193)) nil (26361 56677 360010 782000) 0 nil])
([nil current ((4279 . 4300) (7887 . 7903) 4279 (t 26361 56670 709887 243000)) nil (26361 58376 182422 396000) 0 nil] [nil nil ((4279 . 4294) (7887 . 7900) (t 26361 56670 709887 243000)) ((#("\\end{center}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 11 (face font-lock-function-name-face fontified t latex-env-pair t) 11 12 (fontified t latex-env-pair t) 12 13 (fontified t)) . 7887) (undo-tree-id331 . 13) (#("\\begin{center}
" 6 14 (latex-env-pair t)) . 4279) (undo-tree-id332 . -15)) (26361 56677 359810 738000) 0 nil])
nil
nil
