(undo-tree-save-format-version . 1)
"a73c3618bb751b05b5fe2762ae37b9cfe23d2e77"
[nil nil nil nil (26363 42735 138722 925000) 0 nil]
([nil nil ((#("," 0 1 (fontified t)) . 333) (t 26362 31425 138725 568000)) nil (26363 42735 138721 244000) 0 nil])
([nil nil ((1735 . 1736)) nil (26363 42735 138719 447000) 0 nil])
([nil nil ((3176 . 3177)) nil (26363 42735 138715 490000) 0 nil])
([nil nil ((8180 . 8192) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -8180) (undo-tree-id0 . -1) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -8181) (undo-tree-id1 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified t)) . -8182) (undo-tree-id2 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified t)) . -8183) (undo-tree-id3 . -1) 8184 (8181 . 8184) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -8181) (undo-tree-id4 . -1) (8178 . 8182) (8173 . 8178) (t 26363 42735 158827 210000) 8161) nil (26363 42751 287965 714000) 0 nil])
([nil nil ((#("% Please add the following required packages to your document preamble:
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 72 (face font-lock-comment-face fontified t)) . 11375) (undo-tree-id186 . -71) (undo-tree-id187 . -14) (undo-tree-id188 . -14) (undo-tree-id189 . -14) (undo-tree-id190 . -14) (undo-tree-id191 . -14) (undo-tree-id192 . -14) (undo-tree-id193 . -14) (undo-tree-id194 . -14) (undo-tree-id195 . -14) (undo-tree-id196 . -14) (undo-tree-id197 . -14) (undo-tree-id198 . -14) (undo-tree-id199 . -14) (undo-tree-id200 . -14) (undo-tree-id201 . -72) 11389 (t 26363 42751 328358 820000)) nil (26363 42831 492639 971000) 0 nil])
([nil nil ((#("% \\usepackage{multirow}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t)) . 11375) (undo-tree-id169 . -23) (undo-tree-id170 . -23) (undo-tree-id171 . -14) (undo-tree-id172 . -14) (undo-tree-id173 . -14) (undo-tree-id174 . -14) (undo-tree-id175 . -14) (undo-tree-id176 . -14) (undo-tree-id177 . -14) (undo-tree-id178 . -14) (undo-tree-id179 . -14) (undo-tree-id180 . -14) (undo-tree-id181 . -14) (undo-tree-id182 . -14) (undo-tree-id183 . -14) (undo-tree-id184 . -14) (undo-tree-id185 . -24) 11389) nil (26363 42831 492626 355000) 0 nil])
([nil nil ((#("% \\usepackage[table,xcdraw]{xcolor}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 35 (face font-lock-comment-face fontified t) 35 36 (face font-lock-comment-face fontified t)) . 11375) (undo-tree-id152 . -35) (undo-tree-id153 . -35) (undo-tree-id154 . -14) (undo-tree-id155 . -14) (undo-tree-id156 . -14) (undo-tree-id157 . -14) (undo-tree-id158 . -14) (undo-tree-id159 . -14) (undo-tree-id160 . -14) (undo-tree-id161 . -14) (undo-tree-id162 . -14) (undo-tree-id163 . -14) (undo-tree-id164 . -14) (undo-tree-id165 . -14) (undo-tree-id166 . -14) (undo-tree-id167 . -14) (undo-tree-id168 . -36) 11389) nil (26363 42831 492612 777000) 0 nil])
([nil nil ((#("% Beamer presentation requires \\usepackage{colortbl} instead of \\usepackage[table,xcdraw]{xcolor}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 97 (face font-lock-comment-face fontified t) 97 98 (face font-lock-comment-face fontified t)) . 11375) (undo-tree-id135 . -97) (undo-tree-id136 . -97) (undo-tree-id137 . -14) (undo-tree-id138 . -14) (undo-tree-id139 . -14) (undo-tree-id140 . -14) (undo-tree-id141 . -14) (undo-tree-id142 . -14) (undo-tree-id143 . -14) (undo-tree-id144 . -14) (undo-tree-id145 . -14) (undo-tree-id146 . -14) (undo-tree-id147 . -14) (undo-tree-id148 . -14) (undo-tree-id149 . -14) (undo-tree-id150 . -14) (undo-tree-id151 . -98) 11389) nil (26363 42831 492598 519000) 0 nil])
([nil nil ((#("% \\usepackage{longtable}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 24 (face font-lock-comment-face fontified t) 24 25 (face font-lock-comment-face fontified t)) . 11375) (undo-tree-id98 . -24) (undo-tree-id99 . -24) (undo-tree-id100 . -14) (undo-tree-id101 . -14) (undo-tree-id102 . -14) (undo-tree-id103 . -14) (undo-tree-id104 . -14) (undo-tree-id105 . -14) (undo-tree-id106 . -14) (undo-tree-id107 . -14) (undo-tree-id108 . -14) (undo-tree-id109 . -14) (undo-tree-id110 . -14) (undo-tree-id111 . -14) (undo-tree-id112 . -14) (undo-tree-id113 . -14) (undo-tree-id114 . -14) (undo-tree-id115 . -14) (undo-tree-id116 . -14) (undo-tree-id117 . -14) (undo-tree-id118 . -14) (undo-tree-id119 . -14) (undo-tree-id120 . -14) (undo-tree-id121 . -14) (undo-tree-id122 . -14) (undo-tree-id123 . -14) (undo-tree-id124 . -14) (undo-tree-id125 . -14) (undo-tree-id126 . -14) (undo-tree-id127 . -14) (undo-tree-id128 . -14) (undo-tree-id129 . -14) (undo-tree-id130 . -14) (undo-tree-id131 . -14) (undo-tree-id132 . -14) (undo-tree-id133 . -14) (undo-tree-id134 . -25) 11389) nil (26363 42831 492577 917000) 0 nil])
([nil nil ((#("% Note: It may be necessary to compile the document several times to get a multi-page table to line up properly
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 111 (face font-lock-comment-face fontified t) 111 112 (face font-lock-comment-face fontified t)) . 11375) (undo-tree-id96 . -111) (undo-tree-id97 . -14) 11389) nil (26363 42831 492547 631000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 11306) (undo-tree-id95 . -9)) nil (26363 42831 492529 967000) 0 nil])
([nil nil (11306) nil (26363 42831 492528 437000) 0 nil])
([nil nil ((11310 . 11314) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -11310) (undo-tree-id93 . -1) (11305 . 11311) (#("/" 0 1 (fontified t)) . -11305) (undo-tree-id94 . -1) 11306 (11305 . 11306)) nil (26363 42831 492527 185000) 0 nil])
([nil nil ((11373 . 11376)) nil (26363 42831 492524 293000) 0 nil])
([nil nil ((#("\\caption*{Таблица 1 - Компонентный состав нефти месторождения Узень} \\\\
" 0 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 67 (fontified t) 67 69 (fontified t) 69 71 (face font-lock-warning-face fontified t) 71 72 (fontified t)) . 11305) (undo-tree-id6 . -71) (undo-tree-id7 . 1) (undo-tree-id8 . -72) (undo-tree-id9 . -72) (undo-tree-id10 . -72) (undo-tree-id11 . -72) (undo-tree-id12 . -72) (undo-tree-id13 . -72) (undo-tree-id14 . -72) (undo-tree-id15 . -72) (undo-tree-id16 . -72) (undo-tree-id17 . -72) (undo-tree-id18 . -72) (undo-tree-id19 . -72) (undo-tree-id20 . -72) (undo-tree-id21 . -72) (undo-tree-id22 . -72) (undo-tree-id23 . -72) (undo-tree-id24 . -72) (undo-tree-id25 . -72) (undo-tree-id26 . -72) (undo-tree-id27 . -72) (undo-tree-id28 . -72) (undo-tree-id29 . -72) (undo-tree-id30 . -72) (undo-tree-id31 . -72) (undo-tree-id32 . -72) (undo-tree-id33 . -72) (undo-tree-id34 . -72) (undo-tree-id35 . -72) (undo-tree-id36 . -72) (undo-tree-id37 . -72) (undo-tree-id38 . -72) (undo-tree-id39 . -72) (undo-tree-id40 . -72) (undo-tree-id41 . -72) (undo-tree-id42 . -72) (undo-tree-id43 . -72) (undo-tree-id44 . -72) (undo-tree-id45 . -72) (undo-tree-id46 . -72) (undo-tree-id47 . -72) (undo-tree-id48 . -72) (undo-tree-id49 . -72) (undo-tree-id50 . -72) (undo-tree-id51 . -72) (undo-tree-id52 . -72) (undo-tree-id53 . -72) (undo-tree-id54 . -72) (undo-tree-id55 . -72) (undo-tree-id56 . -72) (undo-tree-id57 . -72) (undo-tree-id58 . -72) (undo-tree-id59 . -72) (undo-tree-id60 . -72) (undo-tree-id61 . -72) (undo-tree-id62 . -72) (undo-tree-id63 . -72) (undo-tree-id64 . -72) (undo-tree-id65 . -72) (undo-tree-id66 . -72) (undo-tree-id67 . -72) (undo-tree-id68 . -72) (undo-tree-id69 . -72) (undo-tree-id70 . -72) (undo-tree-id71 . -72) (undo-tree-id72 . -72) (undo-tree-id73 . -72) (undo-tree-id74 . -72) (undo-tree-id75 . -72) (undo-tree-id76 . -72) (undo-tree-id77 . -72) (undo-tree-id78 . -72) (undo-tree-id79 . -72) (undo-tree-id80 . -72) (undo-tree-id81 . -72) (undo-tree-id82 . -72) (undo-tree-id83 . -72) (undo-tree-id84 . -72) (undo-tree-id85 . -72) (undo-tree-id86 . -72) (undo-tree-id87 . -72) (undo-tree-id88 . -72) (undo-tree-id89 . -72) (undo-tree-id90 . -72) (undo-tree-id91 . -72) (undo-tree-id92 . -70) 11375) nil (26363 42831 492520 324000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11945 . 11946) (#("
" 0 1 (fontified nil)) . -12017) (11945 . 12018) 11944) nil (26363 42831 492449 91000) 0 nil])
([nil nil ((#("%% \\begin{longtable}[c]{|l|l|l|l|l|ll|}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 20 (face font-lock-comment-face fontified t latex-env-pair t) 20 39 (face font-lock-comment-face fontified t) 39 40 (face font-lock-comment-face rear-nonsticky t fontified t)) . 11906) (undo-tree-id5 . -39)) nil (26363 42831 492447 448000) 0 nil])
([nil nil ((41237 . 41238) 41223) nil (26363 42831 492740 285000) 0 nil])
([nil nil ((nil rear-nonsticky nil 41287 . 41288) (nil fontified nil 41238 . 41288) (41238 . 41288)) nil (26363 42837 101132 113000) 0 nil] [nil nil ((nil rear-nonsticky nil 41238 . 41239) (#("
" 0 1 (fontified nil rear-nonsticky t face font-lock-comment-face)) . -41278) (41238 . 41279)) ((#("
%% \\begin{longtable}[c]{|l|l|l|l|l|ll|}
" 0 1 (rear-nonsticky nil fontified nil) 1 4 (face font-lock-comment-delimiter-face fontified nil) 4 10 (face font-lock-comment-face fontified nil) 10 21 (face font-lock-comment-face fontified nil latex-env-pair t) 21 40 (face font-lock-comment-face fontified nil) 40 41 (fontified nil rear-nonsticky t face font-lock-comment-face)) . 41238) (undo-tree-id202 . -1) (undo-tree-id203 . -40) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (41278 . 41279) (nil rear-nonsticky t 41238 . 41239)) (26363 42831 492432 177000) 0 nil])
([nil nil ((#(" " 0 1 (face (bold) fontified t)) . 4176) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (t 26363 42837 135872 795000)) nil (26364 53601 292007 52000) 0 nil])
nil
([nil current ((41287 . 41290) (t 26364 53601 348890 261000)) nil (26364 53643 550113 689000) 0 nil])
nil
