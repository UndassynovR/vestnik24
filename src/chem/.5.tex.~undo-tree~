(undo-tree-save-format-version . 1)
"9e2aa7f06b48c17e453b844ccd32fb49f8b87deb"
[nil nil nil nil (26349 186 868304 45000) 0 nil]
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 40) (undo-tree-id6 . -9) (t 26344 5148 690330 439000)) nil (26349 186 868302 864000) 0 nil])
([nil nil ((48 . 60) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -48) (undo-tree-id4 . -1) (44 . 49) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -44) (undo-tree-id5 . -1) (39 . 45)) nil (26349 186 868300 904000) 0 nil])
([nil nil ((108 . 109) (#("
" 0 1 (fontified t)) . -108) (#("
" 0 1 (fontified t)) . -108) 59) nil (26349 186 868297 755000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 107)) nil (26349 186 868296 534000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 108) (undo-tree-id3 . -10)) nil (26349 186 868295 620000) 0 nil])
([nil nil ((332 . 333) (#("
" 0 1 (face (bold) fontified t)) . -332) (264 . 265) (#("
" 0 1 (face (bold) fontified t)) . -264) 263) nil (26349 186 868294 82000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 344)) nil (26349 186 868292 761000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 344) (undo-tree-id2 . -10)) nil (26349 186 868291 916000) 0 nil])
([nil nil ((343 . 344) (#("
" 0 1 (fontified t)) . -343) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 197) nil (26349 186 868289 898000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 342)) nil (26349 186 868271 32000) 0 nil])
([nil nil ((402 . 403) (#("
" 0 1 (face (bold) fontified t)) . -402) 401) nil (26349 186 868366 962000) 0 nil])
([nil nil ((nil rear-nonsticky nil 244 . 245) (59 . 245)) ((#("С.Д. Фазылов, \\textsuperscript{2}Ж.Б. Сатпаева, \\textsuperscript{1}О.А. Нуркенов, \\textsuperscript{3}Р.Е. Бакирова, \\textsuperscript{4}А.К. Свидерский, \\textsuperscript{1}А.Ж. Мендибаева" 0 14 (fontified nil) 14 30 (face font-lock-keyword-face fontified nil) 30 48 (fontified nil) 48 64 (face font-lock-keyword-face fontified nil) 64 82 (fontified nil) 82 98 (face font-lock-keyword-face fontified nil) 98 116 (fontified nil) 116 132 (face font-lock-keyword-face fontified nil) 132 152 (fontified nil) 152 168 (face font-lock-keyword-face fontified nil) 168 185 (fontified nil) 185 186 (rear-nonsticky nil fontified nil)) . 59) (undo-tree-id7 . -185) (nil rear-nonsticky t 244 . 245)) (26349 187 856292 8000) 0 nil])
([nil nil ((#("\\textsuperscript{2}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 73) (undo-tree-id24 . -18)) nil (26349 201 578101 439000) 0 nil])
([nil nil ((#("\\textsuperscript{1}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 88) (undo-tree-id23 . -18)) nil (26349 201 578100 117000) 0 nil])
([nil nil ((#("\\textsuperscript{3}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 103) (undo-tree-id11 . -18) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -19)) nil (26349 201 578098 76000) 0 nil])
([nil nil ((#("\\textsuperscript{4}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 118) (undo-tree-id10 . -18)) nil (26349 268 334270 148000) 0 nil])
([nil nil ((#("\\textsuperscript{1}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 135)) ((135 . 154)) (26349 269 277940 962000) 0 nil])
([nil nil ((2799 . 2802) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 2799) (2792 . 2800) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 2792) (2788 . 2793) (#("bfseries" 0 8 (face font-lock-keyword-face fontified t)) . 2788) (undo-tree-id184 . -7)) ((2788 . 2796) (#("secti" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 2788) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -5) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (2792 . 2793) (#("ionhea" 0 6 (face font-lock-keyword-face fontified nil)) . 2792) (undo-tree-id79 . -6) (undo-tree-id80 . -6) (undo-tree-id81 . -6) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -6) (undo-tree-id93 . -6) (undo-tree-id94 . -6) (undo-tree-id95 . -6) (undo-tree-id96 . -6) (undo-tree-id97 . -6) (undo-tree-id98 . -6) (undo-tree-id99 . -6) (undo-tree-id100 . -6) (undo-tree-id101 . -6) (undo-tree-id102 . -6) (undo-tree-id103 . -6) (undo-tree-id104 . -6) (undo-tree-id105 . -6) (undo-tree-id106 . -6) (undo-tree-id107 . -6) (undo-tree-id108 . -6) (undo-tree-id109 . -6) (undo-tree-id110 . -6) (undo-tree-id111 . -6) (undo-tree-id112 . -6) (undo-tree-id113 . -6) (#("di" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil)) . 2798) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -2) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (2799 . 2800) (#("ing" 0 3 (face font-lock-keyword-face fontified t)) . 2799) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (t 26349 259 363266 329000)) (26349 269 759495 255000) 0 nil] [nil nil ((288 . 303) (895 . 908) (t 26349 201 631716 77000)) ((#("\\end{center}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 11 (face font-lock-function-name-face fontified t latex-env-pair t) 11 12 (fontified t latex-env-pair t) 12 13 (fontified t)) . 895) (#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 13 (face font-lock-function-name-face latex-env-pair t fontified t) 13 14 (latex-env-pair t fontified t) 14 15 (fontified t)) . 288) (t 26349 220 941119 682000)) (26349 248 163386 542000) 0 nil])
([nil nil ((#("\\sectionheading " 0 1 (face font-lock-keyword-face fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 11 (face font-lock-keyword-face fontified t) 11 12 (face font-lock-keyword-face fontified t) 12 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t)) . 2787) (undo-tree-id187 . -15) (undo-tree-id188 . 1) (undo-tree-id189 . -14) (undo-tree-id190 . -1) (undo-tree-id191 . -5) (undo-tree-id192 . -5) (undo-tree-id193 . -5) (undo-tree-id194 . -5) (undo-tree-id195 . -5) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -14) (undo-tree-id212 . -16) (t 26349 259 363266 329000)) nil (26349 274 820509 775000) 0 nil])
([nil nil ((2926 . 2941) (3537 . 3550) (t 26349 220 941119 682000)) ((#("\\end{center}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 11 (face font-lock-function-name-face fontified t latex-env-pair t) 11 12 (fontified t latex-env-pair t) 12 13 (fontified t)) . 3537) (undo-tree-id28 . 13) (#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 2926)) (26349 248 163070 109000) 0 nil] [nil nil ((2814 . 2829) (3537 . 3550) 2814 (t 26349 220 941119 682000)) ((#("\\end{center}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 11 (face font-lock-function-name-face fontified t latex-env-pair t) 11 12 (fontified t latex-env-pair t) 12 13 (fontified t)) . 3537) (undo-tree-id25 . 13) (#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 13 (face font-lock-function-name-face latex-env-pair t fontified t) 13 14 (latex-env-pair t fontified t) 14 15 (fontified t)) . 2814) (undo-tree-id26 . -15) (undo-tree-id27 . -15)) (26349 236 494542 921000) 0 nil])
([nil nil ((2798 . 2801) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -2798) (undo-tree-id185 . -1) (2791 . 2799) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -2791) (undo-tree-id186 . -1) (2786 . 2792)) nil (26349 274 820487 753000) 0 nil])
nil
nil
([nil nil ((292 . 303) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -292) (undo-tree-id241 . -1) (288 . 293) (287 . 288) (t 26349 274 852787 926000) 287) nil (26349 651 308948 793000) 0 nil])
([nil nil ((nil rear-nonsticky nil 521 . 522) (#("
" 0 1 (fontified nil)) . -537) (521 . 538) 468) nil (26349 651 308945 950000) 0 nil])
([nil nil ((523 . 526) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 523) (undo-tree-id213 . -4) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -5) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -5) (undo-tree-id240 . -5)) nil (26349 651 308941 317000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 305) (t 26349 651 338004 623000)) nil (26349 717 513052 457000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 305)) nil (26349 717 513051 666000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 305)) nil (26349 717 513050 666000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 305) (undo-tree-id331 . -1) (undo-tree-id332 . -1)) nil (26349 717 513049 957000) 0 nil])
([nil nil ((#("e" 0 1 (fontified nil)) . 305) (undo-tree-id329 . -1) (undo-tree-id330 . -1)) nil (26349 717 513047 868000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 305) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1)) nil (26349 717 513045 855000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 305) (undo-tree-id322 . -1) (undo-tree-id323 . -1)) nil (26349 717 513042 222000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 305) (undo-tree-id320 . -1) (undo-tree-id321 . -1)) nil (26349 717 513039 628000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 305) (undo-tree-id318 . -1) (undo-tree-id319 . -1)) nil (26349 717 513037 480000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 305) (undo-tree-id316 . -1) (undo-tree-id317 . -1)) nil (26349 717 513035 24000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 304) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1)) nil (26349 717 513030 552000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 509) (undo-tree-id242 . -1) (undo-tree-id243 . -1)) nil (26349 717 512934 166000) 0 nil])
([nil nil ((509 . 510) (t 26349 717 565989 645000)) nil (26349 740 803452 755000) 0 nil])
([nil nil ((304 . 305)) nil (26349 790 279526 835000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 304) (undo-tree-id494 . 1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (t 26349 791 247080 700000)) nil (26349 877 160488 938000) 0 nil] [nil nil ((#("\\begin{authors}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 16 (fontified t)) . 288) (undo-tree-id355 . -15) (undo-tree-id356 . -16) (undo-tree-id357 . -16) (undo-tree-id358 . -16) (undo-tree-id359 . -16) (undo-tree-id361 . -16) (undo-tree-id363 . -16) (undo-tree-id365 . -16) (undo-tree-id367 . -16) (undo-tree-id369 . -16) (undo-tree-id371 . -16) (undo-tree-id372 . -16) (t 26349 740 848614 491000)) ((288 . 304)) (26349 789 758498 66000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 509) (undo-tree-id492 . -1) (undo-tree-id493 . -1)) nil (26349 877 160480 912000) 0 nil])
([nil nil ((#("\\end{authors}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 12 (face font-lock-function-name-face fontified t latex-env-pair t) 12 13 (fontified t latex-env-pair t) 13 14 (fontified t)) . 496) (undo-tree-id337 . -13) (undo-tree-id338 . -3) (undo-tree-id340 . -14) (undo-tree-id342 . -14) (undo-tree-id344 . -14) (undo-tree-id346 . -14) (undo-tree-id348 . -14) (undo-tree-id350 . -14) (undo-tree-id352 . -14) (undo-tree-id354 . -14)) ((496 . 510)) (26349 789 358931 492000) 0 nil])
([nil nil ((nil rear-nonsticky nil 524 . 525) (#("
" 0 1 (fontified nil)) . -540) (524 . 541) (t 26349 877 217797 18000)) nil (26349 944 618175 531000) 0 nil])
([nil nil ((290 . 296) (#("p" 0 1 (face font-lock-keyword-face fontified t)) . -290) (undo-tree-id333 . -1) (undo-tree-id335 . -1) 291 (288 . 291)) ((#("\\ap" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil)) . 288) (undo-tree-id374 . -2) (undo-tree-id375 . -2) (undo-tree-id376 . -2) (undo-tree-id377 . -2) (undo-tree-id378 . -2) (undo-tree-id379 . -2) (undo-tree-id380 . -2) (undo-tree-id381 . -2) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (undo-tree-id386 . -2) (undo-tree-id387 . -2) (undo-tree-id388 . -2) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (undo-tree-id394 . -2) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) (undo-tree-id405 . -2) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . -2) (undo-tree-id427 . -2) (undo-tree-id428 . -3) (undo-tree-id429 . -2) (undo-tree-id430 . -2) (undo-tree-id431 . -2) (undo-tree-id432 . -2) (290 . 291) (#("uthors" 0 6 (face font-lock-keyword-face fontified t)) . 290) (undo-tree-id433 . -5) (undo-tree-id434 . -5) (undo-tree-id435 . -5) (undo-tree-id436 . -5) (undo-tree-id437 . -5) (undo-tree-id438 . -5) (undo-tree-id439 . -5) (undo-tree-id440 . -5) (undo-tree-id441 . -5) (undo-tree-id442 . -5) (undo-tree-id443 . -5) (undo-tree-id444 . -5) (undo-tree-id445 . -5) (undo-tree-id446 . -5) (undo-tree-id447 . -5) (undo-tree-id448 . -5) (undo-tree-id449 . -5) (undo-tree-id450 . -5) (undo-tree-id451 . -5) (undo-tree-id452 . -5) (undo-tree-id453 . -5) (undo-tree-id454 . -5) (undo-tree-id455 . -5) (undo-tree-id456 . -5) (undo-tree-id457 . -5) (undo-tree-id458 . -5) (undo-tree-id459 . -5) (undo-tree-id460 . -5) (undo-tree-id461 . -5) (undo-tree-id462 . -5) (undo-tree-id463 . -5) (undo-tree-id464 . -5) (undo-tree-id465 . -5) (undo-tree-id466 . -5) (undo-tree-id467 . -5) (undo-tree-id468 . -5) (undo-tree-id469 . -5) (undo-tree-id470 . -5) (undo-tree-id471 . -5) (undo-tree-id472 . -5) (undo-tree-id473 . -5) (undo-tree-id474 . -5) (undo-tree-id475 . -5) (undo-tree-id476 . -5) (undo-tree-id477 . -5) (undo-tree-id478 . -5) (undo-tree-id479 . -5) (undo-tree-id480 . -5) (undo-tree-id481 . -5) (undo-tree-id482 . -5) (undo-tree-id483 . -5) (undo-tree-id484 . -5) (undo-tree-id485 . -5) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (undo-tree-id488 . -5) (undo-tree-id489 . -5) (undo-tree-id490 . -5) (undo-tree-id491 . -5) (t 26349 754 931519 259000)) (26349 754 878008 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 889 . 890) (#("
" 0 1 (fontified nil)) . -903) (889 . 904) 869) nil (26349 944 618174 59000) 0 nil])
nil
([nil nil ((903 . 907) (#("i" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t)) . -903) (undo-tree-id524 . -1) (900 . 904) (#("i" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t)) . -900) (undo-tree-id525 . -1) (898 . 901) (#("i" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t)) . -898) (undo-tree-id526 . -1) (896 . 899) (#("uthors" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 896) (undo-tree-id527 . -5)) nil (26349 944 618171 710000) 0 nil])
([nil nil ((533 . 544) (#("uthors" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 533) (undo-tree-id497 . -5) (undo-tree-id498 . -5) (undo-tree-id499 . -5) (undo-tree-id500 . -5) (undo-tree-id501 . -5) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -3) (undo-tree-id508 . -3) (undo-tree-id509 . -3) (undo-tree-id510 . -3) (undo-tree-id511 . -3) (undo-tree-id512 . -2) (undo-tree-id513 . -2) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -6) (undo-tree-id523 . -6)) nil (26349 944 618162 806000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 524) (undo-tree-id528 . 1) (undo-tree-id529 . -1) (t 26349 944 652410 400000)) nil (26349 1998 617836 139000) 0 nil])
([nil nil ((#("\\end{affiliations}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 17 (face font-lock-function-name-face fontified t latex-env-pair t) 17 18 (fontified t latex-env-pair t) 18 19 (fontified t)) . 894) (undo-tree-id530 . -18) (undo-tree-id531 . -19) (t 26349 1998 673596 348000)) nil (26349 2006 679053 182000) 0 nil])
([nil nil ((nil rear-nonsticky nil 932 . 933) (#("
" 0 1 (fontified nil)) . -951) (932 . 952) 895) nil (26349 2006 679036 633000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 2960) (undo-tree-id544 . -10) (t 26349 2006 790015 101000)) nil (26349 2098 991746 901000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 3094)) nil (26349 2098 991745 411000) 0 nil])
([nil nil ((3094 . 3095) (#("
" 0 1 (fontified t)) . -3094) (#("
" 0 1 (fontified t)) . -3094) 3093) nil (26349 2098 991744 452000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 3095) (undo-tree-id543 . -10)) nil (26349 2098 991743 53000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 3165)) nil (26349 2098 991741 232000) 0 nil])
([nil nil ((3084 . 3085) (#("
" 0 1 (fontified t)) . -3084) (3016 . 3017) (#("
" 0 1 (fontified t)) . -3016) 2969) nil (26349 2098 991740 128000) 0 nil])
([nil nil ((2964 . 2975) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -2964) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) 2965 (2960 . 2965) (2959 . 2960) 2959) nil (26349 2099 799540 25000) 0 nil])
([nil nil ((3189 . 3195) (#("u" 0 1 (face font-lock-function-name-face fontified t)) . -3189) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -3190) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -3191) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -3192) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -3193) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -3194) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) 3195 (3182 . 3195) (3181 . 3182) 3180) nil (26349 2125 111506 471000) 0 nil] [nil nil ((nil rear-nonsticky nil 3181 . 3182) (nil fontified nil 3181 . 3182) (3181 . 3182) 3180) ((#("}" 0 1 (rear-nonsticky nil fontified nil)) . 3181) (nil rear-nonsticky t 3181 . 3182)) (26349 2099 799472 128000) 0 nil] [nil nil ((nil rear-nonsticky nil 3181 . 3182) (nil fontified nil 3181 . 3182) (3181 . 3182) 3180) ((#("}" 0 1 (rear-nonsticky nil fontified nil)) . 3181) (nil rear-nonsticky t 3181 . 3182)) (26349 2098 991713 275000) 0 nil])
([nil nil ((3212 . 3217) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . 3212) (3209 . 3213) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . 3209) (3207 . 3210) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . 3207) (3201 . 3208) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 3201) (3196 . 3202) (t 26349 2126 39705 522000)) ((#("
" 0 1 (fontified t)) . 3196) (undo-tree-id1479 . -1) (undo-tree-id1481 . -1) (undo-tree-id1483 . -1) (undo-tree-id1485 . -1) (undo-tree-id1487 . -1) (undo-tree-id1489 . -1) (undo-tree-id1491 . -1) (#("\\begi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 3197) (undo-tree-id1494 . -5) (undo-tree-id1496 . -5) (undo-tree-id1498 . -4) (undo-tree-id1500 . -4) (undo-tree-id1502 . -4) (undo-tree-id1504 . -4) (undo-tree-id1506 . -4) (3201 . 3202) (#("in{affi" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (latex-env-pair t fontified nil) 3 6 (face font-lock-function-name-face latex-env-pair t fontified nil) 6 7 (face font-lock-function-name-face fontified nil)) . 3201) (undo-tree-id1509 . -7) (undo-tree-id1511 . -7) (undo-tree-id1513 . -6) (undo-tree-id1515 . -6) (undo-tree-id1517 . -6) (3207 . 3208) (#("ili" 0 2 (face font-lock-function-name-face latex-env-pair t fontified nil) 2 3 (face font-lock-function-name-face fontified nil)) . 3207) (undo-tree-id1519 . -2) (undo-tree-id1521 . -2) (3209 . 3210) (#("iati" 0 3 (face font-lock-function-name-face latex-env-pair t fontified nil) 3 4 (face font-lock-function-name-face fontified nil)) . 3209) (undo-tree-id1524 . -4) (undo-tree-id1526 . -4) (3212 . 3213) (#("ions}" 0 4 (face font-lock-function-name-face latex-env-pair t fontified t) 4 5 (latex-env-pair t fontified t)) . 3212)) (26349 2132 136426 481000) 0 nil])
nil
nil
([nil nil ((3602 . 3615) (#("affili" 0 3 (face font-lock-function-name-face fontified nil) 3 5 (face font-lock-function-name-face fontified nil) 5 6 (face font-lock-function-name-face fontified nil)) . 3602) (undo-tree-id1528 . -6) (3607 . 3608) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . 3607) (3605 . 3608) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . 3605) (3596 . 3606)) ((#("
" 0 1 (fontified t)) . 3596) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id868 . -1) (undo-tree-id870 . -1) (undo-tree-id872 . -1) (undo-tree-id874 . -1) (undo-tree-id876 . -1) (undo-tree-id878 . -1) (undo-tree-id880 . -1) (undo-tree-id882 . -1) (undo-tree-id884 . -1) (undo-tree-id886 . -1) (undo-tree-id888 . -1) (undo-tree-id890 . -1) (undo-tree-id892 . -1) (undo-tree-id894 . -1) (undo-tree-id896 . -1) (undo-tree-id898 . -1) (undo-tree-id900 . -1) (undo-tree-id902 . -1) (undo-tree-id904 . -1) (undo-tree-id906 . -1) (undo-tree-id908 . -1) (undo-tree-id910 . -1) (undo-tree-id912 . -1) (undo-tree-id914 . -1) (undo-tree-id916 . -1) (undo-tree-id918 . -1) (undo-tree-id920 . -1) (undo-tree-id922 . -1) (undo-tree-id924 . -1) (undo-tree-id926 . -1) (undo-tree-id928 . -1) (undo-tree-id930 . -1) (undo-tree-id932 . -1) (undo-tree-id934 . -1) (undo-tree-id936 . -1) (undo-tree-id938 . -1) (undo-tree-id940 . -1) (undo-tree-id942 . -1) (undo-tree-id944 . -1) (undo-tree-id946 . -1) (undo-tree-id948 . -1) (undo-tree-id950 . -1) (undo-tree-id952 . -1) (undo-tree-id954 . -1) (undo-tree-id956 . -1) (undo-tree-id958 . -1) (undo-tree-id960 . -1) (undo-tree-id962 . -1) (undo-tree-id964 . -1) (undo-tree-id966 . -1) (undo-tree-id968 . -1) (undo-tree-id970 . -1) (undo-tree-id972 . -1) (undo-tree-id974 . -1) (undo-tree-id976 . -1) (undo-tree-id978 . -1) (undo-tree-id980 . -1) (undo-tree-id982 . -1) (undo-tree-id984 . -1) (undo-tree-id986 . -1) (undo-tree-id988 . -1) (undo-tree-id990 . -1) (undo-tree-id992 . -1) (undo-tree-id994 . -1) (undo-tree-id996 . -1) (undo-tree-id998 . -1) (undo-tree-id1000 . -1) (undo-tree-id1002 . -1) (undo-tree-id1004 . -1) (undo-tree-id1006 . -1) (undo-tree-id1008 . -1) (undo-tree-id1010 . -1) (undo-tree-id1012 . -1) (undo-tree-id1014 . -1) (undo-tree-id1016 . -1) (undo-tree-id1018 . -1) (undo-tree-id1020 . -1) (undo-tree-id1022 . -1) (undo-tree-id1024 . -1) (undo-tree-id1026 . -1) (undo-tree-id1028 . -1) (undo-tree-id1030 . -1) (undo-tree-id1032 . -1) (undo-tree-id1034 . -1) (undo-tree-id1036 . -1) (undo-tree-id1038 . -1) (undo-tree-id1040 . -1) (undo-tree-id1042 . -1) (undo-tree-id1044 . -1) (undo-tree-id1046 . -1) (undo-tree-id1048 . -1) (undo-tree-id1050 . -1) (undo-tree-id1052 . -1) (undo-tree-id1054 . -1) (undo-tree-id1056 . -1) (undo-tree-id1058 . -1) (undo-tree-id1060 . -1) (undo-tree-id1062 . -1) (undo-tree-id1064 . -1) (undo-tree-id1066 . -1) (undo-tree-id1068 . -1) (undo-tree-id1070 . -1) (undo-tree-id1072 . -1) (undo-tree-id1074 . -1) (undo-tree-id1076 . -1) (undo-tree-id1078 . -1) (undo-tree-id1080 . -1) (undo-tree-id1082 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (#("\\end{affi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (latex-env-pair t fontified nil) 5 8 (face font-lock-function-name-face fontified nil) 8 9 (face font-lock-function-name-face fontified nil)) . 3597) (undo-tree-id1090 . -5) (undo-tree-id1091 . -8) (undo-tree-id1093 . -6) (undo-tree-id1095 . -6) (undo-tree-id1097 . -6) (undo-tree-id1099 . -6) (undo-tree-id1101 . -6) (undo-tree-id1103 . -6) (undo-tree-id1105 . -6) (undo-tree-id1107 . -6) (undo-tree-id1109 . -6) (undo-tree-id1111 . -6) (undo-tree-id1113 . -6) (undo-tree-id1115 . -6) (undo-tree-id1117 . -7) (undo-tree-id1119 . -7) (undo-tree-id1121 . -7) (undo-tree-id1123 . -7) (undo-tree-id1125 . -7) (undo-tree-id1127 . -8) (undo-tree-id1129 . -8) (undo-tree-id1131 . -8) (undo-tree-id1133 . -8) (undo-tree-id1135 . -8) (undo-tree-id1137 . -8) (undo-tree-id1139 . -8) (undo-tree-id1141 . -8) (undo-tree-id1143 . -8) (undo-tree-id1145 . -8) (undo-tree-id1147 . -8) (undo-tree-id1149 . -8) (undo-tree-id1151 . -8) (undo-tree-id1153 . -8) (undo-tree-id1155 . -8) (undo-tree-id1157 . -8) (undo-tree-id1159 . -8) (undo-tree-id1161 . -8) (undo-tree-id1163 . -8) (undo-tree-id1165 . -8) (undo-tree-id1167 . -8) (undo-tree-id1169 . -9) (undo-tree-id1171 . -9) (undo-tree-id1173 . -9) (undo-tree-id1175 . -8) (undo-tree-id1177 . -8) (undo-tree-id1179 . -8) (undo-tree-id1181 . -8) (undo-tree-id1183 . -8) (undo-tree-id1185 . -8) (undo-tree-id1187 . -8) (undo-tree-id1189 . -8) (undo-tree-id1191 . -8) (undo-tree-id1193 . -8) (undo-tree-id1195 . -8) (undo-tree-id1197 . -8) (undo-tree-id1199 . -8) (undo-tree-id1201 . -8) (undo-tree-id1203 . -8) (undo-tree-id1205 . -8) (undo-tree-id1207 . -8) (undo-tree-id1209 . -8) (undo-tree-id1211 . -8) (undo-tree-id1213 . -8) (undo-tree-id1215 . -5) (undo-tree-id1217 . -5) (undo-tree-id1219 . -5) (undo-tree-id1221 . -5) (undo-tree-id1223 . -5) (undo-tree-id1225 . -5) (undo-tree-id1227 . -5) (undo-tree-id1229 . -5) (undo-tree-id1231 . -5) (undo-tree-id1233 . -5) (undo-tree-id1235 . -5) (undo-tree-id1237 . -5) (undo-tree-id1239 . -5) (undo-tree-id1241 . -5) (undo-tree-id1243 . -5) (undo-tree-id1245 . -5) (undo-tree-id1247 . -5) (undo-tree-id1249 . -5) (undo-tree-id1251 . -5) (undo-tree-id1253 . -5) (undo-tree-id1255 . -5) (undo-tree-id1257 . -5) (undo-tree-id1259 . -5) (undo-tree-id1261 . -5) (undo-tree-id1263 . -5) (undo-tree-id1265 . -5) (undo-tree-id1267 . -5) (undo-tree-id1269 . -5) (undo-tree-id1271 . -5) (undo-tree-id1273 . -5) (undo-tree-id1275 . -5) (undo-tree-id1277 . -5) (undo-tree-id1279 . -5) (undo-tree-id1281 . -5) (undo-tree-id1283 . -5) (undo-tree-id1285 . -5) (undo-tree-id1287 . -5) (undo-tree-id1289 . -5) (undo-tree-id1291 . -5) (undo-tree-id1293 . -5) (undo-tree-id1295 . -5) (undo-tree-id1297 . -5) (undo-tree-id1299 . -5) (undo-tree-id1301 . -5) (undo-tree-id1303 . -5) (undo-tree-id1305 . -5) (undo-tree-id1307 . -5) (undo-tree-id1309 . -8) (undo-tree-id1310 . -9) (undo-tree-id1312 . -5) (undo-tree-id1313 . -5) (3605 . 3606) (#("ili" 0 2 (face font-lock-function-name-face fontified nil) 2 3 (face font-lock-function-name-face fontified nil)) . 3605) (undo-tree-id1314 . -2) (undo-tree-id1316 . -1) (undo-tree-id1318 . -1) (undo-tree-id1320 . -2) (undo-tree-id1322 . -2) (undo-tree-id1324 . -2) (undo-tree-id1326 . -2) (undo-tree-id1328 . -2) (undo-tree-id1330 . -2) (undo-tree-id1332 . -3) (undo-tree-id1334 . -3) (undo-tree-id1336 . -3) (undo-tree-id1338 . -2) (undo-tree-id1340 . -2) (undo-tree-id1342 . -2) (undo-tree-id1344 . -2) (undo-tree-id1346 . -2) (undo-tree-id1348 . -2) (undo-tree-id1350 . -2) (undo-tree-id1352 . -2) (undo-tree-id1354 . -2) (undo-tree-id1355 . -2) (undo-tree-id1356 . -3) (3607 . 3608) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . 3607) (undo-tree-id1357 . -1) (undo-tree-id1359 . -1) (undo-tree-id1361 . -1) (undo-tree-id1363 . -1) (undo-tree-id1365 . -1) (undo-tree-id1367 . -1) (undo-tree-id1369 . -1) (undo-tree-id1371 . -1) (undo-tree-id1373 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (3602 . 3608) (#("affiliations" 0 12 (face font-lock-function-name-face latex-env-pair t fontified nil)) . 3602) (undo-tree-id1377 . -12) (undo-tree-id1379 . -12) (undo-tree-id1381 . -12) (undo-tree-id1383 . -12) (undo-tree-id1385 . -12) (undo-tree-id1387 . -12) (undo-tree-id1389 . -12) (undo-tree-id1391 . -12) (undo-tree-id1393 . -12) (undo-tree-id1395 . -12) (undo-tree-id1397 . -12) (undo-tree-id1399 . -12) (undo-tree-id1401 . -12) (undo-tree-id1403 . -12) (undo-tree-id1405 . -12) (undo-tree-id1407 . -12) (undo-tree-id1409 . -12) (undo-tree-id1411 . -12) (undo-tree-id1413 . -12) (undo-tree-id1415 . -12) (undo-tree-id1417 . -12) (undo-tree-id1419 . -12) (undo-tree-id1421 . -12) (undo-tree-id1423 . -12) (undo-tree-id1425 . -12) (undo-tree-id1427 . -12) (undo-tree-id1429 . -12) (undo-tree-id1431 . -12) (undo-tree-id1433 . -12) (undo-tree-id1435 . -12) (undo-tree-id1437 . -12) (undo-tree-id1439 . -12) (undo-tree-id1441 . -12) (undo-tree-id1443 . -12) (undo-tree-id1445 . -12) (undo-tree-id1447 . -12) (undo-tree-id1449 . -12) (undo-tree-id1451 . -12) (undo-tree-id1453 . -12) (undo-tree-id1455 . -12) (undo-tree-id1457 . -12) (undo-tree-id1459 . -12) (undo-tree-id1461 . -12) (undo-tree-id1463 . -12) (undo-tree-id1465 . -12) (undo-tree-id1467 . -12) (undo-tree-id1469 . -12) (undo-tree-id1471 . -12) (undo-tree-id1473 . -12) (undo-tree-id1474 . -12) (undo-tree-id1476 . -12) (undo-tree-id1477 . -12) (#("}" 0 1 (latex-env-pair t fontified t)) . 3614) (t 26349 2117 516632 592000)) (26349 2132 632719 140000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 5389) (undo-tree-id1562 . -9) (t 26349 2133 106156 288000)) nil (26349 2193 372867 291000) 0 nil])
([nil nil ((5400 . 5403) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -5400) (undo-tree-id1560 . -1) (5393 . 5401) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -5393) (undo-tree-id1561 . -1) (5388 . 5394)) nil (26349 2193 372865 691000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 5549) (undo-tree-id1559 . -10)) nil (26349 2193 372863 417000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 5684)) nil (26349 2193 372862 105000) 0 nil])
([nil nil ((5553 . 5564) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -5553) (undo-tree-id1558 . -1) (5549 . 5554) (5548 . 5549) 5548) nil (26349 2193 372861 362000) 0 nil])
([nil nil ((5701 . 5714) (5700 . 5701) 5699) nil (26349 2193 372859 683000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 5716) (undo-tree-id1557 . -10)) nil (26349 2193 372858 821000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 5788)) nil (26349 2193 372857 544000) 0 nil])
([nil nil ((#("\\textsuperscript{4}А.К. Sviderskyi, \\textsuperscript{1}A.Zh.
Mendibayeva
" 0 16 (face font-lock-keyword-face fontified t) 16 36 (fontified t) 36 52 (face font-lock-keyword-face fontified t) 52 61 (fontified t) 61 72 (fontified t) 72 73 (fontified t)) . 5716) (undo-tree-id1552 . -72) (undo-tree-id1553 . -71) (undo-tree-id1554 . -10) (undo-tree-id1555 . -71) (undo-tree-id1556 . -71) 5787) nil (26349 2193 372856 703000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5700 . 5701) (#("
" 0 1 (fontified nil)) . -5773) (5700 . 5774) 5691) nil (26349 2193 372851 907000) 0 nil])
([nil nil ((5700 . 5701) (#("
" 0 1 (rear-nonsticky t fontified t)) . -5700) (undo-tree-id1551 . -1) 5691) nil (26349 2193 372850 985000) 0 nil])
([nil nil ((5761 . 5762) (#("
" 0 1 (fontified t)) . -5761) (5690 . 5691) (#("
" 0 1 (fontified t)) . -5690) (undo-tree-id1550 . -1) 5632) nil (26349 2193 372849 439000) 0 nil])
([nil nil ((5622 . 5623) (#("
" 0 1 (fontified t)) . -5622) (undo-tree-id1549 . -1) 5621) nil (26349 2193 372847 635000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5789) (undo-tree-id1548 . 1)) nil (26349 2193 372846 105000) 0 nil])
([nil nil ((5804 . 5809) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -5804) (undo-tree-id1544 . -1) (5801 . 5805) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -5801) (undo-tree-id1545 . -1) 5802 (5799 . 5802) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -5799) (undo-tree-id1546 . -1) (5793 . 5800) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -5793) (undo-tree-id1547 . -1) (5789 . 5794) (5788 . 5789)) nil (26349 2193 372844 41000) 0 nil])
([nil nil ((6116 . 6117) 6070) nil (26349 2193 372838 991000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6117) (undo-tree-id1542 . 1) (undo-tree-id1543 . -1)) nil (26349 2193 372837 497000) 0 nil])
([nil current ((6156 . 6161) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -6156) (undo-tree-id1529 . -1) (6153 . 6157) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -6153) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (6151 . 6154) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -6151) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (6143 . 6152) (6142 . 6143) 6118) nil (26349 2193 372831 457000) 0 nil])
nil
