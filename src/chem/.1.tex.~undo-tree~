(undo-tree-save-format-version . 1)
"578f400a0786200533bedd75399b4f44443b5854"
[nil nil nil nil (26344 3366 307139 659000) 0 nil]
([nil nil ((39213 . 39214) (t 26341 24242 630996 824000)) nil (26344 3366 307134 755000) 0 nil])
([nil nil ((13 . 31) (#("b" 0 1 (face font-lock-keyword-face fontified t)) . -13) (undo-tree-id65 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified t)) . -14) (undo-tree-id66 . -1) 15 (1 . 15) (1 . 2) (t 26344 3366 405997 318000)) nil (26348 952 629819 911000) 0 nil])
([nil nil ((nil rear-nonsticky nil 60 . 61) (#("
" 0 1 (fontified nil)) . -89) (60 . 90) 59) nil (26348 952 629814 790000) 0 nil])
([nil nil ((90 . 92) (89 . 90) (#("и" 0 1 (face font-lock-function-name-face fontified t)) . -89) (undo-tree-id58 . -1) 90 (74 . 90) (#("м" 0 1 (face font-lock-function-name-face fontified t)) . -74) (undo-tree-id59 . -1) 75 (72 . 75) (#("м" 0 1 (face font-lock-function-name-face fontified t)) . -72) (undo-tree-id60 . -1) 73 (67 . 73) (#("й" 0 1 (face font-lock-function-name-face fontified t)) . -67) (undo-tree-id61 . -1) 68 (67 . 68) (61 . 67) (#("у" 0 1 (face font-lock-function-name-face fontified t)) . -61) (undo-tree-id62 . -1) 62 (59 . 62) (38 . 59) (#("Химическая технология" 0 21 (face font-lock-function-name-face fontified t)) . 38) (undo-tree-id63 . -20) (undo-tree-id64 . -5) 43) nil (26348 952 629812 198000) 0 nil])
([nil nil ((33 . 37) (#("part" 0 4 (face font-lock-keyword-face fontified t)) . 33) (undo-tree-id40 . -3) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -4) (undo-tree-id57 . -4)) nil (26348 952 629802 760000) 0 nil])
([nil nil ((95 . 102) (#("part" 0 4 (face font-lock-keyword-face fontified t)) . 95) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -3) (undo-tree-id15 . -3) (undo-tree-id16 . -3) (undo-tree-id17 . -3) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -4) (undo-tree-id39 . -4)) nil (26348 968 494500 616000) 0 nil])
([nil nil ((#("\\textsuperscript{1,4}" 0 16 (face (font-lock-keyword-face bold) fontified t) 16 21 (face (bold) fontified t)) . 476) (undo-tree-id67 . -20) (undo-tree-id68 . -20) (undo-tree-id69 . -20) (undo-tree-id70 . -21) (t 26348 970 24769 262000)) nil (26348 2680 939106 423000) 0 nil] [nil nil ((125 . 126) (t 26348 952 695277 564000) 101) ((#("
" 0 1 (fontified t)) . 125) (t 26348 955 721855 461000)) (26348 955 687366 308000) 0 nil])
([nil nil ((nil rear-nonsticky nil 479 . 480) (nil fontified nil 459 . 480) (459 . 480)) nil (26348 2680 939089 652000) 0 nil])
nil
([nil nil ((#("}" 0 1 (fontified t)) . 151) (t 26348 2680 990880 305000)) nil (26348 2709 78475 157000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 126) (undo-tree-id91 . -1) (undo-tree-id92 . -1)) nil (26348 2709 78474 20000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 126) (undo-tree-id89 . -1) (undo-tree-id90 . -1)) nil (26348 2709 78471 596000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 126) (undo-tree-id87 . -1) (undo-tree-id88 . -1)) nil (26348 2709 78469 229000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 126) (undo-tree-id85 . -1) (undo-tree-id86 . -1)) nil (26348 2709 78466 868000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 126) (undo-tree-id83 . -1) (undo-tree-id84 . -1)) nil (26348 2709 78464 502000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 126) (undo-tree-id81 . -1) (undo-tree-id82 . -1)) nil (26348 2709 78462 160000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 126) (undo-tree-id79 . -1) (undo-tree-id80 . -1)) nil (26348 2709 78459 191000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 126) (undo-tree-id77 . -1) (undo-tree-id78 . -1)) nil (26348 2709 78456 832000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 126) (undo-tree-id75 . -1) (undo-tree-id76 . -1)) nil (26348 2709 78454 358000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 126) (undo-tree-id73 . -1) (undo-tree-id74 . -1)) nil (26348 2709 78451 732000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 126) (undo-tree-id71 . -1) (undo-tree-id72 . -1)) nil (26348 2709 78448 349000) 0 nil])
([nil nil ((125 . 126) 94) nil (26348 2709 78434 712000) 0 nil])
([nil nil ((332 . 337) (t 26348 2709 136712 648000)) nil (26348 4874 621344 802000) 0 nil])
([nil nil ((593 . 601)) nil (26348 4874 621342 906000) 0 nil])
([nil nil ((976 . 977)) nil (26348 5360 499197 836000) 0 nil])
([nil nil ((3838 . 3842) (#("large" 0 5 (face font-lock-keyword-face fontified t)) . 3838) (undo-tree-id156 . -4) (t 26348 5361 123649 100000)) nil (26348 5794 484974 861000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 686) (undo-tree-id152 . -1) (t 26348 5263 226440 542000)) ((686 . 687)) (26348 5360 83166 24000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 931) (undo-tree-id127 . -1) (t 26348 4874 684171 164000)) ((931 . 932)) (26348 5252 902144 356000) 0 nil])
([nil nil ((3907 . 3912)) nil (26348 5794 484973 117000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 769) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1)) ((769 . 770)) (26348 5359 779752 856000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 855) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1)) ((855 . 856)) (26348 5252 390747 422000) 0 nil])
([nil nil ((4037 . 4039) (#(" " 0 1 (fontified t)) . -4037) (undo-tree-id155 . -1) 4038 (4032 . 4038) (4031 . 4032)) nil (26348 5794 484971 691000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 853) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1)) ((853 . 854)) (26348 5359 587296 717000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 770) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1)) ((770 . 771)) (26348 5252 54724 195000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4038) (undo-tree-id153 . -1) (undo-tree-id154 . -1)) nil (26348 5794 484967 994000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 928)) ((928 . 929) (t 26348 5349 640643 261000)) (26348 5349 581538 54000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 686)) ((686 . 687)) (26348 5251 686533 50000) 0 nil])
([nil nil ((4570 . 4571)) nil (26348 5794 484954 328000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 592) (undo-tree-id93 . -1) (undo-tree-id95 . -1) (undo-tree-id97 . -1) (undo-tree-id99 . -1) (undo-tree-id101 . -1) (undo-tree-id103 . -1)) ((592 . 593)) (26348 5251 446677 262000) 0 nil])
([nil nil ((3820 . 3821) (t 26348 5794 544638 58000) 3820) nil (26348 5816 351674 629000) 0 nil])
([nil nil ((591 . 592) (t 26348 5228 837420 760000) 481) ((#("
" 0 1 (fontified t)) . 591) (undo-tree-id128 . -1) (t 26348 5237 303846 118000)) (26348 5237 269557 706000) 0 nil])
([nil nil ((3821 . 3830)) nil (26348 5816 351672 869000) 0 nil])
nil
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . -3827) (undo-tree-id157 . -1) (#("a" 0 1 (face font-lock-keyword-face fontified t)) . -3828) (undo-tree-id158 . -1) (#("k" 0 1 (face font-lock-keyword-face fontified t)) . -3829) (undo-tree-id159 . -1) 3830) nil (26348 5816 351670 820000) 0 nil])
([nil nil ((3827 . 3831)) nil (26348 6080 48839 463000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (t 26348 5816 410689 829000)) nil (26348 6086 37903 248000) 0 nil] [nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 3919) (t 26348 5816 410689 829000)) ((3919 . 3920)) (26348 6079 888262 832000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id205 . -1) (undo-tree-id206 . -1)) nil (26348 6086 37900 843000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6079 696195 543000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id203 . -1) (undo-tree-id204 . -1)) nil (26348 6086 37898 609000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6079 391644 761000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id201 . -1) (undo-tree-id202 . -1)) nil (26348 6086 37896 205000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6079 7955 684000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 3849) (undo-tree-id199 . -1) (undo-tree-id200 . -1)) nil (26348 6086 37894 285000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6078 656260 155000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id197 . -1) (undo-tree-id198 . -1)) nil (26348 6086 37892 274000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6078 416297 423000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id195 . -1) (undo-tree-id196 . -1)) nil (26348 6086 37890 328000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6078 111956 611000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id193 . -1) (undo-tree-id194 . -1)) nil (26348 6086 37888 252000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6077 840274 11000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id191 . -1) (undo-tree-id192 . -1)) nil (26348 6086 37872 244000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6077 551666 836000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id189 . -1) (undo-tree-id190 . -1)) nil (26348 6086 37870 163000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-keyword-face fontified nil)) . 3919)) ((3919 . 3920)) (26348 6077 168283 831000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id187 . -1) (undo-tree-id188 . -1)) nil (26348 6086 37867 623000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 3919)) ((3919 . 3920)) (26348 6076 768002 563000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id185 . -1) (undo-tree-id186 . -1)) nil (26348 6086 37864 566000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6076 268210 328000) 0 nil])
([nil nil ((3860 . 3863) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3860) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (3853 . 3861) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3853) (undo-tree-id184 . -1) (3850 . 3854)) nil (26348 6086 37858 973000) 0 nil])
([nil nil ((3930 . 3933) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3930) (undo-tree-id160 . -1) (3923 . 3931) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3923) (undo-tree-id161 . -1) (3920 . 3924)) ((#("ecti" 0 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 3920) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -4) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (3923 . 3924) (#("ionheadi" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (face font-lock-keyword-face fontified nil)) . 3923) (undo-tree-id168 . -3) (undo-tree-id169 . -7) (undo-tree-id170 . -3) (undo-tree-id171 . -8) (undo-tree-id172 . -7) (undo-tree-id173 . -7) (3930 . 3931) (#("ing" 0 3 (face font-lock-keyword-face fontified t)) . 3930) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2)) (26348 6076 268072 159000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 3847) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (t 26348 6086 86433 333000)) nil (26348 6184 913594 334000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3862 . 3863) (nil fontified nil 3862 . 3863) (3862 . 3863) 3861) nil (26348 6185 900996 583000) 0 nil] [nil nil ((nil rear-nonsticky nil 3863 . 3864) (nil fontified nil 3863 . 3864) (3863 . 3864) 3862) ((#("{" 0 1 (rear-nonsticky nil fontified nil)) . 3863) (nil rear-nonsticky t 3863 . 3864)) (26348 6184 913506 971000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3863) (undo-tree-id216 . 1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (t 26348 6185 946953 315000)) nil (26348 6186 901333 374000) 0 nil])
nil
([nil nil ((#("\\pagebreak
" 0 10 (face font-lock-warning-face fontified t) 10 11 (fontified t)) . 3821) (undo-tree-id223 . -10) (undo-tree-id224 . -9) (undo-tree-id225 . -9) (undo-tree-id226 . -9) (undo-tree-id227 . -9) (undo-tree-id228 . -9) (undo-tree-id229 . -9) (undo-tree-id230 . -9) (undo-tree-id231 . -9) (undo-tree-id232 . -9) (undo-tree-id233 . -9) (undo-tree-id234 . -9) (undo-tree-id235 . -9) (undo-tree-id236 . -9) (undo-tree-id237 . -9) (undo-tree-id238 . -9) (undo-tree-id239 . -9) (undo-tree-id240 . -9) (undo-tree-id241 . -9) (undo-tree-id242 . -9) (undo-tree-id243 . -9) (undo-tree-id244 . -9) (undo-tree-id245 . -9) (undo-tree-id246 . -9) (undo-tree-id247 . -9) (undo-tree-id248 . -9) (undo-tree-id249 . -9) (undo-tree-id250 . -9) (undo-tree-id251 . -9) (undo-tree-id252 . -9) (undo-tree-id253 . -9) (undo-tree-id254 . -9) (undo-tree-id255 . -9) (undo-tree-id256 . -9) (undo-tree-id257 . -9) (undo-tree-id258 . -11) 3830 (t 26348 6186 940258 657000)) nil (26348 6197 532624 713000) 0 nil])
([nil nil ((#("\\large\\bfseries " 0 6 (face font-lock-keyword-face fontified t) 6 15 (face font-lock-keyword-face fontified t) 15 16 (face (bold) fontified t)) . 7358) (undo-tree-id261 . -15) (t 26348 6197 573292 340000)) nil (26348 6261 448677 418000) 0 nil])
([nil nil ((7369 . 7372) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -7369) (undo-tree-id259 . -1) (7362 . 7370) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -7362) (undo-tree-id260 . -1) (7357 . 7363)) nil (26348 6261 448674 801000) 0 nil])
([nil nil ((7427 . 7432)) nil (26348 6261 448663 654000) 0 nil])
([nil nil ((7553 . 7561)) nil (26348 6261 448662 959000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7560)) nil (26348 6261 448661 89000) 0 nil])
([nil nil ((8072 . 8073)) nil (26348 6261 448657 272000) 0 nil])
([nil nil ((129 . 134) (#("m" 0 1 (face font-lock-keyword-face fontified t)) . -129) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -130) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#("a" 0 1 (face font-lock-keyword-face fontified t)) . -131) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) 132 (127 . 132) (t 26348 6261 514823 374000)) nil (26348 6347 208575 135000) 0 nil])
([nil nil ((148 . 149)) nil (26348 6347 208503 641000) 0 nil])
([nil nil ((#("\\let\\cleardoublepage\\clearpage
" 0 4 (face font-lock-keyword-face fontified t) 4 20 (face font-lock-warning-face fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t)) . 1) (undo-tree-id348 . -30) (undo-tree-id349 . -21) (undo-tree-id350 . -21) (undo-tree-id351 . -21) (undo-tree-id352 . -21) (undo-tree-id353 . -21) (undo-tree-id354 . -21) (undo-tree-id355 . -21) (undo-tree-id356 . -21) (undo-tree-id357 . -21) (undo-tree-id358 . -21) (undo-tree-id359 . -21) (undo-tree-id360 . -21) (undo-tree-id361 . -21) (undo-tree-id362 . -21) (undo-tree-id363 . -21) (undo-tree-id364 . -21) (undo-tree-id365 . -21) (undo-tree-id366 . -21) (undo-tree-id367 . -21) (undo-tree-id368 . -21) (undo-tree-id369 . -21) (undo-tree-id370 . -21) (undo-tree-id371 . -21) (undo-tree-id372 . -21) (undo-tree-id373 . -21) (undo-tree-id374 . -21) (undo-tree-id375 . -21) (undo-tree-id376 . -21) (undo-tree-id377 . -21) (undo-tree-id378 . -21) (undo-tree-id379 . -21) (undo-tree-id380 . -21) (undo-tree-id381 . -21) (undo-tree-id382 . -21) (undo-tree-id383 . -21) (undo-tree-id384 . -21) (undo-tree-id385 . -21) (undo-tree-id386 . -21) (undo-tree-id387 . -21) (undo-tree-id388 . -21) (undo-tree-id389 . -21) (undo-tree-id390 . -21) (undo-tree-id391 . -21) (undo-tree-id392 . -21) (undo-tree-id393 . -21) (undo-tree-id394 . -21) (undo-tree-id395 . -21) (undo-tree-id396 . -21) (undo-tree-id397 . -21) (undo-tree-id398 . -21) (undo-tree-id399 . -21) (undo-tree-id400 . -21) (undo-tree-id401 . -21) (undo-tree-id402 . -21) (undo-tree-id403 . -21) (undo-tree-id404 . -21) (undo-tree-id405 . -21) (undo-tree-id406 . -21) (undo-tree-id407 . -21) (undo-tree-id408 . -21) (undo-tree-id409 . -21) (undo-tree-id410 . -21) (undo-tree-id411 . -21) (undo-tree-id412 . -21) (undo-tree-id413 . -21) (undo-tree-id414 . -21) (undo-tree-id415 . -21) (undo-tree-id416 . -21) (undo-tree-id417 . -21) (undo-tree-id418 . -21) (undo-tree-id419 . -21) (undo-tree-id420 . -21) (undo-tree-id421 . -21) (undo-tree-id422 . -21) (undo-tree-id423 . -21) (undo-tree-id424 . -21) (undo-tree-id425 . -21) (undo-tree-id426 . -21) (undo-tree-id427 . -21) (undo-tree-id428 . -21) (undo-tree-id429 . -21) (undo-tree-id430 . -21) (undo-tree-id431 . -31) 22 (t 26348 6347 262405 529000)) nil (26348 6647 61652 124000) 0 nil])
([nil nil ((nil rear-nonsticky nil 62 . 63) (#("
" 0 1 (fontified nil)) . -93) (62 . 94) 22) nil (26348 8273 28606 502000) 0 nil])
([nil nil ((6281 . 6282)) nil (26348 8307 929477 520000) 0 nil] [nil nil ((9813 . 9814)) ((#(" " 0 1 (fontified t)) . 9813)) (26348 8272 516266 651000) 0 nil] [nil nil ((9791 . 9792) (t 26348 6647 120609 95000) 9740) ((#("
" 0 1 (fontified t)) . 9791) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (t 26348 7207 201482 866000)) (26348 7207 144683 738000) 0 nil])
([nil nil ((6283 . 6284)) nil (26348 8307 929473 639000) 0 nil])
([nil nil ((9815 . 9816)) ((#(" " 0 1 (fontified t)) . 9815) (t 26348 7222 941038 842000)) (26348 7222 908751 333000) 0 nil])
nil
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 23729) (undo-tree-id478 . -15) (undo-tree-id479 . -7) 23736 (t 26348 8307 970050 570000)) nil (26348 63605 819631 826000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 23885)) nil (26348 63605 819629 176000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 20 (fontified t) 20 21 (fontified t)) . 23885) (undo-tree-id477 . -20)) nil (26348 63605 819628 308000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=\\textwidth]{assets/2}
	\\caption*{Рис.1 - ИК спектр азида никотиновой кислоты (2) (КBr)}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 54 (fontified t) 54 64 (face font-lock-keyword-face fontified t) 64 66 (fontified t) 66 74 (face font-lock-builtin-face fontified t) 74 77 (fontified t) 77 86 (face font-lock-keyword-face fontified t) 86 142 (fontified t) 142 146 (face font-lock-keyword-face fontified t) 146 147 (fontified t latex-env-pair t) 147 153 (face font-lock-function-name-face fontified t latex-env-pair t) 153 154 (fontified t latex-env-pair t) 154 155 (fontified t)) . 23730) (undo-tree-id474 . -154) (undo-tree-id475 . -142) (undo-tree-id476 . -142)) nil (26348 63605 819626 587000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22277 . 22278) (#("
" 0 1 (fontified nil)) . -22432) (22277 . 22433) 22265) nil (26348 63605 819623 114000) 0 nil])
([nil nil ((22277 . 22278) 22265) nil (26348 63605 819621 490000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 22278) (undo-tree-id452 . 1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1)) nil (26348 63654 30271 581000) 0 nil])
([nil nil ((#("В спектре ЯМР \\textsuperscript{13}С соединения {\\bfseries 5} сигналы
углеродных атомов пиридинового фрагмента проявились при 122.00 (С-4),
124.80 (С-3), 137.85 (С-6), 139.00 (С-2) и 146.20 (С-5) м.д.

В спектре ЯМР \\textsuperscript{1}Н ацетиленового соединения {\\bfseries 3}
метильные протоны Н-11,11,11 проявились трехпротонным мультиплетом при
1.17-1.21 м.д. Метильные протоны Н-9,9,9,14,14,14,15,15,15
регистрировались трехпротонным синглетом при 1.38 м.д. Метиленовые
протоны Н-10,10 проявились двухпротонным мультиплетом при 2.51-2.54 м.д.
Ацетиленовый протон Н-19 регистрировался однопротонным синглетом при
2.58 м.д. Метиленовые протоны Н-17,17 проявились двухпротонным
мультиплетом при 4.91-4.92 м.д. Ароматические протоны Н-3 и Н-5
регистрировались однопротонными синглетами при 7.29 и 7.56 м.д.
соответственно. Гидроксильный протон Н-7 резонировал однопротонным
синглетом при 11.09 м.д.

" 0 14 (fontified t) 14 30 (face font-lock-keyword-face fontified t) 30 48 (fontified t) 48 57 (face font-lock-keyword-face fontified t) 57 59 (face (bold) fontified t) 59 215 (fontified t) 215 231 (face font-lock-keyword-face fontified t) 231 262 (fontified t) 262 271 (face font-lock-keyword-face fontified t) 271 273 (face (bold) fontified t) 273 642 (fontified t) 642 677 (fontified t) 677 898 (fontified t)) . 26191) (undo-tree-id569 . -897) (undo-tree-id570 . -897) (undo-tree-id571 . -897) (undo-tree-id572 . -897) 27088 (t 26348 63723 497403 834000)) nil (26348 63745 810387 114000) 0 nil] [nil nil ((#("
Строение выделенных продуктов {\\bfseries 3} и {\\bfseries 5} было доказано
методами ЯМР\\textsuperscript{1}Н-, \\textsuperscript{13}С- спектроскопии.
Так, в спектре ЯМР \\textsuperscript{1}Н соединения {\\bfseries 5}
пиридиновые протоны Н-3, Н-4 и Н-2 проявились однопротонными
мультиплетами при 7.44-7.46, 7.70-7.72 и 8.44-8.46 м.д. Пиридиновый
протон Н-6 регистрировался однопротонным синглетом при 8.71 м.д. Аминные
протоны Н-7,7 проявились двухпротонным синглетом при 6.30 м.д.
" 0 32 (fontified t) 32 41 (face font-lock-keyword-face fontified t) 41 43 (face (bold) fontified t) 43 48 (fontified t) 48 57 (face font-lock-keyword-face fontified t) 57 59 (face (bold) fontified t) 59 87 (fontified t) 87 103 (face font-lock-keyword-face fontified t) 103 110 (fontified t) 110 126 (face font-lock-keyword-face fontified t) 126 167 (fontified t) 167 183 (face font-lock-keyword-face fontified t) 183 200 (fontified t) 200 209 (face font-lock-keyword-face fontified t) 209 211 (face (bold) fontified t) 211 347 (fontified t) 347 415 (fontified t) 415 478 (fontified t)) . 25582) (undo-tree-id482 . -477) (undo-tree-id483 . -415) (undo-tree-id484 . -415) (undo-tree-id485 . -415) 25997 (t 26348 63605 854389 995000)) ((25582 . 26060)) (26348 63653 534235 992000) 0 nil])
([nil nil ((26059 . 26060) 25997) nil (26348 63745 810382 917000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -25713) (undo-tree-id481 . -2) 25715 (25712 . 25715) 25692) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 25712) (25713 . 25715)) (26348 63652 942460 472000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26060 . 26061) (#("
" 0 1 (fontified nil)) . -26958) (26060 . 26959)) nil (26348 63745 810381 472000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25712 . 25713) (#("
" 0 1 (fontified nil)) . -26190) (25712 . 26191) 25692) ((#("

Строение выделенных продуктов {\\bfseries 3} и {\\bfseries 5} было доказано
методами ЯМР\\textsuperscript{1}Н-, \\textsuperscript{13}С- спектроскопии.
Так, в спектре ЯМР \\textsuperscript{1}Н соединения {\\bfseries 5}
пиридиновые протоны Н-3, Н-4 и Н-2 проявились однопротонными
мультиплетами при 7.44-7.46, 7.70-7.72 и 8.44-8.46 м.д. Пиридиновый
протон Н-6 регистрировался однопротонным синглетом при 8.71 м.д. Аминные
протоны Н-7,7 проявились двухпротонным синглетом при 6.30 м.д.
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 33 (fontified t) 33 42 (face font-lock-keyword-face fontified t) 42 44 (face (bold) fontified t) 44 49 (fontified t) 49 58 (face font-lock-keyword-face fontified t) 58 60 (face (bold) fontified t) 60 75 (fontified t) 75 76 (fontified t) 76 88 (fontified t) 88 104 (face font-lock-keyword-face fontified t) 104 111 (fontified t) 111 127 (face font-lock-keyword-face fontified t) 127 168 (fontified t) 168 184 (face font-lock-keyword-face fontified t) 184 201 (fontified t) 201 210 (face font-lock-keyword-face fontified t) 210 212 (face (bold) fontified t) 212 348 (fontified t) 348 416 (fontified t) 416 478 (fontified nil) 478 479 (fontified nil)) . 25712) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (26190 . 26191) (nil rear-nonsticky t 25712 . 25713)) (26348 63652 446466 270000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 26958) (undo-tree-id552 . 1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1)) nil (26348 63745 810377 56000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25713)) ((25713 . 25714) (t 26348 63635 736795 413000)) (26348 63635 699467 208000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 30302) (undo-tree-id577 . -15) (t 26348 63745 880042 267000)) nil (26348 63766 904861 934000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 30302)) nil (26348 63766 904860 466000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 30395) (undo-tree-id576 . -20)) nil (26348 63766 904859 625000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.4\\textwidth]{assets/6}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 77 (face font-lock-builtin-face fontified t) 77 79 (fontified t) 79 83 (face font-lock-keyword-face fontified t) 83 84 (fontified t latex-env-pair t) 84 90 (face font-lock-function-name-face fontified t latex-env-pair t) 90 91 (fontified t latex-env-pair t) 91 92 (fontified t)) . 30302) (undo-tree-id573 . -91) (undo-tree-id574 . -79) (undo-tree-id575 . -79)) nil (26348 63766 904857 388000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29440 . 29441) (#("
" 0 1 (fontified nil)) . -29532) (29440 . 29533) 29428) nil (26348 63766 904841 404000) 0 nil])
([nil nil ((52514 . 52515) (t 26348 63766 962721 41000)) nil (26348 63925 931204 127000) 0 nil])
([nil nil ((49553 . 49561)) nil (26348 63925 931199 905000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 324) (undo-tree-id583 . -14) (undo-tree-id584 . -7) 331 (t 26348 63925 967785 237000)) nil (26349 2257 641890 952000) 0 nil])
([nil nil ((nil rear-nonsticky nil 585 . 586) (#("
" 0 1 (fontified nil)) . -600) (585 . 601)) nil (26349 2257 641887 874000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 324)) nil (26349 2257 641886 811000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 324)) nil (26349 2257 641886 122000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 324)) nil (26349 2257 641885 353000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 324)) nil (26349 2257 641884 522000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 324)) nil (26349 2257 641883 480000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 324)) nil (26349 2257 641882 652000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 324)) nil (26349 2257 641881 771000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 324)) nil (26349 2257 641880 934000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 324)) nil (26349 2257 641880 47000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 324)) nil (26349 2257 641879 131000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 324)) nil (26349 2257 641878 156000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 324)) nil (26349 2257 641877 240000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 324)) nil (26349 2257 641876 101000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 324)) nil (26349 2257 641875 438000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 324)) nil (26349 2257 641874 694000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 324) (undo-tree-id581 . -1) (undo-tree-id582 . -1)) nil (26349 2257 641873 811000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 567) (undo-tree-id579 . -1) (undo-tree-id580 . -1)) nil (26349 2257 641870 633000) 0 nil])
([nil nil ((328 . 339) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -328) (undo-tree-id578 . -1) (324 . 329) (323 . 324) 323) nil (26349 2257 641866 349000) 0 nil])
([nil nil ((583 . 584) 504) nil (26349 2585 546604 317000) 0 nil])
([nil nil ((584 . 597)) ((#("\\end{authors}" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 12 (face font-lock-function-name-face latex-env-pair t fontified t) 12 13 (latex-env-pair t fontified t)) . 584)) (26349 2586 794532 384000) 0 nil])
([nil nil ((616 . 618) (#("s" 0 1 (face font-lock-function-name-face fontified t latex-env-pair t)) . -616) (undo-tree-id875 . -1) 617 (614 . 617) (#("i" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t)) . -614) (undo-tree-id876 . -1) (611 . 615) (#("i" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t)) . -611) (undo-tree-id877 . -1) (609 . 612) (#("i" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t)) . -609) (undo-tree-id878 . -1) (609 . 610) (606 . 609) (#("center" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 606) (undo-tree-id879 . -5) (undo-tree-id880 . -6) (undo-tree-id881 . -6)) nil (26349 2597 939627 359000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 707) (t 26349 2257 705682 141000)) ((707 . 708)) (26349 2584 714648 505000) 0 nil])
([nil nil ((1020 . 1022) (#("s" 0 1 (fontified nil latex-env-pair t)) . -1020) 1021 (1010 . 1021) (#("center" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 1010) (undo-tree-id872 . -5) (undo-tree-id873 . -6) (undo-tree-id874 . -6)) nil (26349 2597 939619 198000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 790)) ((790 . 791)) (26349 2584 393917 554000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 1003) (undo-tree-id870 . -1) (undo-tree-id871 . -1)) nil (26349 2597 939614 457000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 874)) ((874 . 875)) (26349 2584 89984 932000) 0 nil])
([nil nil ((#("{\\small " 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 620) (undo-tree-id868 . -7) (undo-tree-id869 . -8)) nil (26349 2597 939609 124000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 949)) ((949 . 950)) (26349 2583 801998 573000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 705) (undo-tree-id5 . -1) (t 26349 2597 985477 886000)) nil (26349 5933 684499 292000) 0 nil])
([nil nil ((706 . 709)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 706)) (26349 2583 610189 92000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 788)) nil (26349 5933 684497 503000) 0 nil])
([nil nil ((792 . 795)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 792)) (26349 2583 418272 449000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 872) (undo-tree-id4 . -1)) nil (26349 5933 684496 750000) 0 nil])
([nil nil ((879 . 882)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 879)) (26349 2582 842255 374000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 947) (undo-tree-id3 . -1)) nil (26349 5933 684495 143000) 0 nil])
([nil nil ((957 . 960)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 957)) (26349 2582 490032 229000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -991) (undo-tree-id0 . -1) (#("\\" 0 1 (fontified t)) . -992) (undo-tree-id1 . -1) (#("\\" 0 1 (face font-lock-warning-face fontified t)) . -993) (undo-tree-id2 . -1) 994 (991 . 994)) nil (26349 5933 684490 545000) 0 nil])
([nil nil ((1006 . 1009)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 1006)) (26349 2582 154548 119000) 0 nil])
([nil nil ((946 . 949)) nil (26349 5933 684548 866000) 0 nil])
([nil nil ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 1006) (undo-tree-id585 . -2) (undo-tree-id587 . -2) (undo-tree-id589 . -2) (undo-tree-id591 . -2) (undo-tree-id593 . -2) (undo-tree-id595 . -2) (undo-tree-id597 . -2) (undo-tree-id599 . -2) (undo-tree-id601 . -2) (undo-tree-id603 . -2) (undo-tree-id605 . -2) (undo-tree-id607 . -2) (undo-tree-id609 . -2) (undo-tree-id611 . -2) (undo-tree-id613 . -2) (undo-tree-id615 . -2) (undo-tree-id617 . -2) (undo-tree-id619 . -2) (undo-tree-id621 . -2) (undo-tree-id623 . -1) (undo-tree-id625 . -1) (undo-tree-id627 . -1) (undo-tree-id629 . -1) (undo-tree-id631 . -1) (undo-tree-id633 . -3) (t 26349 2368 465629 910000)) ((1006 . 1009)) (26349 2581 850321 320000) 0 nil])
([nil nil ((871 . 874)) nil (26349 5935 942448 297000) 0 nil] [nil nil ((860 . 863)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 860) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2)) (26349 5933 684464 139000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 599) (undo-tree-id643 . -14) (undo-tree-id644 . -13) (undo-tree-id645 . -13) 612 (t 26349 2370 65581 0)) ((599 . 614)) (26349 2581 673932 674000) 0 nil])
([nil nil ((787 . 790)) nil (26349 5935 942446 951000) 0 nil])
nil
([nil nil ((#("\\end{center}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 11 (face font-lock-function-name-face fontified t latex-env-pair t) 11 12 (fontified t latex-env-pair t) 12 13 (fontified t)) . 992) (undo-tree-id641 . -12) (undo-tree-id642 . -11) 1003) ((992 . 1005)) (26349 2581 450324 777000) 0 nil])
([nil nil ((704 . 707)) nil (26349 5935 942442 457000) 0 nil])
([nil nil ((#("{\\small " 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 599) (undo-tree-id640 . -7)) ((599 . 607)) (26349 2581 114253 241000) 0 nil])
([nil nil ((#("\\end{center}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 11 (face font-lock-function-name-face latex-env-pair t fontified t) 11 12 (latex-env-pair t fontified t) 12 13 (fontified t)) . 4604) (undo-tree-id40 . -12) (undo-tree-id41 . -11) 4615 (t 26349 5936 14376 536000)) nil (26349 6023 744974 472000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 982)) ((982 . 983)) (26349 2580 954704 319000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 3853) (undo-tree-id39 . -14)) nil (26349 6023 744972 193000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -609) (undo-tree-id638 . -1) (606 . 610) (603 . 606) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -603) (undo-tree-id639 . -1) (599 . 604) (598 . 599) 598) ((#("
" 0 1 (fontified t)) . 598) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (#("\\begi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 599) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -5) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (603 . 604) (#("in{" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (latex-env-pair t fontified nil)) . 603) (undo-tree-id842 . -3) (undo-tree-id843 . -3) (undo-tree-id844 . -3) (undo-tree-id845 . -3) (undo-tree-id846 . -3) (undo-tree-id847 . -3) (undo-tree-id848 . -3) (undo-tree-id849 . -3) (undo-tree-id850 . -3) (undo-tree-id851 . -3) (undo-tree-id852 . -3) (undo-tree-id853 . -3) (undo-tree-id854 . -3) (#("affi" 0 3 (face font-lock-function-name-face latex-env-pair t fontified nil) 3 4 (face font-lock-function-name-face fontified nil)) . 606) (undo-tree-id855 . -2) (undo-tree-id856 . -2) (undo-tree-id857 . -2) (undo-tree-id858 . -2) (undo-tree-id859 . -2) (undo-tree-id860 . -2) (undo-tree-id861 . -2) (undo-tree-id862 . -2) (undo-tree-id863 . -2) (undo-tree-id864 . -2) (undo-tree-id865 . -2) (undo-tree-id866 . -2) (undo-tree-id867 . -2) (609 . 610)) (26349 2580 762555 239000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 3923)) nil (26349 6023 744970 698000) 0 nil])
([nil nil ((614 . 619) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -614) (undo-tree-id635 . -1) (611 . 615) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -611) (undo-tree-id636 . -1) (609 . 612) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -609) (undo-tree-id637 . -1) (609 . 610) 608) ((#("i" 0 1 (face font-lock-function-name-face fontified nil)) . 609) (609 . 610) (#("ili" 0 2 (face font-lock-function-name-face latex-env-pair t fontified nil) 2 3 (face font-lock-function-name-face fontified nil)) . 609) (611 . 612) (#("iati" 0 3 (face font-lock-function-name-face latex-env-pair t fontified nil) 3 4 (face font-lock-function-name-face fontified nil)) . 611) (614 . 615) (#("ions}" 0 4 (face font-lock-function-name-face latex-env-pair t fontified t) 4 5 (latex-env-pair t fontified t)) . 614)) (26349 2580 539030 168000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 3923)) nil (26349 6023 744970 141000) 0 nil])
([nil nil ((1016 . 1021) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -1016) (undo-tree-id651 . -1) (undo-tree-id653 . -1) (undo-tree-id655 . -1) (1012 . 1017) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -1012) (undo-tree-id657 . -1) (undo-tree-id659 . -1) (undo-tree-id661 . -1) (1004 . 1013) (1003 . 1004) 979) ((#("
" 0 1 (fontified t)) . 1003) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (#("\\end{affi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (latex-env-pair t fontified nil) 5 8 (face font-lock-function-name-face latex-env-pair t fontified nil) 8 9 (face font-lock-function-name-face fontified nil)) . 1004) (undo-tree-id722 . -8) (undo-tree-id723 . -8) (undo-tree-id724 . -8) (undo-tree-id725 . -8) (undo-tree-id726 . -8) (undo-tree-id727 . -8) (undo-tree-id728 . -8) (undo-tree-id729 . -8) (undo-tree-id730 . -8) (undo-tree-id731 . -8) (undo-tree-id732 . -8) (undo-tree-id733 . -8) (undo-tree-id734 . -8) (undo-tree-id735 . -8) (undo-tree-id736 . -8) (undo-tree-id737 . -8) (undo-tree-id738 . -8) (undo-tree-id739 . -8) (undo-tree-id740 . -8) (undo-tree-id741 . -8) (undo-tree-id742 . -8) (undo-tree-id743 . -8) (undo-tree-id744 . -8) (undo-tree-id745 . -8) (undo-tree-id746 . -8) (undo-tree-id747 . -8) (undo-tree-id748 . -8) (undo-tree-id749 . -8) (undo-tree-id750 . -8) (undo-tree-id751 . -8) (undo-tree-id752 . -8) (undo-tree-id753 . -8) (undo-tree-id754 . -8) (undo-tree-id755 . -8) (undo-tree-id756 . -8) (undo-tree-id757 . -8) (undo-tree-id758 . -8) (undo-tree-id759 . -8) (undo-tree-id760 . -8) (undo-tree-id761 . -8) (undo-tree-id762 . -8) (undo-tree-id763 . -9) (undo-tree-id764 . -8) (undo-tree-id765 . -8) (undo-tree-id766 . -8) (undo-tree-id767 . -8) (1012 . 1013) (#("ilati" 0 2 (face font-lock-function-name-face latex-env-pair t fontified nil) 2 4 (face font-lock-function-name-face latex-env-pair t fontified nil) 4 5 (face font-lock-function-name-face fontified nil)) . 1012) (undo-tree-id768 . 3) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (undo-tree-id814 . -2) (1016 . 1017) (#("ions}" 0 4 (face font-lock-function-name-face latex-env-pair t fontified t) 4 5 (latex-env-pair t fontified t)) . 1016)) (26349 2580 218388 244000) 0 nil] [nil nil ((979 . 989)) ((#("iliations}" 0 10 (fontified t)) . 979) (undo-tree-id646 . -9) (undo-tree-id647 . -9) (undo-tree-id648 . -9) (undo-tree-id649 . -9)) (26349 2419 903675 29000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3923)) nil (26349 6023 744969 560000) 0 nil])
([nil nil ((1014 . 1015) (t 26349 2424 107306 741000) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified nil)) . -1014) (undo-tree-id663 . -1) (undo-tree-id665 . -1) (undo-tree-id667 . -1) (undo-tree-id669 . -1) (undo-tree-id671 . -1) (undo-tree-id673 . -1) (1014 . 1015) (t 26349 2424 107306 741000)) ((#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified nil)) . 1014) (undo-tree-id674 . -1) (1014 . 1015) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . 1014) (t 26349 2440 230161 653000)) (26349 2440 190081 792000) 0 nil])
nil
([nil nil ((#("m" 0 1 (fontified t)) . 3923)) nil (26349 6023 744968 854000) 0 nil])
nil
([nil nil ((#("a" 0 1 (fontified t)) . 3923)) nil (26349 6023 744968 230000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 3923)) nil (26349 6023 744967 574000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 3923)) nil (26349 6023 744966 837000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 3923)) nil (26349 6023 744966 178000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 3923)) nil (26349 6023 744965 410000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3923)) nil (26349 6023 744964 677000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 3923)) nil (26349 6023 744964 30000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 3923)) nil (26349 6023 744963 475000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3923)) nil (26349 6023 744962 832000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 3923)) nil (26349 6023 744962 129000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3923)) nil (26349 6023 744961 409000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3923)) nil (26349 6023 744960 951000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 4029)) nil (26349 6023 744960 507000) 0 nil])
([nil nil ((4087 . 4088) (#("
" 0 1 (face (bold) fontified t)) . -4087) (#("
" 0 1 (fontified t)) . -4030)) nil (26349 6023 744959 876000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 4030)) nil (26349 6023 744958 959000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 4030)) nil (26349 6023 744958 245000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 4030)) nil (26349 6023 744957 555000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 4030)) nil (26349 6023 744956 945000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 4030)) nil (26349 6023 744956 366000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 4030)) nil (26349 6023 744955 519000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 4030)) nil (26349 6023 744954 865000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 4030)) nil (26349 6023 744954 115000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 4030)) nil (26349 6023 744953 407000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 4030)) nil (26349 6023 744952 909000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 4030)) nil (26349 6023 744952 137000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 4030)) nil (26349 6023 744951 557000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4030)) nil (26349 6023 744950 976000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 4030)) nil (26349 6023 744950 324000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 4030)) nil (26349 6023 744949 645000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4030)) nil (26349 6023 744948 982000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 4030)) nil (26349 6023 744948 289000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4030)) nil (26349 6023 744947 605000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 4167)) nil (26349 6023 744946 876000) 0 nil])
([nil nil ((4136 . 4137) (#("
" 0 1 (fontified t)) . -4136) (4029 . 4030) (#("
" 0 1 (fontified t)) . -4029) 4012) nil (26349 6023 744945 611000) 0 nil])
([nil nil ((3982 . 3983) (#("
" 0 1 (fontified t)) . -3982) (undo-tree-id38 . -1) 3926) nil (26349 6023 744944 167000) 0 nil])
([nil nil ((3931 . 3938) (3927 . 3931) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3927) (undo-tree-id37 . -1) (3923 . 3928) (3922 . 3923) 3922) nil (26349 6023 744942 281000) 0 nil])
([nil nil ((4191 . 4197) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -4191) (undo-tree-id27 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -4192) (undo-tree-id28 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -4193) (undo-tree-id29 . -1) 4194 (4185 . 4194) (#("b" 0 1 (face font-lock-keyword-face fontified t)) . -4185) (undo-tree-id30 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -4186) (undo-tree-id31 . -1) (#("g" 0 1 (face font-lock-keyword-face fontified t)) . -4187) (undo-tree-id32 . -1) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -4188) (undo-tree-id33 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -4189) (undo-tree-id34 . -1) (#("{" 0 1 (fontified t)) . -4190) (undo-tree-id35 . -1) 4191 (4188 . 4191) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4188) (undo-tree-id36 . -1) (4184 . 4189) (4183 . 4184) 4103) nil (26349 6023 744938 647000) 0 nil])
([nil nil ((4214 . 4219) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4214) (undo-tree-id22 . -1) (4211 . 4215) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4211) (undo-tree-id23 . -1) (4209 . 4212) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4209) (undo-tree-id24 . -1) (4206 . 4210) (#("{" 0 1 (fontified t)) . -4206) (undo-tree-id25 . -1) 4207 (4203 . 4207) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4203) (undo-tree-id26 . -1) (4199 . 4204) (4198 . 4199) 4198) nil (26349 6023 744928 83000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4610) (undo-tree-id14 . -1) (4602 . 4611) (4601 . 4602) (#("}" 0 1 (fontified t)) . -4601) (undo-tree-id15 . -1) (#("
" 0 1 (fontified t)) . -4602) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t)) . -4603) (undo-tree-id17 . -1) (#(" " 0 1 (fontified t)) . -4604) (undo-tree-id18 . -1) 4605 (4602 . 4605) (#("
" 0 1 (fontified t)) . -4602) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t)) . -4603) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t)) . -4604) (undo-tree-id21 . -1) 4605 (4602 . 4605) 4596) nil (26349 6023 744918 720000) 0 nil])
([nil nil ((4615 . 4620) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4615) (undo-tree-id10 . -1) (4612 . 4616) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4612) (undo-tree-id11 . -1) (4610 . 4613) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4610) (undo-tree-id12 . -1) (4609 . 4611) (#("f" 0 1 (face font-lock-function-name-face fontified t)) . -4609) (undo-tree-id13 . -1) 4610) nil (26349 6044 533358 602000) 0 nil])
([nil nil ((#("\\end{center}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 11 (face font-lock-function-name-face latex-env-pair t fontified t) 11 12 (latex-env-pair t fontified t) 12 13 (fontified t)) . 8112) (undo-tree-id65 . -12) (undo-tree-id66 . -11) 8123 (t 26349 6023 791703 852000)) nil (26349 6089 59464 461000) 0 nil] [nil nil ((nil rear-nonsticky nil 4789 . 4790) (nil fontified nil 4762 . 4790) (4762 . 4790) 4619 (t 26349 6023 791703 852000)) ((#("\\setlength{\\parskip}{-0.5cm}" 0 10 (face font-lock-keyword-face fontified nil) 10 11 (fontified nil) 11 19 (face font-lock-variable-name-face fontified nil) 19 27 (fontified nil) 27 28 (rear-nonsticky nil fontified nil)) . 4762) (undo-tree-id42 . -27) (undo-tree-id43 . -27) (undo-tree-id44 . -27) (undo-tree-id45 . -27) (nil rear-nonsticky t 4789 . 4790)) (26349 6044 533102 624000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 13 (face font-lock-function-name-face latex-env-pair t fontified t) 13 14 (latex-env-pair t fontified t) 14 15 (fontified t)) . 7380) (undo-tree-id64 . -14)) nil (26349 6089 59460 773000) 0 nil])
nil
([nil nil ((#("{\\smal\\bfseries " 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 15 (face font-lock-keyword-face fontified t) 15 16 (face (bold) fontified t)) . 7449) (undo-tree-id63 . -15)) nil (26349 6089 59459 225000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 7557)) nil (26349 6089 59457 151000) 0 nil])
([nil nil ((#("{\\small{\\bfseries " 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 17 (face font-lock-keyword-face fontified t) 17 18 (face (bold) fontified t)) . 7559) (undo-tree-id62 . -17)) nil (26349 6089 59456 281000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 7697)) nil (26349 6089 59454 552000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7558)) nil (26349 6089 59453 722000) 0 nil])
([nil nil ((7665 . 7666) (#("
" 0 1 (fontified t)) . -7665) (7598 . 7599) (#("
" 0 1 (fontified t)) . -7598) (7557 . 7558) (#("
" 0 1 (fontified t)) . -7557) (7522 . 7523) (#("
" 0 1 (fontified t)) . -7522) (7483 . 7484) (#("
" 0 1 (fontified t)) . -7483) 7449) nil (26349 6089 59452 81000) 0 nil])
([nil nil ((7456 . 7464) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -7456) (undo-tree-id53 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -7457) (undo-tree-id54 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -7458) (undo-tree-id55 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -7459) (undo-tree-id56 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -7460) (undo-tree-id57 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -7461) (undo-tree-id58 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -7462) (undo-tree-id59 . -1) 7463 (7460 . 7463) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -7460) (undo-tree-id60 . -1) (7453 . 7461) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -7453) (undo-tree-id61 . -1) (7449 . 7454) (7448 . 7449) 7448) nil (26349 6089 59447 671000) 0 nil])
([nil nil ((7713 . 7726) (7712 . 7713) 7629) nil (26349 6089 59437 175000) 0 nil])
([nil nil ((7743 . 7748) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -7743) (undo-tree-id49 . -1) (7741 . 7744) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -7741) (undo-tree-id50 . -1) (7738 . 7742) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -7738) (undo-tree-id51 . -1) (7735 . 7739) (7732 . 7735) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -7732) (undo-tree-id52 . -1) (7728 . 7733) (7727 . 7728) 7727) nil (26349 6089 59434 904000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . 7740)) nil (26349 6089 59427 867000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7741 . 7742) (nil fontified nil 7741 . 7742) (7741 . 7742) 7740) nil (26349 6089 59426 723000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8110 . 8111) (#("
" 0 1 (fontified nil)) . -8131) (8110 . 8132) 8098) nil (26349 6089 59424 796000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 8109)) nil (26349 6089 59422 613000) 0 nil])
([nil nil ((8111 . 8114) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 8111) (undo-tree-id46 . -4) (undo-tree-id47 . -5) (undo-tree-id48 . -5)) nil (26349 6089 59417 902000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4336) (undo-tree-id90 . -1) (t 26349 6089 113048 231000)) nil (26349 6118 610878 685000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4414) (undo-tree-id89 . -1)) nil (26349 6118 610877 255000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4500) (undo-tree-id88 . -1)) nil (26349 6118 610875 808000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4573) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1)) nil (26349 6118 610873 52000) 0 nil])
([nil nil ((4335 . 4338)) nil (26349 6118 610847 792000) 0 nil])
([nil nil ((4416 . 4419)) nil (26349 6118 610847 133000) 0 nil])
([nil nil ((4505 . 4508)) nil (26349 6118 610934 118000) 0 nil])
([nil nil ((4581 . 4584)) nil (26349 6137 742544 563000) 0 nil] [nil nil ((4606 . 4609)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 4606)) (26349 6118 610841 429000) 0 nil])
([nil nil ((4288 . 4289) (#("
" 0 1 (fontified t)) . -4288) 4287) nil (26349 6137 742543 834000) 0 nil])
nil
([nil nil ((4405 . 4406) (#("
" 0 1 (fontified t)) . -4405) (undo-tree-id94 . -1) 4404) nil (26349 6137 742542 844000) 0 nil])
([nil nil ((4484 . 4485) (#("
" 0 1 (fontified t)) . -4484) 4483) nil (26349 6137 742541 91000) 0 nil])
([nil nil ((682 . 683) (#("
" 0 1 (fontified t)) . -682) (undo-tree-id93 . -1) 681) nil (26349 6137 742539 792000) 0 nil])
([nil nil ((779 . 780) (#("
" 0 1 (fontified t)) . -779) (undo-tree-id92 . -1) 770) nil (26349 6137 742537 714000) 0 nil])
([nil nil ((866 . 867) (#("
" 0 1 (fontified t)) . -866) (undo-tree-id91 . -1) 865) nil (26349 6137 742534 392000) 0 nil])
([nil nil ((945 . 946) (#("
" 0 1 (fontified t)) . -945) 944) nil (26349 6137 742520 837000) 0 nil])
([nil nil ((7826 . 7827) (#("
" 0 1 (fontified t)) . -7826) (undo-tree-id112 . -1) 7774 (t 26349 6137 791566 26000)) nil (26349 6154 53808 422000) 0 nil])
([nil nil ((7914 . 7915) (#("
" 0 1 (fontified t)) . -7914) 7913) nil (26349 6154 53806 330000) 0 nil])
([nil nil ((8004 . 8005) (#("
" 0 1 (fontified t)) . -8004) (undo-tree-id111 . -1) 8001) nil (26349 6154 53805 330000) 0 nil])
([nil nil ((8080 . 8081) (#("
" 0 1 (fontified t)) . -8080) (undo-tree-id110 . -1) 8079) nil (26349 6154 53803 522000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8092) (undo-tree-id109 . -1)) nil (26349 6154 53801 933000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8017)) nil (26349 6154 53800 630000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7937) (undo-tree-id108 . -1)) nil (26349 6154 53799 903000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7850) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1)) nil (26349 6154 53796 327000) 0 nil])
([nil nil ((7849 . 7852)) nil (26349 6154 53779 83000) 0 nil])
([nil nil ((7938 . 7941)) nil (26349 6154 53778 546000) 0 nil])
([nil nil ((8020 . 8023)) nil (26349 6154 53777 380000) 0 nil])
([nil nil ((8097 . 8100)) nil (26349 6331 643988 1000) 0 nil])
([nil nil ((#("
В спектре ЯМР \\textsuperscript{1}Н ацетиленового соединения {\\bfseries 3}
метильные протоны Н-11,11,11 проявились трехпротонным мультиплетом при
1.17-1.21 м.д. Метильные протоны Н-9,9,9,14,14,14,15,15,15
регистрировались трехпротонным синглетом при 1.38 м.д. Метиленовые
протоны Н-10,10 проявились двухпротонным мультиплетом при 2.51-2.54 м.д.
Ацетиленовый протон Н-19 регистрировался однопротонным синглетом при
2.58 м.д. Метиленовые протоны Н-17,17 проявились двухпротонным
мультиплетом при 4.91-4.92 м.д. Ароматические протоны Н-3 и Н-5
регистрировались однопротонными синглетами при 7.29 и 7.56 м.д.
соответственно. Гидроксильный протон Н-7 резонировал однопротонным
синглетом при 11.09 м.д.
" 0 15 (fontified t) 15 31 (face font-lock-keyword-face fontified t) 31 62 (fontified t) 62 71 (face font-lock-keyword-face fontified t) 71 73 (face (bold) fontified t) 73 697 (fontified t)) . 26309) (undo-tree-id236 . -696) (undo-tree-id237 . -672) (undo-tree-id238 . -672) (undo-tree-id239 . -672) 26981 (t 26349 6332 482905 953000)) nil (26349 6590 810203 942000) 0 nil] [nil nil ((#("
В целях расширения арсенала БАВ и изучение реакционной способности азида
никотиновой кислоты {\\bfseries (2)} с аминами, проведено его взаимодействие
с молекулой алкалоида цитизина. Показано, что при нагревании в среде
сухого бензола азид никотиновой кислоты {\\bfseries (2)} претерпевает
перегруппировку Курциуса с образованием изоцианата, который реагирует,
\\emph{in situ}, с молекулой цитизина при кипячении в течение 1-2 часов с
образованием мочевины {\\bfseries 8}. Для выделения мочевины {\\bfseries 8}
растворитель отгоняют в вакууме, остаток хроматографировают на колонке с
силикагелем (элюент: хлороформ, смесь хлороформа с этанолом, 100:1 →
10:1).
" 0 1 (fontified t) 1 9 (fontified t) 9 95 (fontified t) 95 104 (face font-lock-keyword-face fontified t) 104 108 (face (bold) fontified t) 108 260 (fontified t) 260 269 (face font-lock-keyword-face fontified t) 269 273 (face (bold) fontified t) 273 359 (fontified t) 359 364 (face font-lock-keyword-face fontified t) 364 365 (fontified t) 365 372 (face (italic) fontified t) 372 455 (fontified t) 455 464 (face font-lock-keyword-face fontified t) 464 466 (face (bold) fontified t) 466 493 (fontified t) 493 502 (face font-lock-keyword-face fontified t) 502 504 (face (bold) fontified t) 504 655 (fontified t)) . 34407) (undo-tree-id113 . -654) (undo-tree-id114 . -648) (undo-tree-id115 . -648) (undo-tree-id116 . -648) 35055 (t 26349 6154 124402 45000)) ((34407 . 35062)) (26349 6330 363688 977000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -26440) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) 26442 (26439 . 26442) 26419) nil (26349 6590 810199 366000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34551 . 34552) (#("
" 0 1 (fontified nil)) . -35206) (34551 . 35207) 34531) ((#("

В целях расширения арсенала БАВ и изучение реакционной способности азида
никотиновой кислоты {\\bfseries (2)} с аминами, проведено его взаимодействие
с молекулой алкалоида цитизина. Показано, что при нагревании в среде
сухого бензола азид никотиновой кислоты {\\bfseries (2)} претерпевает
перегруппировку Курциуса с образованием изоцианата, который реагирует,
\\emph{in situ}, с молекулой цитизина при кипячении в течение 1-2 часов с
образованием мочевины {\\bfseries 8}. Для выделения мочевины {\\bfseries 8}
растворитель отгоняют в вакууме, остаток хроматографировают на колонке с
силикагелем (элюент: хлороформ, смесь хлороформа с этанолом, 100:1 →
10:1).
" 0 1 (fontified nil rear-nonsticky nil) 1 2 (fontified nil) 2 10 (fontified t) 10 74 (fontified t) 74 75 (fontified t) 75 96 (fontified t) 96 105 (face font-lock-keyword-face fontified t) 105 109 (face (bold) fontified t) 109 261 (fontified t) 261 270 (face font-lock-keyword-face fontified t) 270 274 (face (bold) fontified t) 274 360 (fontified t) 360 365 (face font-lock-keyword-face fontified t) 365 366 (fontified t) 366 373 (face (italic) fontified t) 373 456 (fontified t) 456 465 (face font-lock-keyword-face fontified t) 465 467 (face (bold) fontified t) 467 494 (fontified t) 494 503 (face font-lock-keyword-face fontified t) 503 505 (face (bold) fontified t) 505 649 (fontified t) 649 655 (fontified nil) 655 656 (fontified nil)) . 34551) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -649) (undo-tree-id142 . -655) (undo-tree-id143 . -655) (undo-tree-id144 . -655) (undo-tree-id145 . -655) (undo-tree-id146 . -655) (undo-tree-id147 . -655) (undo-tree-id148 . -655) (undo-tree-id149 . -655) (undo-tree-id150 . -655) (undo-tree-id151 . -655) (undo-tree-id152 . -655) (undo-tree-id153 . -655) (undo-tree-id154 . -655) (undo-tree-id155 . -655) (undo-tree-id156 . -655) (undo-tree-id157 . -655) (undo-tree-id158 . -655) (undo-tree-id159 . -655) (undo-tree-id160 . -655) (undo-tree-id161 . -655) (undo-tree-id162 . -655) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -655) (undo-tree-id190 . -1) (undo-tree-id191 . -649) (undo-tree-id192 . -649) (undo-tree-id193 . -649) (undo-tree-id194 . -649) (undo-tree-id195 . -649) (undo-tree-id196 . -649) (undo-tree-id197 . -649) (undo-tree-id198 . -649) (undo-tree-id199 . -649) (undo-tree-id200 . -649) (undo-tree-id201 . -649) (undo-tree-id202 . -649) (undo-tree-id203 . -649) (undo-tree-id204 . -649) (undo-tree-id205 . -649) (undo-tree-id206 . -649) (undo-tree-id207 . -649) (undo-tree-id208 . -649) (undo-tree-id209 . -649) (undo-tree-id210 . -1) (undo-tree-id211 . -649) (undo-tree-id212 . -649) (undo-tree-id213 . -649) (undo-tree-id214 . -1) (undo-tree-id215 . -649) (35206 . 35207) (nil rear-nonsticky t 34551 . 34552)) (26349 6329 835500 165000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26439 . 26440) (#("
" 0 1 (fontified nil)) . -27136) (26439 . 27137) 26419) nil (26349 6590 810127 311000) 0 nil])
([nil nil ((35206 . 35207) 35200) ((#("
" 0 1 (fontified t)) . 35206) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1)) (26349 6329 99765 758000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 26440) (undo-tree-id216 . -1)) nil (26349 6606 919308 866000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 34552)) ((34552 . 34553) (t 26349 6285 750673 980000)) (26349 6285 691202 921000) 0 nil])
([nil nil ((#("
В целях расширения арсенала БАВ и изучение реакционной способности азида
никотиновой кислоты {\\bfseries (2)} с аминами, проведено его взаимодействие
с молекулой алкалоида цитизина. Показано, что при нагревании в среде
сухого бензола азид никотиновой кислоты {\\bfseries (2)} претерпевает
перегруппировку Курциуса с образованием изоцианата, который реагирует,
\\emph{in situ}, с молекулой цитизина при кипячении в течение 1-2 часов с
образованием мочевины {\\bfseries 8}. Для выделения мочевины {\\bfseries 8}
растворитель отгоняют в вакууме, остаток хроматографировают на колонке с
силикагелем (элюент: хлороформ, смесь хлороформа с этанолом, 100:1 →
10:1).
" 0 1 (fontified t) 1 9 (fontified t) 9 95 (fontified t) 95 104 (face font-lock-keyword-face fontified t) 104 108 (face (bold) fontified t) 108 260 (fontified t) 260 269 (face font-lock-keyword-face fontified t) 269 273 (face (bold) fontified t) 273 346 (fontified t) 346 359 (fontified t) 359 364 (face font-lock-keyword-face fontified t) 364 365 (fontified t) 365 372 (face (italic) fontified t) 372 455 (fontified t) 455 464 (face font-lock-keyword-face fontified t) 464 466 (face (bold) fontified t) 466 493 (fontified t) 493 502 (face font-lock-keyword-face fontified t) 502 504 (face (bold) fontified t) 504 655 (fontified t)) . 34407) (undo-tree-id245 . -654) (undo-tree-id246 . -648) (undo-tree-id247 . -648) (undo-tree-id248 . -648) (undo-tree-id249 . -648) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -74) (undo-tree-id259 . -74) (undo-tree-id260 . -74) (undo-tree-id261 . -74) (undo-tree-id262 . -74) (undo-tree-id263 . -150) (undo-tree-id264 . -150) (undo-tree-id265 . -150) (undo-tree-id266 . -150) (undo-tree-id267 . -150) (undo-tree-id268 . -219) (undo-tree-id269 . -219) (undo-tree-id270 . -219) (undo-tree-id271 . -219) (undo-tree-id272 . -219) (undo-tree-id273 . -288) (undo-tree-id274 . -288) (undo-tree-id275 . -288) (undo-tree-id276 . -288) (undo-tree-id277 . -288) (undo-tree-id278 . -359) (undo-tree-id279 . -359) (undo-tree-id280 . -359) (undo-tree-id281 . -359) (undo-tree-id282 . -359) (undo-tree-id283 . -432) (undo-tree-id284 . -432) (undo-tree-id285 . -432) (undo-tree-id286 . -432) (undo-tree-id287 . -432) (undo-tree-id288 . -506) (undo-tree-id289 . -506) (undo-tree-id290 . -506) (undo-tree-id291 . -506) (undo-tree-id292 . -506) (undo-tree-id293 . -579) (undo-tree-id294 . -579) (undo-tree-id295 . -579) (undo-tree-id296 . -579) (undo-tree-id297 . -579) (undo-tree-id298 . -648) (undo-tree-id299 . -648) (undo-tree-id300 . -648) (undo-tree-id301 . -648) (undo-tree-id302 . -648) (undo-tree-id303 . -648) (undo-tree-id304 . -648) (undo-tree-id305 . -648) (undo-tree-id306 . -648) (undo-tree-id307 . -648) (undo-tree-id308 . -648) (undo-tree-id309 . -648) (undo-tree-id310 . -648) (undo-tree-id311 . -648) (undo-tree-id312 . -648) (undo-tree-id313 . -648) (undo-tree-id314 . -648) (undo-tree-id315 . -648) (undo-tree-id316 . -648) (undo-tree-id317 . -648) (undo-tree-id318 . -648) (undo-tree-id319 . -648) (undo-tree-id320 . -648) (undo-tree-id321 . -648) (undo-tree-id322 . -648) (undo-tree-id323 . -648) (undo-tree-id324 . -648) (undo-tree-id325 . -648) (undo-tree-id326 . -648) (undo-tree-id327 . -648) (undo-tree-id328 . -648) (undo-tree-id329 . -648) (undo-tree-id330 . -648) (undo-tree-id331 . -655) 35055 (t 26349 6590 866242 546000)) nil (26349 6628 868553 905000) 0 nil] [nil nil ((nil rear-nonsticky nil 27831 . 27832) (nil fontified nil 27135 . 27832) (27135 . 27832) 26405 (t 26349 6590 866242 546000)) ((#("
В спектре ЯМР \\textsuperscript{1}Н ацетиленового соединения {\\bfseries 3}
метильные протоны Н-11,11,11 проявились трехпротонным мультиплетом при
1.17-1.21 м.д. Метильные протоны Н-9,9,9,14,14,14,15,15,15
регистрировались трехпротонным синглетом при 1.38 м.д. Метиленовые
протоны Н-10,10 проявились двухпротонным мультиплетом при 2.51-2.54 м.д.
Ацетиленовый протон Н-19 регистрировался однопротонным синглетом при
2.58 м.д. Метиленовые протоны Н-17,17 проявились двухпротонным
мультиплетом при 4.91-4.92 м.д. Ароматические протоны Н-3 и Н-5
регистрировались однопротонными синглетами при 7.29 и 7.56 м.д.
соответственно. Гидроксильный протон Н-7 резонировал однопротонным
синглетом при 11.09 м.д.
" 0 15 (fontified nil) 15 31 (face font-lock-keyword-face fontified nil) 31 62 (fontified nil) 62 71 (face font-lock-keyword-face fontified nil) 71 73 (face (bold) fontified nil) 73 672 (fontified nil) 672 696 (fontified nil) 696 697 (fontified nil rear-nonsticky nil)) . 27135) (undo-tree-id240 . -697) (undo-tree-id241 . -697) (undo-tree-id242 . -697) (undo-tree-id243 . -697) (undo-tree-id244 . -697) (nil fontified t 27208 . 27807) (nil fontified t 27206 . 27208) (nil fontified t 27197 . 27206) (nil fontified t 27166 . 27197) (nil fontified t 27150 . 27166) (nil fontified t 27135 . 27150) (nil rear-nonsticky t 27831 . 27832)) (26349 6606 918930 530000) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified t)) . -34552) (undo-tree-id333 . -2) 34554 (34551 . 34554) (t 26349 6628 905197 125000) 34531) nil (26349 6640 944701 188000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 34551 . 34552) (#("
" 0 1 (fontified nil)) . -35206) (34551 . 35207) 34531) nil (26349 6640 944697 765000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 34552) (undo-tree-id332 . -1)) nil (26349 6640 944693 606000) 0 nil])
([nil nil ((#("Таким образом, взаимодействием азида никотиновой кислоты со спиртами
(изопропиловый и бутиловый спирты) и вторичным амином (алкалоидом
цитизин) синтезированы и охарактеризованы новые уретаны и мочевина,
строение которых подтверждены данными ЯМР \\textsuperscript{1}Н- и
\\textsuperscript{13}С-спектроскопии, а также анализом двумерных спектров
COSY (\\textsuperscript{1}H-\\textsuperscript{1}H) и HMQC
(\\textsuperscript{1}H-\\textsuperscript{13}C).

" 0 245 (fontified t) 245 261 (face font-lock-keyword-face fontified t) 261 269 (fontified t) 269 285 (face font-lock-keyword-face fontified t) 285 348 (fontified t) 348 364 (face font-lock-keyword-face fontified t) 364 369 (fontified t) 369 385 (face font-lock-keyword-face fontified t) 385 399 (fontified t) 399 415 (face font-lock-keyword-face fontified t) 415 420 (fontified t) 420 436 (face font-lock-keyword-face fontified t) 436 445 (fontified t)) . 39436) (undo-tree-id336 . -444) (undo-tree-id337 . -444) (undo-tree-id338 . -444) (undo-tree-id339 . -444) 39880 (t 26349 6640 971529 958000)) nil (26349 6675 936288 893000) 0 nil])
([nil nil ((38763 . 38764) 38700) nil (26349 6675 936284 565000) 0 nil])
([nil nil ((nil rear-nonsticky nil 38764 . 38765) (#("
" 0 1 (fontified nil)) . -39209) (38764 . 39210)) nil (26349 6675 936283 54000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . 39209) (undo-tree-id334 . 1) (undo-tree-id335 . -1)) nil (26349 6675 936278 967000) 0 nil])
nil
