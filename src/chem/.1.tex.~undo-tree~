(undo-tree-save-format-version . 1)
"ee3c3481dc663ed0bc79c3efc089a38f75e96453"
[nil nil nil nil (26344 3366 307139 659000) 0 nil]
([nil nil ((39213 . 39214) (t 26341 24242 630996 824000)) nil (26344 3366 307134 755000) 0 nil])
([nil nil ((13 . 31) (#("b" 0 1 (face font-lock-keyword-face fontified t)) . -13) (undo-tree-id65 . -1) (#("l" 0 1 (face font-lock-keyword-face fontified t)) . -14) (undo-tree-id66 . -1) 15 (1 . 15) (1 . 2) (t 26344 3366 405997 318000)) nil (26348 952 629819 911000) 0 nil])
([nil nil ((nil rear-nonsticky nil 60 . 61) (#("
" 0 1 (fontified nil)) . -89) (60 . 90) 59) nil (26348 952 629814 790000) 0 nil])
([nil nil ((90 . 92) (89 . 90) (#("и" 0 1 (face font-lock-function-name-face fontified t)) . -89) (undo-tree-id58 . -1) 90 (74 . 90) (#("м" 0 1 (face font-lock-function-name-face fontified t)) . -74) (undo-tree-id59 . -1) 75 (72 . 75) (#("м" 0 1 (face font-lock-function-name-face fontified t)) . -72) (undo-tree-id60 . -1) 73 (67 . 73) (#("й" 0 1 (face font-lock-function-name-face fontified t)) . -67) (undo-tree-id61 . -1) 68 (67 . 68) (61 . 67) (#("у" 0 1 (face font-lock-function-name-face fontified t)) . -61) (undo-tree-id62 . -1) 62 (59 . 62) (38 . 59) (#("Химическая технология" 0 21 (face font-lock-function-name-face fontified t)) . 38) (undo-tree-id63 . -20) (undo-tree-id64 . -5) 43) nil (26348 952 629812 198000) 0 nil])
([nil nil ((33 . 37) (#("part" 0 4 (face font-lock-keyword-face fontified t)) . 33) (undo-tree-id40 . -3) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -4) (undo-tree-id57 . -4)) nil (26352 64354 654506 318000) 0 nil])
([nil nil ((95 . 102) (#("part" 0 4 (face font-lock-keyword-face fontified t)) . 95)) ((95 . 99) (#("chapter" 0 7 (face font-lock-keyword-face fontified t)) . 95)) (26352 64357 418602 435000) 0 nil])
([nil nil ((#("\\large\\bfseries " 0 1 (face font-lock-keyword-face fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (face font-lock-keyword-face fontified t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (face font-lock-keyword-face fontified t) 11 12 (face font-lock-keyword-face fontified t) 12 13 (face font-lock-keyword-face fontified t) 13 14 (face font-lock-keyword-face fontified t) 14 15 (face font-lock-keyword-face fontified t) 15 16 (face (bold) fontified t)) . 3834) (undo-tree-id570 . -15) (undo-tree-id571 . -15) (undo-tree-id572 . -15) (undo-tree-id573 . -15) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (t 26352 64359 448261 505000)) nil (26352 64395 133649 423000) 0 nil] [nil nil ((#("\\textsuperscript{1,4}" 0 16 (face (font-lock-keyword-face bold) fontified t) 16 21 (face (bold) fontified t)) . 476) (undo-tree-id68 . -20) (undo-tree-id70 . -21) (t 26348 970 24769 262000)) ((476 . 497)) (26352 64352 203072 406000) 0 nil] [nil nil ((125 . 126) (t 26348 952 695277 564000) 101) ((#("
" 0 1 (fontified t)) . 125) (t 26348 955 721855 461000)) (26348 955 687366 308000) 0 nil])
([nil nil ((3845 . 3848) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3845) (undo-tree-id568 . -1) (3838 . 3846) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3838) (undo-tree-id569 . -1) (3833 . 3839)) nil (26352 64395 133643 929000) 0 nil])
([nil nil ((nil rear-nonsticky nil 479 . 480) (nil fontified nil 459 . 480) (459 . 480)) ((#("\\textsuperscript{1,4}" 0 16 (face (font-lock-keyword-face bold) fontified nil) 16 20 (face (bold) fontified nil) 20 21 (rear-nonsticky nil face (bold) fontified nil)) . 459) (nil rear-nonsticky nil 479 . 480)) (26352 64351 483015 362000) 0 nil])
nil
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133641 102000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 151) (t 26348 2680 990880 305000)) ((151 . 152)) (26352 64351 114346 964000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133640 337000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 126) (undo-tree-id92 . -1)) ((126 . 127)) (26352 64350 923018 698000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133639 638000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 126) (undo-tree-id90 . -1)) ((126 . 127)) (26352 64350 571023 728000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133638 844000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 126) (undo-tree-id88 . -1)) ((126 . 127)) (26352 64350 394982 383000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133638 2000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 126) (undo-tree-id86 . -1)) ((126 . 127)) (26352 64350 155024 291000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 7343)) nil (26352 64395 133637 161000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 126) (undo-tree-id84 . -1)) ((126 . 127)) (26352 64349 994567 933000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133636 487000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 126) (undo-tree-id82 . -1)) ((126 . 127)) (26352 64349 866952 914000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133635 756000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 126) (undo-tree-id80 . -1)) ((126 . 127)) (26352 64349 690773 262000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133635 14000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 126) (undo-tree-id78 . -1)) ((126 . 127)) (26352 64349 387024 544000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133634 321000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 126) (undo-tree-id76 . -1)) ((126 . 127)) (26352 64348 731096 759000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133633 682000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 126) (undo-tree-id74 . -1)) ((126 . 127)) (26352 64347 418700 208000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133632 777000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 126) (undo-tree-id72 . -1)) ((126 . 127)) (26352 64346 923177 578000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133631 896000) 0 nil])
([nil nil ((125 . 126) 94) ((#("
" 0 1 (fontified t)) . 125)) (26352 64346 410693 515000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 7343)) nil (26352 64395 133631 77000) 0 nil])
([nil nil ((332 . 337) (t 26348 2709 136712 648000)) ((#("\\smal" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t)) . 332)) (26352 64345 610810 587000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7343)) nil (26352 64395 133630 357000) 0 nil])
([nil nil ((593 . 601)) ((#("{\\small " 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 593)) (26352 64345 130569 272000) 0 nil])
([nil nil ((7354 . 7359) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -7354) (undo-tree-id563 . -1) (7349 . 7355) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -7349) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) 7350 (7347 . 7350) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -7347) (undo-tree-id567 . -1) (7343 . 7348)) nil (26352 64395 133629 3000) 0 nil])
([nil nil ((976 . 977)) (("}" . 976)) (26352 64344 587337 782000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 7358)) nil (26352 64395 133622 341000) 0 nil])
([nil nil ((3838 . 3842) (#("large" 0 5 (face font-lock-keyword-face fontified t)) . 3838) (t 26348 5361 123649 100000)) ((3838 . 3843) (#("smal" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t)) . 3838)) (26352 64344 155244 627000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 686) (undo-tree-id152 . -1) (t 26348 5263 226440 542000)) ((686 . 687)) (26348 5360 83166 24000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 931) (undo-tree-id127 . -1) (t 26348 4874 684171 164000)) ((931 . 932)) (26348 5252 902144 356000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 7341) (undo-tree-id562 . -1)) nil (26352 64395 133621 345000) 0 nil])
([nil nil ((3907 . 3912)) ((#("\\smal" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t)) . 3907)) (26352 64343 578856 722000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 769) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1)) ((769 . 770)) (26348 5359 779752 856000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 855) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1)) ((855 . 856)) (26348 5252 390747 422000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 7326) (undo-tree-id558 . -14) (undo-tree-id559 . -15) (undo-tree-id560 . -15) (undo-tree-id561 . -15)) nil (26352 64395 133743 490000) 0 nil])
([nil nil ((4037 . 4039) (#(" " 0 1 (fontified t)) . -4037) 4038 (4032 . 4038) (4031 . 4032)) ((#("{" 0 1 (fontified nil)) . 4031) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (#("\\smal " 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil) 5 6 (fontified nil)) . 4032) (undo-tree-id512 . -5) (undo-tree-id513 . -5) (undo-tree-id514 . -5) (undo-tree-id515 . -5) (undo-tree-id516 . -5) (undo-tree-id517 . -5) (undo-tree-id518 . -5) (undo-tree-id519 . -5) (undo-tree-id520 . -5) (undo-tree-id521 . -5) (undo-tree-id522 . -5) (undo-tree-id523 . -5) (undo-tree-id524 . -5) (undo-tree-id525 . -5) (undo-tree-id526 . -5) (undo-tree-id527 . -5) (undo-tree-id528 . -5) (undo-tree-id529 . -5) (undo-tree-id530 . -5) (undo-tree-id531 . -5) (undo-tree-id532 . -5) (undo-tree-id533 . -5) (undo-tree-id534 . -5) (4037 . 4038) (#("l " 0 1 (face font-lock-keyword-face fontified t) 1 2 (fontified t)) . 4037) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1)) (26352 64342 891200 149000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 853) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1)) ((853 . 854)) (26348 5359 587296 717000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 770) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1)) ((770 . 771)) (26348 5252 54724 195000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7394 . 7395) (#("
" 0 1 (fontified nil)) . -7409) (7394 . 7410)) nil (26352 64400 356628 680000) 0 nil] [nil nil ((nil rear-nonsticky nil 7440 . 7441) (#("
" 0 1 (fontified nil)) . -7455) (7440 . 7456) 7395) ((#("
\\begin{center}
" 0 1 (face (bold) rear-nonsticky nil fontified nil) 1 7 (face (font-lock-keyword-face bold) fontified nil) 7 8 (face (bold) fontified nil latex-env-pair t) 8 14 (face (font-lock-function-name-face bold) fontified nil latex-env-pair t) 14 15 (face (bold) fontified nil latex-env-pair t) 15 16 (fontified nil)) . 7440) (undo-tree-id576 . -1) (undo-tree-id577 . -15) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (7455 . 7456) (nil rear-nonsticky t 7440 . 7441)) (26352 64395 133603 647000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4038) (undo-tree-id154 . -1)) ((4038 . 4039)) (26352 64342 107003 809000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 928)) ((928 . 929) (t 26348 5349 640643 261000)) (26348 5349 581538 54000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 686)) ((686 . 687)) (26348 5251 686533 50000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 3818) (undo-tree-id582 . -14) (undo-tree-id583 . -15) (undo-tree-id584 . -15) (undo-tree-id585 . -15) (undo-tree-id586 . -15) (undo-tree-id587 . -15) (undo-tree-id588 . -15) (undo-tree-id589 . -15) (undo-tree-id590 . -15) (undo-tree-id591 . -15) (undo-tree-id592 . -15) (undo-tree-id593 . -15) (undo-tree-id594 . -15) (undo-tree-id595 . -15)) nil (26352 64400 356625 691000) 0 nil])
nil
([nil nil ((4570 . 4571)) ((#("}" 0 1 (fontified t)) . 4570)) (26352 64340 170861 268000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 592) (undo-tree-id93 . -1) (undo-tree-id95 . -1) (undo-tree-id97 . -1) (undo-tree-id99 . -1) (undo-tree-id101 . -1) (undo-tree-id103 . -1)) ((592 . 593)) (26348 5251 446677 262000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3887 . 3888) (#("
" 0 1 (fontified nil)) . -3902) (3887 . 3903)) nil (26352 64400 356584 974000) 0 nil])
([nil nil ((3820 . 3821) (t 26348 5794 544638 58000) 3820) ((#("
" 0 1 (fontified t)) . 3820) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1)) (26352 64339 243117 691000) 0 nil])
([nil nil ((591 . 592) (t 26348 5228 837420 760000) 481) ((#("
" 0 1 (fontified t)) . 591) (undo-tree-id128 . -1) (t 26348 5237 303846 118000)) (26348 5237 269557 706000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (face font-lock-keyword-face fontified t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 126) (undo-tree-id598 . -10) (undo-tree-id599 . -11) (t 26352 64400 403679 945000)) nil (26352 64445 511304 326000) 0 nil])
([nil nil ((3821 . 3830)) ((#("\\pagebeak" 0 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (face font-lock-keyword-face fontified t)) . 3821) (undo-tree-id380 . -8) (undo-tree-id381 . -6) (undo-tree-id382 . -6) (undo-tree-id383 . -6) (undo-tree-id384 . -5) (undo-tree-id385 . -5) (undo-tree-id386 . -5) (undo-tree-id387 . -5) (undo-tree-id388 . -5) (undo-tree-id389 . -5) (undo-tree-id390 . -5) (undo-tree-id391 . -5) (undo-tree-id392 . -5) (undo-tree-id393 . -5) (undo-tree-id394 . -5) (undo-tree-id395 . -9) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) (undo-tree-id402 . -8) (undo-tree-id403 . -8) (undo-tree-id404 . -8) (undo-tree-id405 . -8) (undo-tree-id406 . -8) (undo-tree-id407 . -8) (undo-tree-id408 . -8) (undo-tree-id409 . -8) (undo-tree-id410 . -8) (undo-tree-id411 . -8) (undo-tree-id412 . -8) (undo-tree-id413 . -8) (undo-tree-id414 . -8) (undo-tree-id415 . -8) (undo-tree-id416 . -8) (undo-tree-id417 . -5) (undo-tree-id418 . -8)) (26352 64338 362997 316000) 0 nil])
nil
([nil nil ((#("}" 0 1 (fontified t)) . 140) (undo-tree-id596 . -1) (undo-tree-id597 . -1)) nil (26352 64445 511298 610000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . -3827) (#("a" 0 1 (face font-lock-keyword-face fontified t)) . -3828) (#("k" 0 1 (face font-lock-keyword-face fontified t)) . -3829) 3830) ((3827 . 3830)) (26352 64338 202768 83000) 0 nil])
([nil nil ((6245 . 6246) (t 26352 64445 542304 277000)) nil (26352 64462 445560 14000) 0 nil])
([nil nil ((3827 . 3831)) ((#("reak" 0 3 (face font-lock-warning-face fontified t) 3 4 (face font-lock-warning-face fontified t)) . 3827) (undo-tree-id378 . -3) (undo-tree-id379 . -3)) (26352 64338 26982 606000) 0 nil])
([nil current ((6247 . 6248)) nil (26352 64462 445555 894000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id208 . -1) (t 26348 5816 410689 829000)) ((3849 . 3850)) (26352 64337 834964 230000) 0 nil] [nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 3919) (t 26348 5816 410689 829000)) ((3919 . 3920)) (26348 6079 888262 832000) 0 nil])
nil
([nil nil ((#("m" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id206 . -1)) ((3849 . 3850)) (26352 64336 474876 200000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6079 696195 543000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id204 . -1)) ((3849 . 3850)) (26352 64336 363403 445000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6079 391644 761000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id202 . -1)) ((3849 . 3850)) (26352 64336 219293 933000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6079 7955 684000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 3849) (undo-tree-id200 . -1)) ((3849 . 3850)) (26352 64336 74777 531000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6078 656260 155000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id198 . -1)) ((3849 . 3850)) (26352 64335 946695 379000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6078 416297 423000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id196 . -1)) ((3849 . 3850)) (26352 64335 802678 439000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6078 111956 611000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id194 . -1)) ((3849 . 3850)) (26352 64335 689268 650000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6077 840274 11000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id192 . -1)) ((3849 . 3850)) (26352 64335 499052 478000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6077 551666 836000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id190 . -1)) ((3849 . 3850)) (26352 64335 229461 628000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-keyword-face fontified nil)) . 3919)) ((3919 . 3920)) (26348 6077 168283 831000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id188 . -1)) ((3849 . 3850)) (26352 64335 83056 12000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 3919)) ((3919 . 3920)) (26348 6076 768002 563000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 3849) (undo-tree-id186 . -1)) ((3849 . 3850)) (26352 64334 497031 335000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 3919)) ((3919 . 3920)) (26348 6076 268210 328000) 0 nil])
([nil nil ((3860 . 3863) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3860) (undo-tree-id179 . -1) (undo-tree-id181 . -1) (undo-tree-id183 . -1) (3853 . 3861) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3853) (3850 . 3854)) ((#("ecti" 0 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 3850) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) (undo-tree-id338 . -3) (undo-tree-id339 . -3) (3853 . 3854) (#("ionheadi" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (face font-lock-keyword-face fontified nil)) . 3853) (undo-tree-id340 . -7) (undo-tree-id341 . -7) (undo-tree-id342 . -7) (undo-tree-id343 . -7) (undo-tree-id344 . -7) (undo-tree-id345 . -7) (undo-tree-id346 . -7) (undo-tree-id347 . -7) (undo-tree-id348 . -7) (undo-tree-id349 . -7) (undo-tree-id350 . -7) (undo-tree-id351 . -7) (undo-tree-id352 . -7) (undo-tree-id353 . -7) (undo-tree-id354 . -7) (undo-tree-id355 . -7) (undo-tree-id356 . -7) (undo-tree-id357 . -7) (undo-tree-id358 . -7) (3860 . 3861) (#("ing" 0 3 (face font-lock-keyword-face fontified t)) . 3860) (undo-tree-id359 . -3) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -3) (undo-tree-id367 . -3) (undo-tree-id368 . -3) (undo-tree-id369 . -3) (undo-tree-id370 . -2) (undo-tree-id371 . -2) (undo-tree-id372 . -2) (undo-tree-id373 . -2) (undo-tree-id374 . -2) (undo-tree-id375 . -3) (undo-tree-id376 . -2) (undo-tree-id377 . -2)) (26352 64334 347510 939000) 0 nil])
([nil nil ((3930 . 3933) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3930) (undo-tree-id160 . -1) (3923 . 3931) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3923) (undo-tree-id161 . -1) (3920 . 3924)) ((#("ecti" 0 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 3920) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -4) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (3923 . 3924) (#("ionheadi" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (face font-lock-keyword-face fontified nil)) . 3923) (undo-tree-id168 . -3) (undo-tree-id169 . -7) (undo-tree-id170 . -3) (undo-tree-id171 . -8) (undo-tree-id172 . -7) (undo-tree-id173 . -7) (3930 . 3931) (#("ing" 0 3 (face font-lock-keyword-face fontified t)) . 3930) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2)) (26348 6076 268072 159000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 3847) (undo-tree-id210 . -1) (undo-tree-id212 . -1) (undo-tree-id214 . -1) (t 26348 6086 86433 333000)) ((3847 . 3848)) (26352 64334 219355 469000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3862 . 3863) (nil fontified nil 3862 . 3863) (3862 . 3863) 3861) ((#("{" 0 1 (rear-nonsticky nil fontified nil)) . 3862) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (nil rear-nonsticky nil 3862 . 3863)) (26352 64334 75076 106000) 0 nil] [nil nil ((nil rear-nonsticky nil 3863 . 3864) (nil fontified nil 3863 . 3864) (3863 . 3864) 3862) ((#("{" 0 1 (rear-nonsticky nil fontified nil)) . 3863) (nil rear-nonsticky t 3863 . 3864)) (26348 6184 913506 971000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3863) (undo-tree-id217 . -1) (undo-tree-id219 . -1) (undo-tree-id221 . -1) (t 26348 6185 946953 315000)) ((3863 . 3864)) (26352 64333 963656 536000) 0 nil])
nil
([nil nil ((#("\\pagebreak
" 0 10 (face font-lock-warning-face fontified t) 10 11 (fontified t)) . 3821) (undo-tree-id224 . -9) (undo-tree-id226 . -9) (undo-tree-id228 . -9) (undo-tree-id230 . -9) (undo-tree-id232 . -9) (undo-tree-id234 . -9) (undo-tree-id236 . -9) (undo-tree-id238 . -9) (undo-tree-id240 . -9) (undo-tree-id242 . -9) (undo-tree-id244 . -9) (undo-tree-id246 . -9) (undo-tree-id248 . -9) (undo-tree-id250 . -9) (undo-tree-id252 . -9) (undo-tree-id254 . -9) (undo-tree-id256 . -9) (undo-tree-id258 . -11) 3830 (t 26348 6186 940258 657000)) ((3821 . 3832)) (26352 64333 803078 141000) 0 nil])
([nil nil ((#("\\large\\bfseries " 0 6 (face font-lock-keyword-face fontified t) 6 15 (face font-lock-keyword-face fontified t) 15 16 (face (bold) fontified t)) . 7358) (t 26348 6197 573292 340000)) ((7358 . 7374)) (26352 64333 355200 585000) 0 nil])
([nil nil ((7369 . 7372) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -7369) (7362 . 7370) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -7362) (7357 . 7363)) ((#("\\secti" 0 5 (face font-lock-keyword-face fontified nil) 5 6 (face font-lock-keyword-face fontified nil)) . 7357) (7362 . 7363) (#("ionheadi" 0 7 (face font-lock-keyword-face fontified nil) 7 8 (face font-lock-keyword-face fontified nil)) . 7362) (7369 . 7370) (#("ing" 0 3 (face font-lock-keyword-face fontified t)) . 7369)) (26352 64333 210893 781000) 0 nil])
([nil nil ((7427 . 7432)) ((#("\\smal" 0 5 (face font-lock-keyword-face fontified t)) . 7427)) (26352 64333 83016 439000) 0 nil])
([nil nil ((7553 . 7561)) ((#("{\\small " 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 7553) (undo-tree-id300 . -7) (undo-tree-id301 . -7) (undo-tree-id302 . -7) (undo-tree-id303 . -7) (undo-tree-id304 . -7) (undo-tree-id305 . -7) (undo-tree-id306 . -7) (undo-tree-id307 . -7)) (26352 64332 955258 350000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7560)) ((7560 . 7561)) (26352 64332 827512 277000) 0 nil])
([nil nil ((8072 . 8073)) ((#("}" 0 1 (fontified t)) . 8072) (undo-tree-id299 . -1)) (26352 64332 699439 475000) 0 nil])
([nil nil ((129 . 134) (#("m" 0 1 (face font-lock-keyword-face fontified t)) . -129) (undo-tree-id263 . -1) (undo-tree-id265 . -1) (undo-tree-id267 . -1) (undo-tree-id269 . -1) (undo-tree-id271 . -1) (undo-tree-id273 . -1) (undo-tree-id275 . -1) (undo-tree-id277 . -1) (undo-tree-id279 . -1) (undo-tree-id281 . -1) (undo-tree-id283 . -1) (undo-tree-id285 . -1) (undo-tree-id287 . -1) (undo-tree-id289 . -1) (undo-tree-id291 . -1) (undo-tree-id293 . -1) (undo-tree-id295 . -1) (undo-tree-id297 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -130) (undo-tree-id300 . -1) (undo-tree-id302 . -1) (undo-tree-id304 . -1) (undo-tree-id306 . -1) (undo-tree-id308 . -1) (undo-tree-id310 . -1) (undo-tree-id312 . -1) (undo-tree-id314 . -1) (undo-tree-id316 . -1) (undo-tree-id318 . -1) (undo-tree-id320 . -1) (undo-tree-id322 . -1) (undo-tree-id324 . -1) (undo-tree-id326 . -1) (undo-tree-id328 . -1) (undo-tree-id330 . -1) (#("a" 0 1 (face font-lock-keyword-face fontified t)) . -131) (undo-tree-id332 . -1) (undo-tree-id334 . -1) (undo-tree-id336 . -1) (undo-tree-id338 . -1) (undo-tree-id340 . -1) (undo-tree-id342 . -1) (undo-tree-id344 . -1) (undo-tree-id346 . -1) 132 (127 . 132) (t 26348 6261 514823 374000)) ((#("{\\msa" 0 1 (fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 127) (129 . 132) (#("smal " 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . 129)) (26352 64332 587182 317000) 0 nil])
([nil nil ((148 . 149)) ((#("}" 0 1 (fontified t)) . 148)) (26352 64332 465521 854000) 0 nil])
([nil nil ((#("\\let\\cleardoublepage\\clearpage
" 0 4 (face font-lock-keyword-face fontified t) 4 20 (face font-lock-warning-face fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t)) . 1) (undo-tree-id349 . -21) (undo-tree-id351 . -21) (undo-tree-id353 . -21) (undo-tree-id355 . -21) (undo-tree-id357 . -21) (undo-tree-id359 . -21) (undo-tree-id361 . -21) (undo-tree-id363 . -21) (undo-tree-id365 . -21) (undo-tree-id367 . -21) (undo-tree-id369 . -21) (undo-tree-id371 . -21) (undo-tree-id373 . -21) (undo-tree-id375 . -21) (undo-tree-id377 . -21) (undo-tree-id379 . -21) (undo-tree-id381 . -21) (undo-tree-id383 . -21) (undo-tree-id385 . -21) (undo-tree-id387 . -21) (undo-tree-id389 . -21) (undo-tree-id391 . -21) (undo-tree-id393 . -21) (undo-tree-id395 . -21) (undo-tree-id397 . -21) (undo-tree-id399 . -21) (undo-tree-id401 . -21) (undo-tree-id403 . -21) (undo-tree-id405 . -21) (undo-tree-id407 . -21) (undo-tree-id409 . -21) (undo-tree-id411 . -21) (undo-tree-id413 . -21) (undo-tree-id415 . -21) (undo-tree-id417 . -21) (undo-tree-id419 . -21) (undo-tree-id421 . -21) (undo-tree-id423 . -21) (undo-tree-id425 . -21) (undo-tree-id427 . -21) (undo-tree-id429 . -21) (undo-tree-id431 . -31) 22 (t 26348 6347 262405 529000)) ((1 . 32)) (26352 64332 315545 364000) 0 nil])
([nil nil ((nil rear-nonsticky nil 62 . 63) (#("
" 0 1 (fontified nil)) . -93) (62 . 94) 22) ((#("
\\let\\cleardoublepage\\clearpage
" 0 1 (rear-nonsticky nil fontified nil) 1 5 (face font-lock-keyword-face fontified nil) 5 21 (face font-lock-warning-face fontified nil) 21 31 (face font-lock-keyword-face fontified nil) 31 32 (fontified nil)) . 62) (93 . 94) (nil rear-nonsticky nil 62 . 63)) (26352 64332 171578 924000) 0 nil])
([nil nil ((6281 . 6282)) ((#(" " 0 1 (fontified t)) . 6281)) (26352 64332 43562 425000) 0 nil] [nil nil ((9813 . 9814)) ((#(" " 0 1 (fontified t)) . 9813)) (26348 8272 516266 651000) 0 nil] [nil nil ((9791 . 9792) (t 26348 6647 120609 95000) 9740) ((#("
" 0 1 (fontified t)) . 9791) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (t 26348 7207 201482 866000)) (26348 7207 144683 738000) 0 nil])
([nil nil ((6283 . 6284)) ((" " . 6283)) (26352 64331 915506 237000) 0 nil])
([nil nil ((9815 . 9816)) ((#(" " 0 1 (fontified t)) . 9815) (t 26348 7222 941038 842000)) (26348 7222 908751 333000) 0 nil])
nil
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 23729) (undo-tree-id479 . -7) 23736 (t 26348 8307 970050 570000)) ((23729 . 23745)) (26352 64331 755205 759000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 23885)) ((23885 . 23886)) (26352 64331 610917 87000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 20 (fontified t) 20 21 (fontified t)) . 23885)) ((23885 . 23906)) (26352 64331 423312 925000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=\\textwidth]{assets/2}
	\\caption*{Рис.1 - ИК спектр азида никотиновой кислоты (2) (КBr)}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 54 (fontified t) 54 64 (face font-lock-keyword-face fontified t) 64 66 (fontified t) 66 74 (face font-lock-builtin-face fontified t) 74 77 (fontified t) 77 86 (face font-lock-keyword-face fontified t) 86 142 (fontified t) 142 146 (face font-lock-keyword-face fontified t) 146 147 (fontified t latex-env-pair t) 147 153 (face font-lock-function-name-face fontified t latex-env-pair t) 153 154 (fontified t latex-env-pair t) 154 155 (fontified t)) . 23730) (undo-tree-id475 . -142)) ((23730 . 23885)) (26352 64331 195755 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22277 . 22278) (#("
" 0 1 (fontified nil)) . -22432) (22277 . 22433) 22265) ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=\\textwidth]{assets/2}
	\\caption*{Рис.1 - ИК спектр азида никотиновой кислоты (2) (КBr)}
\\end{figure}
" 0 1 (rear-nonsticky nil fontified nil) 1 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil latex-env-pair t) 8 14 (face font-lock-function-name-face fontified nil latex-env-pair t) 14 15 (fontified nil latex-env-pair t) 15 19 (fontified nil) 19 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 55 (fontified t) 55 65 (face font-lock-keyword-face fontified t) 65 67 (fontified t) 67 75 (face font-lock-builtin-face fontified t) 75 78 (fontified t) 78 87 (face font-lock-keyword-face fontified t) 87 143 (fontified t) 143 147 (face font-lock-keyword-face fontified nil) 147 148 (fontified nil latex-env-pair t) 148 154 (face font-lock-function-name-face fontified nil latex-env-pair t) 154 155 (fontified nil latex-env-pair t) 155 156 (fontified nil)) . 22277) (22432 . 22433) (nil rear-nonsticky t 22277 . 22278)) (26352 64330 427038 194000) 0 nil])
([nil nil ((22277 . 22278) 22265) ((#("
" 0 1 (fontified t)) . 22277) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1)) (26352 64330 267530 937000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 22278) (undo-tree-id453 . -1) (undo-tree-id455 . -1) (undo-tree-id457 . -1) (undo-tree-id459 . -1) (undo-tree-id461 . -1) (undo-tree-id463 . -1) (undo-tree-id465 . -1) (undo-tree-id467 . -1) (undo-tree-id469 . -1) (undo-tree-id471 . -1) (undo-tree-id473 . -1)) ((22278 . 22279)) (26352 64330 106965 970000) 0 nil])
([nil nil ((#("В спектре ЯМР \\textsuperscript{13}С соединения {\\bfseries 5} сигналы
углеродных атомов пиридинового фрагмента проявились при 122.00 (С-4),
124.80 (С-3), 137.85 (С-6), 139.00 (С-2) и 146.20 (С-5) м.д.

В спектре ЯМР \\textsuperscript{1}Н ацетиленового соединения {\\bfseries 3}
метильные протоны Н-11,11,11 проявились трехпротонным мультиплетом при
1.17-1.21 м.д. Метильные протоны Н-9,9,9,14,14,14,15,15,15
регистрировались трехпротонным синглетом при 1.38 м.д. Метиленовые
протоны Н-10,10 проявились двухпротонным мультиплетом при 2.51-2.54 м.д.
Ацетиленовый протон Н-19 регистрировался однопротонным синглетом при
2.58 м.д. Метиленовые протоны Н-17,17 проявились двухпротонным
мультиплетом при 4.91-4.92 м.д. Ароматические протоны Н-3 и Н-5
регистрировались однопротонными синглетами при 7.29 и 7.56 м.д.
соответственно. Гидроксильный протон Н-7 резонировал однопротонным
синглетом при 11.09 м.д.

" 0 14 (fontified t) 14 30 (face font-lock-keyword-face fontified t) 30 48 (fontified t) 48 57 (face font-lock-keyword-face fontified t) 57 59 (face (bold) fontified t) 59 215 (fontified t) 215 231 (face font-lock-keyword-face fontified t) 231 262 (fontified t) 262 271 (face font-lock-keyword-face fontified t) 271 273 (face (bold) fontified t) 273 642 (fontified t) 642 677 (fontified t) 677 898 (fontified t)) . 26191) (undo-tree-id570 . -897) (undo-tree-id572 . -897) 27088 (t 26348 63723 497403 834000)) ((26191 . 27089)) (26352 64329 883213 896000) 0 nil] [nil nil ((#("
Строение выделенных продуктов {\\bfseries 3} и {\\bfseries 5} было доказано
методами ЯМР\\textsuperscript{1}Н-, \\textsuperscript{13}С- спектроскопии.
Так, в спектре ЯМР \\textsuperscript{1}Н соединения {\\bfseries 5}
пиридиновые протоны Н-3, Н-4 и Н-2 проявились однопротонными
мультиплетами при 7.44-7.46, 7.70-7.72 и 8.44-8.46 м.д. Пиридиновый
протон Н-6 регистрировался однопротонным синглетом при 8.71 м.д. Аминные
протоны Н-7,7 проявились двухпротонным синглетом при 6.30 м.д.
" 0 32 (fontified t) 32 41 (face font-lock-keyword-face fontified t) 41 43 (face (bold) fontified t) 43 48 (fontified t) 48 57 (face font-lock-keyword-face fontified t) 57 59 (face (bold) fontified t) 59 87 (fontified t) 87 103 (face font-lock-keyword-face fontified t) 103 110 (fontified t) 110 126 (face font-lock-keyword-face fontified t) 126 167 (fontified t) 167 183 (face font-lock-keyword-face fontified t) 183 200 (fontified t) 200 209 (face font-lock-keyword-face fontified t) 209 211 (face (bold) fontified t) 211 347 (fontified t) 347 415 (fontified t) 415 478 (fontified t)) . 25582) (undo-tree-id482 . -477) (undo-tree-id483 . -415) (undo-tree-id484 . -415) (undo-tree-id485 . -415) 25997 (t 26348 63605 854389 995000)) ((25582 . 26060)) (26348 63653 534235 992000) 0 nil])
([nil nil ((26059 . 26060) 25997) ((#("
" 0 1 (fontified t)) . 26059) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1)) (26352 64329 659792 325000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -25713) (undo-tree-id481 . -2) 25715 (25712 . 25715) 25692) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 25712) (25713 . 25715)) (26348 63652 942460 472000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26060 . 26061) (#("
" 0 1 (fontified nil)) . -26958) (26060 . 26959)) ((#("
В спектре ЯМР \\textsuperscript{13}С соединения {\\bfseries 5} сигналы
углеродных атомов пиридинового фрагмента проявились при 122.00 (С-4),
124.80 (С-3), 137.85 (С-6), 139.00 (С-2) и 146.20 (С-5) м.д.

В спектре ЯМР \\textsuperscript{1}Н ацетиленового соединения {\\bfseries 3}
метильные протоны Н-11,11,11 проявились трехпротонным мультиплетом при
1.17-1.21 м.д. Метильные протоны Н-9,9,9,14,14,14,15,15,15
регистрировались трехпротонным синглетом при 1.38 м.д. Метиленовые
протоны Н-10,10 проявились двухпротонным мультиплетом при 2.51-2.54 м.д.
Ацетиленовый протон Н-19 регистрировался однопротонным синглетом при
2.58 м.д. Метиленовые протоны Н-17,17 проявились двухпротонным
мультиплетом при 4.91-4.92 м.д. Ароматические протоны Н-3 и Н-5
регистрировались однопротонными синглетами при 7.29 и 7.56 м.д.
соответственно. Гидроксильный протон Н-7 резонировал однопротонным
синглетом при 11.09 м.д.

" 0 1 (fontified nil rear-nonsticky nil) 1 15 (fontified nil) 15 31 (fontified nil face font-lock-keyword-face) 31 49 (fontified nil) 49 58 (fontified nil face font-lock-keyword-face) 58 60 (fontified nil face (bold)) 60 70 (fontified nil) 201 216 (fontified t) 216 232 (face font-lock-keyword-face fontified t) 232 263 (fontified t) 263 272 (face font-lock-keyword-face fontified t) 272 274 (face (bold) fontified t) 274 873 (fontified t) 873 898 (fontified t) 898 899 (fontified nil)) . 26060) (undo-tree-id244 . -201) (undo-tree-id245 . -898) (undo-tree-id246 . -873) (undo-tree-id247 . -898) (undo-tree-id248 . -898) (undo-tree-id249 . -898) (undo-tree-id250 . -898) (undo-tree-id251 . -898) (undo-tree-id252 . -898) (undo-tree-id253 . -898) (undo-tree-id254 . -898) (undo-tree-id255 . -898) (undo-tree-id256 . -898) (undo-tree-id257 . -898) (undo-tree-id258 . -898) (undo-tree-id259 . -898) (undo-tree-id260 . -898) (26958 . 26959) (nil rear-nonsticky nil 26060 . 26061)) (26352 64329 451678 834000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25712 . 25713) (#("
" 0 1 (fontified nil)) . -26190) (25712 . 26191) 25692) ((#("

Строение выделенных продуктов {\\bfseries 3} и {\\bfseries 5} было доказано
методами ЯМР\\textsuperscript{1}Н-, \\textsuperscript{13}С- спектроскопии.
Так, в спектре ЯМР \\textsuperscript{1}Н соединения {\\bfseries 5}
пиридиновые протоны Н-3, Н-4 и Н-2 проявились однопротонными
мультиплетами при 7.44-7.46, 7.70-7.72 и 8.44-8.46 м.д. Пиридиновый
протон Н-6 регистрировался однопротонным синглетом при 8.71 м.д. Аминные
протоны Н-7,7 проявились двухпротонным синглетом при 6.30 м.д.
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 33 (fontified t) 33 42 (face font-lock-keyword-face fontified t) 42 44 (face (bold) fontified t) 44 49 (fontified t) 49 58 (face font-lock-keyword-face fontified t) 58 60 (face (bold) fontified t) 60 75 (fontified t) 75 76 (fontified t) 76 88 (fontified t) 88 104 (face font-lock-keyword-face fontified t) 104 111 (fontified t) 111 127 (face font-lock-keyword-face fontified t) 127 168 (fontified t) 168 184 (face font-lock-keyword-face fontified t) 184 201 (fontified t) 201 210 (face font-lock-keyword-face fontified t) 210 212 (face (bold) fontified t) 212 348 (fontified t) 348 416 (fontified t) 416 478 (fontified nil) 478 479 (fontified nil)) . 25712) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (26190 . 26191) (nil rear-nonsticky t 25712 . 25713)) (26348 63652 446466 270000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 26958) (undo-tree-id553 . -1) (undo-tree-id555 . -1) (undo-tree-id557 . -1) (undo-tree-id559 . -1) (undo-tree-id561 . -1) (undo-tree-id563 . -1) (undo-tree-id565 . -1) (undo-tree-id567 . -1)) ((26958 . 26959)) (26352 64329 195586 582000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 25713)) ((25713 . 25714) (t 26348 63635 736795 413000)) (26348 63635 699467 208000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 30302) (t 26348 63745 880042 267000)) ((30302 . 30318)) (26352 64328 915448 483000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 30302)) ((30302 . 30303)) (26352 64328 715422 181000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 30395)) ((30395 . 30416)) (26352 64327 943716 258000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.4\\textwidth]{assets/6}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 77 (face font-lock-builtin-face fontified t) 77 79 (fontified t) 79 83 (face font-lock-keyword-face fontified t) 83 84 (fontified t latex-env-pair t) 84 90 (face font-lock-function-name-face fontified t latex-env-pair t) 90 91 (fontified t latex-env-pair t) 91 92 (fontified t)) . 30302) (undo-tree-id574 . -79)) ((30302 . 30394)) (26352 64327 914214 439000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29440 . 29441) (#("
" 0 1 (fontified nil)) . -29532) (29440 . 29533) 29428) ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.4\\textwidth]{assets/6}
\\end{figure}
" 0 1 (fontified nil rear-nonsticky nil) 1 7 (fontified nil face font-lock-keyword-face) 7 8 (fontified nil latex-env-pair t) 8 14 (fontified nil face font-lock-function-name-face latex-env-pair t) 14 15 (fontified nil latex-env-pair t) 15 19 (fontified nil) 20 30 (face font-lock-keyword-face) 32 48 (face font-lock-keyword-face) 58 68 (face font-lock-keyword-face) 70 78 (face font-lock-builtin-face) 80 84 (fontified nil face font-lock-keyword-face) 84 85 (fontified nil latex-env-pair t) 85 91 (fontified nil face font-lock-function-name-face latex-env-pair t) 91 92 (fontified nil latex-env-pair t) 92 93 (fontified nil)) . 29440) (29532 . 29533) (nil rear-nonsticky nil 29440 . 29441)) (26352 64327 883780 804000) 0 nil])
([nil nil ((52514 . 52515) (t 26348 63766 962721 41000)) (("}" . 52514)) (26352 64327 851757 970000) 0 nil])
([nil nil ((49553 . 49561)) (("{\\small " . 49553)) (26352 64327 821855 188000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 324) (undo-tree-id584 . -7) 331 (t 26348 63925 967785 237000)) ((324 . 339)) (26352 64327 791158 208000) 0 nil])
([nil nil ((nil rear-nonsticky nil 585 . 586) (#("
" 0 1 (fontified nil)) . -600) (585 . 601)) ((#("
\\begin{center}
" 0 1 (rear-nonsticky nil fontified nil) 1 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil latex-env-pair t) 8 14 (face font-lock-function-name-face fontified nil latex-env-pair t) 14 15 (fontified nil latex-env-pair t) 15 16 (fontified nil)) . 585) (undo-tree-id242 . -8) (undo-tree-id243 . -8) (600 . 601) (nil rear-nonsticky nil 585 . 586)) (26352 64327 760973 362000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64327 730636 121000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 324)) ((324 . 325)) (26352 64327 699400 597000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64327 499428 382000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64326 789714 560000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64326 762431 977000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64326 762265 100000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 324)) ((324 . 325)) (26352 64326 699862 413000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64326 669425 525000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64326 638961 718000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64326 609211 412000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64326 578934 459000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64326 379278 39000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64325 953364 748000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64325 923336 526000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 324)) ((324 . 325)) (26352 64325 892767 551000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 324) (undo-tree-id582 . -1)) ((324 . 325)) (26352 64325 862383 532000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 567) (undo-tree-id580 . -1)) ((567 . 568)) (26352 64325 831689 744000) 0 nil])
([nil nil ((328 . 339) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -328) (324 . 329) (323 . 324) 323) ((#("
" 0 1 (fontified t)) . 323) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (#("\\begi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 324) (undo-tree-id240 . -4) (328 . 329) (#("in{authors}" 0 2 (face font-lock-keyword-face fontified t) 2 3 (latex-env-pair t fontified t) 3 10 (face font-lock-function-name-face latex-env-pair t fontified t) 10 11 (latex-env-pair t fontified t)) . 328) (undo-tree-id241 . -11)) (26352 64325 801702 766000) 0 nil])
([nil nil ((583 . 584) 504) ((#("
" 0 1 (fontified t)) . 583) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1)) (26352 64325 771821 286000) 0 nil])
([nil nil ((584 . 597)) ((#("\\end{authors}" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 12 (face font-lock-function-name-face latex-env-pair t fontified t) 12 13 (latex-env-pair t fontified t)) . 584)) (26352 64325 741669 161000) 0 nil])
([nil nil ((616 . 618) (#("s" 0 1 (face font-lock-function-name-face fontified t latex-env-pair t)) . -616) 617 (614 . 617) (#("i" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t)) . -614) (611 . 615) (#("i" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t)) . -611) (609 . 612) (#("i" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t)) . -609) (609 . 610) (606 . 609) (#("center" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 606) (undo-tree-id880 . -6)) ((606 . 612) (#("aff" 0 3 (face font-lock-function-name-face fontified nil latex-env-pair t)) . 606) (#("i" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t)) . 609) (609 . 610) (#("ili" 0 2 (face font-lock-function-name-face fontified nil latex-env-pair t) 2 3 (face font-lock-function-name-face fontified nil latex-env-pair t)) . 609) (611 . 612) (#("iati" 0 3 (face font-lock-function-name-face fontified nil latex-env-pair t) 3 4 (face font-lock-function-name-face fontified nil latex-env-pair t)) . 611) (614 . 615) (#("ios" 0 2 (face font-lock-function-name-face fontified nil latex-env-pair t) 2 3 (face font-lock-function-name-face fontified nil latex-env-pair t)) . 614) (616 . 617) (#("ns" 0 2 (face font-lock-function-name-face fontified t latex-env-pair t)) . 616)) (26352 64325 711492 268000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 707) (t 26349 2257 705682 141000)) ((707 . 708)) (26349 2584 714648 505000) 0 nil])
([nil nil ((1020 . 1022) (#("s" 0 1 (fontified nil latex-env-pair t)) . -1020) 1021 (1010 . 1021) (#("center" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 1010) (undo-tree-id873 . -6)) ((1010 . 1016) (#("affiliatios" 0 10 (face font-lock-function-name-face fontified nil latex-env-pair t) 10 11 (fontified nil latex-env-pair t)) . 1010) (1020 . 1021) (#("ns" 0 2 (face font-lock-function-name-face fontified t latex-env-pair t)) . 1020)) (26352 64325 681166 139000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 790)) ((790 . 791)) (26349 2584 393917 554000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 1003) (undo-tree-id871 . -1)) ((1003 . 1004)) (26352 64325 651287 920000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 874)) ((874 . 875)) (26349 2584 89984 932000) 0 nil])
([nil nil ((#("{\\small " 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 620) (undo-tree-id869 . -8)) ((620 . 628)) (26352 64325 451506 669000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 949)) ((949 . 950)) (26349 2583 801998 573000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 705) (t 26349 2597 985477 886000)) ((705 . 706)) (26352 64325 19182 292000) 0 nil])
([nil nil ((706 . 709)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 706)) (26349 2583 610189 92000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 788)) ((788 . 789)) (26352 64324 988283 275000) 0 nil])
([nil nil ((792 . 795)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 792)) (26349 2583 418272 449000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 872)) ((872 . 873)) (26352 64324 957685 111000) 0 nil])
([nil nil ((879 . 882)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 879)) (26349 2582 842255 374000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 947)) ((947 . 948)) (26352 64324 927827 676000) 0 nil])
([nil nil ((957 . 960)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 957)) (26349 2582 490032 229000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -991) (#("\\" 0 1 (fontified t)) . -992) (#("\\" 0 1 (face font-lock-warning-face fontified t)) . -993) 994 (991 . 994)) ((#(" \\\\" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (face font-lock-warning-face fontified nil)) . 991) (991 . 994)) (26352 64324 898070 17000) 0 nil])
([nil nil ((1006 . 1009)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 1006)) (26349 2582 154548 119000) 0 nil])
([nil nil ((946 . 949)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 946)) (26352 64324 867139 21000) 0 nil])
([nil nil ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 1006) (undo-tree-id585 . -2) (undo-tree-id587 . -2) (undo-tree-id589 . -2) (undo-tree-id591 . -2) (undo-tree-id593 . -2) (undo-tree-id595 . -2) (undo-tree-id597 . -2) (undo-tree-id599 . -2) (undo-tree-id601 . -2) (undo-tree-id603 . -2) (undo-tree-id605 . -2) (undo-tree-id607 . -2) (undo-tree-id609 . -2) (undo-tree-id611 . -2) (undo-tree-id613 . -2) (undo-tree-id615 . -2) (undo-tree-id617 . -2) (undo-tree-id619 . -2) (undo-tree-id621 . -2) (undo-tree-id623 . -1) (undo-tree-id625 . -1) (undo-tree-id627 . -1) (undo-tree-id629 . -1) (undo-tree-id631 . -1) (undo-tree-id633 . -3) (t 26349 2368 465629 910000)) ((1006 . 1009)) (26349 2581 850321 320000) 0 nil])
([nil nil ((871 . 874)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 871)) (26352 64324 837147 398000) 0 nil] [nil nil ((860 . 863)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 860) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2)) (26349 5933 684464 139000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 599) (undo-tree-id643 . -14) (undo-tree-id644 . -13) (undo-tree-id645 . -13) 612 (t 26349 2370 65581 0)) ((599 . 614)) (26349 2581 673932 674000) 0 nil])
([nil nil ((787 . 790)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 787)) (26352 64324 808972 110000) 0 nil])
nil
([nil nil ((#("\\end{center}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 11 (face font-lock-function-name-face fontified t latex-env-pair t) 11 12 (fontified t latex-env-pair t) 12 13 (fontified t)) . 992) (undo-tree-id641 . -12) (undo-tree-id642 . -11) 1003) ((992 . 1005)) (26349 2581 450324 777000) 0 nil])
([nil nil ((704 . 707)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 704)) (26352 64324 802380 269000) 0 nil])
([nil nil ((#("{\\small " 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 599) (undo-tree-id640 . -7)) ((599 . 607)) (26349 2581 114253 241000) 0 nil])
([nil nil ((#("\\end{center}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 11 (face font-lock-function-name-face latex-env-pair t fontified t) 11 12 (latex-env-pair t fontified t) 12 13 (fontified t)) . 4604) (undo-tree-id41 . -11) 4615 (t 26349 5936 14376 536000)) ((4604 . 4617)) (26352 64324 746523 753000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 982)) ((982 . 983)) (26349 2580 954704 319000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t)) . 3853)) ((3853 . 3868)) (26352 64324 717450 506000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -609) (undo-tree-id638 . -1) (606 . 610) (603 . 606) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -603) (undo-tree-id639 . -1) (599 . 604) (598 . 599) 598) ((#("
" 0 1 (fontified t)) . 598) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (#("\\begi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 599) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -5) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (603 . 604) (#("in{" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (latex-env-pair t fontified nil)) . 603) (undo-tree-id842 . -3) (undo-tree-id843 . -3) (undo-tree-id844 . -3) (undo-tree-id845 . -3) (undo-tree-id846 . -3) (undo-tree-id847 . -3) (undo-tree-id848 . -3) (undo-tree-id849 . -3) (undo-tree-id850 . -3) (undo-tree-id851 . -3) (undo-tree-id852 . -3) (undo-tree-id853 . -3) (undo-tree-id854 . -3) (#("affi" 0 3 (face font-lock-function-name-face latex-env-pair t fontified nil) 3 4 (face font-lock-function-name-face fontified nil)) . 606) (undo-tree-id855 . -2) (undo-tree-id856 . -2) (undo-tree-id857 . -2) (undo-tree-id858 . -2) (undo-tree-id859 . -2) (undo-tree-id860 . -2) (undo-tree-id861 . -2) (undo-tree-id862 . -2) (undo-tree-id863 . -2) (undo-tree-id864 . -2) (undo-tree-id865 . -2) (undo-tree-id866 . -2) (undo-tree-id867 . -2) (609 . 610)) (26349 2580 762555 239000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64324 686611 446000) 0 nil])
([nil nil ((614 . 619) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -614) (undo-tree-id635 . -1) (611 . 615) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -611) (undo-tree-id636 . -1) (609 . 612) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -609) (undo-tree-id637 . -1) (609 . 610) 608) ((#("i" 0 1 (face font-lock-function-name-face fontified nil)) . 609) (609 . 610) (#("ili" 0 2 (face font-lock-function-name-face latex-env-pair t fontified nil) 2 3 (face font-lock-function-name-face fontified nil)) . 609) (611 . 612) (#("iati" 0 3 (face font-lock-function-name-face latex-env-pair t fontified nil) 3 4 (face font-lock-function-name-face fontified nil)) . 611) (614 . 615) (#("ions}" 0 4 (face font-lock-function-name-face latex-env-pair t fontified t) 4 5 (latex-env-pair t fontified t)) . 614)) (26349 2580 539030 168000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 3923)) ((3923 . 3924)) (26352 64324 657318 49000) 0 nil])
([nil nil ((1016 . 1021) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -1016) (undo-tree-id651 . -1) (undo-tree-id653 . -1) (undo-tree-id655 . -1) (1012 . 1017) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -1012) (undo-tree-id657 . -1) (undo-tree-id659 . -1) (undo-tree-id661 . -1) (1004 . 1013) (1003 . 1004) 979) ((#("
" 0 1 (fontified t)) . 1003) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (#("\\end{affi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (latex-env-pair t fontified nil) 5 8 (face font-lock-function-name-face latex-env-pair t fontified nil) 8 9 (face font-lock-function-name-face fontified nil)) . 1004) (undo-tree-id722 . -8) (undo-tree-id723 . -8) (undo-tree-id724 . -8) (undo-tree-id725 . -8) (undo-tree-id726 . -8) (undo-tree-id727 . -8) (undo-tree-id728 . -8) (undo-tree-id729 . -8) (undo-tree-id730 . -8) (undo-tree-id731 . -8) (undo-tree-id732 . -8) (undo-tree-id733 . -8) (undo-tree-id734 . -8) (undo-tree-id735 . -8) (undo-tree-id736 . -8) (undo-tree-id737 . -8) (undo-tree-id738 . -8) (undo-tree-id739 . -8) (undo-tree-id740 . -8) (undo-tree-id741 . -8) (undo-tree-id742 . -8) (undo-tree-id743 . -8) (undo-tree-id744 . -8) (undo-tree-id745 . -8) (undo-tree-id746 . -8) (undo-tree-id747 . -8) (undo-tree-id748 . -8) (undo-tree-id749 . -8) (undo-tree-id750 . -8) (undo-tree-id751 . -8) (undo-tree-id752 . -8) (undo-tree-id753 . -8) (undo-tree-id754 . -8) (undo-tree-id755 . -8) (undo-tree-id756 . -8) (undo-tree-id757 . -8) (undo-tree-id758 . -8) (undo-tree-id759 . -8) (undo-tree-id760 . -8) (undo-tree-id761 . -8) (undo-tree-id762 . -8) (undo-tree-id763 . -9) (undo-tree-id764 . -8) (undo-tree-id765 . -8) (undo-tree-id766 . -8) (undo-tree-id767 . -8) (1012 . 1013) (#("ilati" 0 2 (face font-lock-function-name-face latex-env-pair t fontified nil) 2 4 (face font-lock-function-name-face latex-env-pair t fontified nil) 4 5 (face font-lock-function-name-face fontified nil)) . 1012) (undo-tree-id768 . 3) (undo-tree-id769 . -2) (undo-tree-id770 . -2) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (undo-tree-id774 . -2) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id777 . -2) (undo-tree-id778 . -2) (undo-tree-id779 . -2) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (undo-tree-id814 . -2) (1016 . 1017) (#("ions}" 0 4 (face font-lock-function-name-face latex-env-pair t fontified t) 4 5 (latex-env-pair t fontified t)) . 1016)) (26349 2580 218388 244000) 0 nil] [nil nil ((979 . 989)) ((#("iliations}" 0 10 (fontified t)) . 979) (undo-tree-id646 . -9) (undo-tree-id647 . -9) (undo-tree-id648 . -9) (undo-tree-id649 . -9)) (26349 2419 903675 29000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64324 627122 572000) 0 nil])
([nil nil ((1014 . 1015) (t 26349 2424 107306 741000) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified nil)) . -1014) (undo-tree-id663 . -1) (undo-tree-id665 . -1) (undo-tree-id667 . -1) (undo-tree-id669 . -1) (undo-tree-id671 . -1) (undo-tree-id673 . -1) (1014 . 1015) (t 26349 2424 107306 741000)) ((#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified nil)) . 1014) (undo-tree-id674 . -1) (1014 . 1015) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . 1014) (t 26349 2440 230161 653000)) (26349 2440 190081 792000) 0 nil])
nil
([nil nil ((#("m" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64324 427703 923000) 0 nil])
nil
([nil nil ((#("a" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64324 180457 424000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64324 150463 104000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 3923)) ((3923 . 3924)) (26352 64324 121380 530000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64324 90673 917000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64324 60928 662000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64324 31480 632000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64324 537 842000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64323 970815 948000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64323 940149 759000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64323 739258 331000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64323 194129 630000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3923)) ((3923 . 3924)) (26352 64323 163460 637000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 4029)) ((4029 . 4030)) (26352 64323 133396 977000) 0 nil])
([nil nil ((4087 . 4088) (#("
" 0 1 (face (bold) fontified t)) . -4087) (#("
" 0 1 (fontified t)) . -4030)) ((4030 . 4031) (4087 . 4088) (#(" " 0 1 (face (bold) fontified t)) . 4087)) (26352 64323 103689 81000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64323 73860 1000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 4030)) ((4030 . 4031)) (26352 64323 44110 478000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64323 13433 42000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64322 983661 673000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64322 954102 934000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64322 925361 425000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64322 918638 41000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64322 864452 625000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 4030)) ((4030 . 4031)) (26352 64322 834205 30000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64322 804038 374000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64322 603585 29000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64322 331562 798000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64322 219240 252000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64322 91760 233000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64321 963743 135000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64321 819313 164000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64321 707850 912000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4030)) ((4030 . 4031)) (26352 64321 579315 907000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 4167)) ((4167 . 4168)) (26352 64321 451274 155000) 0 nil])
([nil nil ((4136 . 4137) (#("
" 0 1 (fontified t)) . -4136) (4029 . 4030) (#("
" 0 1 (fontified t)) . -4029) 4012) ((4029 . 4030) (#(" " 0 1 (fontified nil)) . 4029) (4136 . 4137) (#(" " 0 1 (fontified t)) . 4136)) (26352 64321 340966 712000) 0 nil])
([nil nil ((3982 . 3983) (#("
" 0 1 (fontified t)) . -3982) 3926) ((3982 . 3983) (#(" " 0 1 (fontified t)) . 3982)) (26352 64321 195730 496000) 0 nil])
([nil nil ((3931 . 3938) (3927 . 3931) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -3927) (3923 . 3928) (3922 . 3923) 3922) ((#("
" 0 1 (fontified t)) . 3922) (#("\\begi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 3923) (3927 . 3928) (#("in{a" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (fontified nil latex-env-pair t) 3 4 (face font-lock-function-name-face fontified nil latex-env-pair t)) . 3927) (#("uthors}" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t) 6 7 (fontified t latex-env-pair t)) . 3931)) (26352 64321 51212 337000) 0 nil])
([nil nil ((4191 . 4197) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -4191) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -4192) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -4193) 4194 (4185 . 4194) (#("b" 0 1 (face font-lock-keyword-face fontified t)) . -4185) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -4186) (#("g" 0 1 (face font-lock-keyword-face fontified t)) . -4187) (#("i" 0 1 (face font-lock-keyword-face fontified t)) . -4188) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -4189) (#("{" 0 1 (fontified t)) . -4190) 4191 (4188 . 4191) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4188) (4184 . 4189) (4183 . 4184) 4103) ((#("
" 0 1 (fontified t)) . 4183) (#("\\begi" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 4184) (4188 . 4189) (#("in{" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (fontified nil)) . 4188) (4185 . 4191) (#("end{aundo" 0 3 (face font-lock-keyword-face fontified nil) 3 4 (fontified nil latex-env-pair t) 4 6 (face font-lock-function-name-face fontified nil latex-env-pair t) 6 7 (face font-lock-function-name-face fontified nil) 7 8 (face font-lock-function-name-face fontified nil) 8 9 (face font-lock-function-name-face fontified nil)) . 4185) (4191 . 4194) (#("thors}" 0 5 (face font-lock-function-name-face fontified t latex-env-pair t) 5 6 (fontified t latex-env-pair t)) . 4191)) (26352 64320 907834 310000) 0 nil])
([nil nil ((4214 . 4219) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4214) (4211 . 4215) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4211) (4209 . 4212) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4209) (4206 . 4210) (#("{" 0 1 (fontified t)) . -4206) 4207 (4203 . 4207) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -4203) (4199 . 4204) (4198 . 4199) 4198) (("
" . 4198) (undo-tree-id224 . -1) (#("\\begi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 4199) (4203 . 4204) (#("in{{" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (fontified nil latex-env-pair t) 3 4 (fontified nil)) . 4203) (4206 . 4207) (#("affi" 0 3 (face font-lock-function-name-face fontified nil latex-env-pair t) 3 4 (face font-lock-function-name-face fontified nil)) . 4206) (4209 . 4210) (#("ili" 0 2 (face font-lock-function-name-face fontified nil latex-env-pair t) 2 3 (face font-lock-function-name-face fontified nil)) . 4209) (4211 . 4212) (#("iati" 0 3 (face font-lock-function-name-face fontified nil latex-env-pair t) 3 4 (face font-lock-function-name-face fontified nil)) . 4211) (4214 . 4215) (#("ions}" 0 4 (face font-lock-function-name-face fontified t latex-env-pair t) 4 5 (fontified t latex-env-pair t)) . 4214)) (26352 64320 763951 530000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4610) (4602 . 4611) (4601 . 4602) (#("}" 0 1 (fontified t)) . -4601) (#("
" 0 1 (fontified t)) . -4602) (#(" " 0 1 (fontified t)) . -4603) (#(" " 0 1 (fontified t)) . -4604) 4605 (4602 . 4605) (#("
" 0 1 (fontified t)) . -4602) (#(" " 0 1 (fontified t)) . -4603) (#(" " 0 1 (fontified t)) . -4604) 4605 (4602 . 4605) 4596) ((#("
  " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 4602) (4602 . 4605) (#("
  " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 4602) (4601 . 4605) (#("
" 0 1 (fontified t)) . 4601) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("\\end{affi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (fontified nil latex-env-pair t) 5 7 (face font-lock-function-name-face fontified nil latex-env-pair t) 7 8 (face font-lock-function-name-face fontified nil) 8 9 (face font-lock-function-name-face fontified nil)) . 4602) (undo-tree-id214 . -7) (undo-tree-id215 . -8) (undo-tree-id216 . -7) (undo-tree-id217 . -7) (undo-tree-id218 . -7) (undo-tree-id219 . -7) (undo-tree-id220 . -7) (undo-tree-id221 . -7) (undo-tree-id222 . -7) (undo-tree-id223 . -7) (4610 . 4611)) (26352 64320 636082 67000) 0 nil])
([nil nil ((4615 . 4620) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4615) (4612 . 4616) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4612) (4610 . 4613) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -4610) (4609 . 4611) (#("f" 0 1 (face font-lock-function-name-face fontified t)) . -4609) 4610) ((4609 . 4610) (#("fi" 0 1 (fontified nil face font-lock-function-name-face latex-env-pair t) 1 2 (face font-lock-function-name-face fontified nil)) . 4609) (4610 . 4611) (#("ili" 0 2 (fontified nil face font-lock-function-name-face latex-env-pair t) 2 3 (face font-lock-function-name-face fontified nil)) . 4610) (4612 . 4613) (#("iati" 0 3 (fontified nil face font-lock-function-name-face latex-env-pair t) 3 4 (face font-lock-function-name-face fontified nil)) . 4612) (4615 . 4616) (#("ions}" 0 4 (face font-lock-function-name-face latex-env-pair t) 4 5 (latex-env-pair t)) . 4615)) (26352 64320 475516 550000) 0 nil])
([nil nil ((#("\\end{center}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 11 (face font-lock-function-name-face latex-env-pair t fontified t) 11 12 (latex-env-pair t fontified t) 12 13 (fontified t)) . 8112) (undo-tree-id66 . -11) 8123 (t 26349 6023 791703 852000)) ((8112 . 8125)) (26352 64320 331241 134000) 0 nil] [nil nil ((nil rear-nonsticky nil 4789 . 4790) (nil fontified nil 4762 . 4790) (4762 . 4790) 4619 (t 26349 6023 791703 852000)) ((#("\\setlength{\\parskip}{-0.5cm}" 0 10 (face font-lock-keyword-face fontified nil) 10 11 (fontified nil) 11 19 (face font-lock-variable-name-face fontified nil) 19 27 (fontified nil) 27 28 (rear-nonsticky nil fontified nil)) . 4762) (undo-tree-id42 . -27) (undo-tree-id43 . -27) (undo-tree-id44 . -27) (undo-tree-id45 . -27) (nil rear-nonsticky t 4789 . 4790)) (26349 6044 533102 624000) 0 nil])
([nil nil ((#("\\begin{center}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 13 (face font-lock-function-name-face latex-env-pair t fontified t) 13 14 (latex-env-pair t fontified t) 14 15 (fontified t)) . 7380)) ((7380 . 7395)) (26352 64320 171295 839000) 0 nil])
nil
([nil nil ((#("{\\smal\\bfseries " 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 15 (face font-lock-keyword-face fontified t) 15 16 (face (bold) fontified t)) . 7449)) ((7449 . 7465)) (26352 64319 899268 57000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 7557)) ((7557 . 7558)) (26352 64319 772026 377000) 0 nil])
([nil nil ((#("{\\small{\\bfseries " 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 17 (face font-lock-keyword-face fontified t) 17 18 (face (bold) fontified t)) . 7559)) ((7559 . 7577)) (26352 64319 435672 921000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 7697)) ((7697 . 7698)) (26352 64319 291349 552000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7558)) ((7558 . 7559)) (26352 64319 147501 300000) 0 nil])
([nil nil ((7665 . 7666) (#("
" 0 1 (fontified t)) . -7665) (7598 . 7599) (#("
" 0 1 (fontified t)) . -7598) (7557 . 7558) (#("
" 0 1 (fontified t)) . -7557) (7522 . 7523) (#("
" 0 1 (fontified t)) . -7522) (7483 . 7484) (#("
" 0 1 (fontified t)) . -7483) 7449) ((7483 . 7484) (#(" " 0 1 (fontified nil)) . 7483) (7522 . 7523) (#(" " 0 1 (fontified nil)) . 7522) (7557 . 7558) (#(" " 0 1 (fontified nil)) . 7557) (7598 . 7599) (#(" " 0 1 (fontified nil)) . 7598) (7665 . 7666) (#(" " 0 1 (fontified t)) . 7665)) (26352 64318 972555 837000) 0 nil])
([nil nil ((7456 . 7464) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -7456) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -7457) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -7458) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -7459) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -7460) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -7461) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -7462) 7463 (7460 . 7463) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -7460) (7453 . 7461) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -7453) (7449 . 7454) (7448 . 7449) 7448) ((#("
" 0 1 (fontified t)) . 7448) (#("\\begi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 7449) (7453 . 7454) (#("in{secti" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (fontified nil latex-env-pair t) 3 4 (face font-lock-function-name-face fontified nil) 4 5 (face font-lock-function-name-face fontified nil) 5 6 (face font-lock-function-name-face fontified nil) 6 7 (face font-lock-function-name-face fontified nil) 7 8 (face font-lock-function-name-face fontified nil)) . 7453) (7460 . 7461) (#("ion" 0 1 (face font-lock-function-name-face fontified nil) 1 2 (face font-lock-function-name-face fontified nil) 2 3 (face font-lock-function-name-face fontified nil)) . 7460) (7456 . 7463) (#("authors}" 0 7 (face font-lock-function-name-face fontified t latex-env-pair t) 7 8 (fontified t latex-env-pair t)) . 7456)) (26352 64318 267615 8000) 0 nil])
([nil nil ((7713 . 7726) (7712 . 7713) 7629) ((#("
" 0 1 (fontified t)) . 7712) (#("\\end{authors}" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 12 (face font-lock-function-name-face fontified t latex-env-pair t) 12 13 (fontified t latex-env-pair t)) . 7713)) (26352 64317 924062 776000) 0 nil])
([nil nil ((7743 . 7748) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -7743) (7741 . 7744) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -7741) (7738 . 7742) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -7738) (7735 . 7739) (7732 . 7735) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -7732) (7728 . 7733) (7727 . 7728) 7727) ((#("
" 0 1 (fontified t)) . 7727) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("\\begi" 0 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 7728) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (7732 . 7733) (#("in{" 0 2 (face font-lock-keyword-face fontified nil) 2 3 (fontified nil latex-env-pair t)) . 7732) (undo-tree-id157 . -3) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -3) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (#("affi" 0 3 (face font-lock-function-name-face fontified nil latex-env-pair t) 3 4 (face font-lock-function-name-face fontified nil)) . 7735) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (7738 . 7739) (#("ilai" 0 2 (face font-lock-function-name-face fontified nil latex-env-pair t) 2 3 (face font-lock-function-name-face latex-env-pair t fontified nil) 3 4 (face font-lock-function-name-face fontified nil)) . 7738) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (7741 . 7742) (#("iti" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t) 1 2 (face font-lock-function-name-face fontified nil latex-env-pair t) 2 3 (face font-lock-function-name-face fontified nil)) . 7741) (7743 . 7744) (#("ions}" 0 4 (face font-lock-function-name-face fontified t latex-env-pair t) 4 5 (fontified t latex-env-pair t)) . 7743)) (26352 64317 894091 962000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . 7740)) ((7740 . 7741)) (26352 64317 864121 796000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7741 . 7742) (nil fontified nil 7741 . 7742) (7741 . 7742) 7740) ((#("a" 0 1 (rear-nonsticky nil face font-lock-function-name-face fontified nil latex-env-pair t)) . 7741) (nil rear-nonsticky nil 7741 . 7742)) (26352 64317 833621 624000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8110 . 8111) (#("
" 0 1 (fontified nil)) . -8131) (8110 . 8132) 8098) ((#("
\\begin{affiliations}
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil latex-env-pair t) 8 20 (face font-lock-function-name-face fontified nil latex-env-pair t) 20 21 (fontified nil latex-env-pair t) 21 22 (fontified nil)) . 8110) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (8131 . 8132) (nil rear-nonsticky nil 8110 . 8111)) (26352 64317 803829 697000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 8109)) ((8109 . 8110)) (26352 64317 774166 921000) 0 nil])
([nil nil ((8111 . 8114) (#("begin" 0 5 (face font-lock-keyword-face fontified t)) . 8111) (undo-tree-id47 . -5)) ((8111 . 8116) (#("end" 0 3 (face font-lock-keyword-face)) . 8111)) (26352 64317 744202 797000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4336) (t 26349 6089 113048 231000)) ((4336 . 4337)) (26352 64317 713766 545000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4414)) ((4414 . 4415)) (26352 64317 683719 202000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4500)) ((4500 . 4501)) (26352 64317 483327 715000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4573) (undo-tree-id68 . -1) (undo-tree-id70 . -1) (undo-tree-id72 . -1) (undo-tree-id74 . -1) (undo-tree-id76 . -1) (undo-tree-id78 . -1) (undo-tree-id80 . -1) (undo-tree-id82 . -1) (undo-tree-id84 . -1) (undo-tree-id86 . -1)) ((4573 . 4574)) (26352 64317 355450 687000) 0 nil])
([nil nil ((4335 . 4338)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 4335)) (26352 64317 242079 791000) 0 nil])
([nil nil ((4416 . 4419)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 4416)) (26352 64317 51865 463000) 0 nil])
([nil nil ((4505 . 4508)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 4505)) (26352 64316 843273 671000) 0 nil])
([nil nil ((4581 . 4584)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 4581)) (26352 64316 651485 969000) 0 nil] [nil nil ((4606 . 4609)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 4606)) (26349 6118 610841 429000) 0 nil])
([nil nil ((4288 . 4289) (#("
" 0 1 (fontified t)) . -4288) 4287) ((4288 . 4289) (#(" " 0 1 (fontified t)) . 4288)) (26352 64316 524199 780000) 0 nil])
nil
([nil nil ((4405 . 4406) (#("
" 0 1 (fontified t)) . -4405) 4404) ((4405 . 4406) (#(" " 0 1 (fontified t)) . 4405)) (26352 64316 380097 302000) 0 nil])
([nil nil ((4484 . 4485) (#("
" 0 1 (fontified t)) . -4484) 4483) ((4484 . 4485) (" " . 4484)) (26352 64316 219995 687000) 0 nil])
([nil nil ((682 . 683) (#("
" 0 1 (fontified t)) . -682) 681) ((682 . 683) (#(" " 0 1 (fontified t)) . 682)) (26352 64316 60118 619000) 0 nil])
([nil nil ((779 . 780) (#("
" 0 1 (fontified t)) . -779) 770) ((779 . 780) (#(" " 0 1 (fontified t)) . 779)) (26352 64315 403690 841000) 0 nil])
([nil nil ((866 . 867) (#("
" 0 1 (fontified t)) . -866) 865) ((866 . 867) (#(" " 0 1 (fontified t)) . 866)) (26352 64315 275360 296000) 0 nil])
([nil nil ((945 . 946) (#("
" 0 1 (fontified t)) . -945) 944) ((945 . 946) (" " . 945)) (26352 64315 147970 32000) 0 nil])
([nil nil ((7826 . 7827) (#("
" 0 1 (fontified t)) . -7826) 7774 (t 26349 6137 791566 26000)) ((7826 . 7827) (#(" " 0 1 (fontified t)) . 7826)) (26352 64315 20018 637000) 0 nil])
([nil nil ((7914 . 7915) (#("
" 0 1 (fontified t)) . -7914) 7913) ((7914 . 7915) (#(" " 0 1 (fontified t)) . 7914)) (26352 64314 891992 190000) 0 nil])
([nil nil ((8004 . 8005) (#("
" 0 1 (fontified t)) . -8004) 8001) ((8004 . 8005) (#(" " 0 1 (fontified t)) . 8004)) (26352 64314 764026 375000) 0 nil])
([nil nil ((8080 . 8081) (#("
" 0 1 (fontified t)) . -8080) 8079) ((8080 . 8081) (#(" " 0 1 (fontified t)) . 8080)) (26352 64314 636050 156000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8092)) ((8092 . 8093)) (26352 64314 507530 447000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8017)) ((8017 . 8018)) (26352 64314 379976 485000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7937)) ((7937 . 7938)) (26352 64314 252012 191000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -7850) (undo-tree-id96 . -1) (undo-tree-id98 . -1) (undo-tree-id100 . -1) (undo-tree-id102 . -1) (undo-tree-id104 . -1) (undo-tree-id106 . -1)) ((7850 . 7851)) (26352 64314 123331 387000) 0 nil])
([nil nil ((7849 . 7852)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 7849)) (26352 64313 979888 760000) 0 nil])
([nil nil ((7938 . 7941)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 7938)) (26352 64313 867653 258000) 0 nil])
([nil nil ((8020 . 8023)) ((#(" \\\\" 0 1 (fontified t) 1 3 (face font-lock-warning-face fontified t)) . 8020)) (26352 64313 740188 926000) 0 nil])
([nil nil ((8097 . 8100)) ((#(" \\\\" 1 3 (face font-lock-warning-face)) . 8097)) (26352 64313 612156 725000) 0 nil])
([nil nil ((#("
В спектре ЯМР \\textsuperscript{1}Н ацетиленового соединения {\\bfseries 3}
метильные протоны Н-11,11,11 проявились трехпротонным мультиплетом при
1.17-1.21 м.д. Метильные протоны Н-9,9,9,14,14,14,15,15,15
регистрировались трехпротонным синглетом при 1.38 м.д. Метиленовые
протоны Н-10,10 проявились двухпротонным мультиплетом при 2.51-2.54 м.д.
Ацетиленовый протон Н-19 регистрировался однопротонным синглетом при
2.58 м.д. Метиленовые протоны Н-17,17 проявились двухпротонным
мультиплетом при 4.91-4.92 м.д. Ароматические протоны Н-3 и Н-5
регистрировались однопротонными синглетами при 7.29 и 7.56 м.д.
соответственно. Гидроксильный протон Н-7 резонировал однопротонным
синглетом при 11.09 м.д.
" 0 15 (fontified t) 15 31 (face font-lock-keyword-face fontified t) 31 62 (fontified t) 62 71 (face font-lock-keyword-face fontified t) 71 73 (face (bold) fontified t) 73 697 (fontified t)) . 26309) (undo-tree-id237 . -672) (undo-tree-id239 . -672) 26981 (t 26349 6332 482905 953000)) ((26309 . 27006)) (26352 64313 467911 365000) 0 nil] [nil nil ((#("
В целях расширения арсенала БАВ и изучение реакционной способности азида
никотиновой кислоты {\\bfseries (2)} с аминами, проведено его взаимодействие
с молекулой алкалоида цитизина. Показано, что при нагревании в среде
сухого бензола азид никотиновой кислоты {\\bfseries (2)} претерпевает
перегруппировку Курциуса с образованием изоцианата, который реагирует,
\\emph{in situ}, с молекулой цитизина при кипячении в течение 1-2 часов с
образованием мочевины {\\bfseries 8}. Для выделения мочевины {\\bfseries 8}
растворитель отгоняют в вакууме, остаток хроматографировают на колонке с
силикагелем (элюент: хлороформ, смесь хлороформа с этанолом, 100:1 →
10:1).
" 0 1 (fontified t) 1 9 (fontified t) 9 95 (fontified t) 95 104 (face font-lock-keyword-face fontified t) 104 108 (face (bold) fontified t) 108 260 (fontified t) 260 269 (face font-lock-keyword-face fontified t) 269 273 (face (bold) fontified t) 273 359 (fontified t) 359 364 (face font-lock-keyword-face fontified t) 364 365 (fontified t) 365 372 (face (italic) fontified t) 372 455 (fontified t) 455 464 (face font-lock-keyword-face fontified t) 464 466 (face (bold) fontified t) 466 493 (fontified t) 493 502 (face font-lock-keyword-face fontified t) 502 504 (face (bold) fontified t) 504 655 (fontified t)) . 34407) (undo-tree-id113 . -654) (undo-tree-id114 . -648) (undo-tree-id115 . -648) (undo-tree-id116 . -648) 35055 (t 26349 6154 124402 45000)) ((34407 . 35062)) (26349 6330 363688 977000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -26440) (undo-tree-id218 . -2) (undo-tree-id220 . -2) (undo-tree-id222 . -2) (undo-tree-id224 . -2) (undo-tree-id226 . -2) (undo-tree-id228 . -2) (undo-tree-id230 . -2) (undo-tree-id232 . -2) (undo-tree-id234 . -2) 26442 (26439 . 26442) 26419) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 26439) (26440 . 26442)) (26352 64313 342904 611000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34551 . 34552) (#("
" 0 1 (fontified nil)) . -35206) (34551 . 35207) 34531) ((#("

В целях расширения арсенала БАВ и изучение реакционной способности азида
никотиновой кислоты {\\bfseries (2)} с аминами, проведено его взаимодействие
с молекулой алкалоида цитизина. Показано, что при нагревании в среде
сухого бензола азид никотиновой кислоты {\\bfseries (2)} претерпевает
перегруппировку Курциуса с образованием изоцианата, который реагирует,
\\emph{in situ}, с молекулой цитизина при кипячении в течение 1-2 часов с
образованием мочевины {\\bfseries 8}. Для выделения мочевины {\\bfseries 8}
растворитель отгоняют в вакууме, остаток хроматографировают на колонке с
силикагелем (элюент: хлороформ, смесь хлороформа с этанолом, 100:1 →
10:1).
" 0 1 (fontified nil rear-nonsticky nil) 1 2 (fontified nil) 2 10 (fontified t) 10 74 (fontified t) 74 75 (fontified t) 75 96 (fontified t) 96 105 (face font-lock-keyword-face fontified t) 105 109 (face (bold) fontified t) 109 261 (fontified t) 261 270 (face font-lock-keyword-face fontified t) 270 274 (face (bold) fontified t) 274 360 (fontified t) 360 365 (face font-lock-keyword-face fontified t) 365 366 (fontified t) 366 373 (face (italic) fontified t) 373 456 (fontified t) 456 465 (face font-lock-keyword-face fontified t) 465 467 (face (bold) fontified t) 467 494 (fontified t) 494 503 (face font-lock-keyword-face fontified t) 503 505 (face (bold) fontified t) 505 649 (fontified t) 649 655 (fontified nil) 655 656 (fontified nil)) . 34551) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -649) (undo-tree-id142 . -655) (undo-tree-id143 . -655) (undo-tree-id144 . -655) (undo-tree-id145 . -655) (undo-tree-id146 . -655) (undo-tree-id147 . -655) (undo-tree-id148 . -655) (undo-tree-id149 . -655) (undo-tree-id150 . -655) (undo-tree-id151 . -655) (undo-tree-id152 . -655) (undo-tree-id153 . -655) (undo-tree-id154 . -655) (undo-tree-id155 . -655) (undo-tree-id156 . -655) (undo-tree-id157 . -655) (undo-tree-id158 . -655) (undo-tree-id159 . -655) (undo-tree-id160 . -655) (undo-tree-id161 . -655) (undo-tree-id162 . -655) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -655) (undo-tree-id190 . -1) (undo-tree-id191 . -649) (undo-tree-id192 . -649) (undo-tree-id193 . -649) (undo-tree-id194 . -649) (undo-tree-id195 . -649) (undo-tree-id196 . -649) (undo-tree-id197 . -649) (undo-tree-id198 . -649) (undo-tree-id199 . -649) (undo-tree-id200 . -649) (undo-tree-id201 . -649) (undo-tree-id202 . -649) (undo-tree-id203 . -649) (undo-tree-id204 . -649) (undo-tree-id205 . -649) (undo-tree-id206 . -649) (undo-tree-id207 . -649) (undo-tree-id208 . -649) (undo-tree-id209 . -649) (undo-tree-id210 . -1) (undo-tree-id211 . -649) (undo-tree-id212 . -649) (undo-tree-id213 . -649) (undo-tree-id214 . -1) (undo-tree-id215 . -649) (35206 . 35207) (nil rear-nonsticky t 34551 . 34552)) (26349 6329 835500 165000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26439 . 26440) (#("
" 0 1 (fontified nil)) . -27136) (26439 . 27137) 26419) ((#("

В спектре ЯМР \\textsuperscript{1}Н ацетиленового соединения {\\bfseries 3}
метильные протоны Н-11,11,11 проявились трехпротонным мультиплетом при
1.17-1.21 м.д. Метильные протоны Н-9,9,9,14,14,14,15,15,15
регистрировались трехпротонным синглетом при 1.38 м.д. Метиленовые
протоны Н-10,10 проявились двухпротонным мультиплетом при 2.51-2.54 м.д.
Ацетиленовый протон Н-19 регистрировался однопротонным синглетом при
2.58 м.д. Метиленовые протоны Н-17,17 проявились двухпротонным
мультиплетом при 4.91-4.92 м.д. Ароматические протоны Н-3 и Н-5
регистрировались однопротонными синглетами при 7.29 и 7.56 м.д.
соответственно. Гидроксильный протон Н-7 резонировал однопротонным
синглетом при 11.09 м.д.
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 16 (fontified t) 16 32 (face font-lock-keyword-face fontified t) 32 63 (fontified t) 63 72 (face font-lock-keyword-face fontified t) 72 74 (face (bold) fontified t) 74 76 (fontified t) 76 673 (fontified t) 673 697 (fontified nil) 697 698 (fontified nil)) . 26439) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (27136 . 27137) (nil rear-nonsticky nil 26439 . 26440)) (26352 64313 196021 483000) 0 nil])
([nil nil ((35206 . 35207) 35200) ((#("
" 0 1 (fontified t)) . 35206) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1)) (26349 6329 99765 758000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 26440)) ((26440 . 26441)) (26352 64313 51544 236000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 34552)) ((34552 . 34553) (t 26349 6285 750673 980000)) (26349 6285 691202 921000) 0 nil])
([nil nil ((#("
В целях расширения арсенала БАВ и изучение реакционной способности азида
никотиновой кислоты {\\bfseries (2)} с аминами, проведено его взаимодействие
с молекулой алкалоида цитизина. Показано, что при нагревании в среде
сухого бензола азид никотиновой кислоты {\\bfseries (2)} претерпевает
перегруппировку Курциуса с образованием изоцианата, который реагирует,
\\emph{in situ}, с молекулой цитизина при кипячении в течение 1-2 часов с
образованием мочевины {\\bfseries 8}. Для выделения мочевины {\\bfseries 8}
растворитель отгоняют в вакууме, остаток хроматографировают на колонке с
силикагелем (элюент: хлороформ, смесь хлороформа с этанолом, 100:1 →
10:1).
" 0 1 (fontified t) 1 9 (fontified t) 9 95 (fontified t) 95 104 (face font-lock-keyword-face fontified t) 104 108 (face (bold) fontified t) 108 260 (fontified t) 260 269 (face font-lock-keyword-face fontified t) 269 273 (face (bold) fontified t) 273 346 (fontified t) 346 359 (fontified t) 359 364 (face font-lock-keyword-face fontified t) 364 365 (fontified t) 365 372 (face (italic) fontified t) 372 455 (fontified t) 455 464 (face font-lock-keyword-face fontified t) 464 466 (face (bold) fontified t) 466 493 (fontified t) 493 502 (face font-lock-keyword-face fontified t) 502 504 (face (bold) fontified t) 504 655 (fontified t)) . 34407) (undo-tree-id246 . -648) (undo-tree-id248 . -648) (undo-tree-id250 . -1) (undo-tree-id252 . -1) (undo-tree-id254 . -1) (undo-tree-id256 . -1) (undo-tree-id258 . -74) (undo-tree-id260 . -74) (undo-tree-id262 . -74) (undo-tree-id264 . -150) (undo-tree-id266 . -150) (undo-tree-id268 . -219) (undo-tree-id270 . -219) (undo-tree-id272 . -219) (undo-tree-id274 . -288) (undo-tree-id276 . -288) (undo-tree-id278 . -359) (undo-tree-id280 . -359) (undo-tree-id282 . -359) (undo-tree-id284 . -432) (undo-tree-id286 . -432) (undo-tree-id288 . -506) (undo-tree-id290 . -506) (undo-tree-id292 . -506) (undo-tree-id294 . -579) (undo-tree-id296 . -579) (undo-tree-id298 . -648) (undo-tree-id300 . -648) (undo-tree-id302 . -648) (undo-tree-id304 . -648) (undo-tree-id306 . -648) (undo-tree-id308 . -648) (undo-tree-id310 . -648) (undo-tree-id312 . -648) (undo-tree-id314 . -648) (undo-tree-id316 . -648) (undo-tree-id318 . -648) (undo-tree-id320 . -648) (undo-tree-id322 . -648) (undo-tree-id324 . -648) (undo-tree-id326 . -648) (undo-tree-id328 . -648) (undo-tree-id330 . -648) 35055 (t 26349 6590 866242 546000)) ((34407 . 35062)) (26352 64312 876167 431000) 0 nil] [nil nil ((nil rear-nonsticky nil 27831 . 27832) (nil fontified nil 27135 . 27832) (27135 . 27832) 26405 (t 26349 6590 866242 546000)) ((#("
В спектре ЯМР \\textsuperscript{1}Н ацетиленового соединения {\\bfseries 3}
метильные протоны Н-11,11,11 проявились трехпротонным мультиплетом при
1.17-1.21 м.д. Метильные протоны Н-9,9,9,14,14,14,15,15,15
регистрировались трехпротонным синглетом при 1.38 м.д. Метиленовые
протоны Н-10,10 проявились двухпротонным мультиплетом при 2.51-2.54 м.д.
Ацетиленовый протон Н-19 регистрировался однопротонным синглетом при
2.58 м.д. Метиленовые протоны Н-17,17 проявились двухпротонным
мультиплетом при 4.91-4.92 м.д. Ароматические протоны Н-3 и Н-5
регистрировались однопротонными синглетами при 7.29 и 7.56 м.д.
соответственно. Гидроксильный протон Н-7 резонировал однопротонным
синглетом при 11.09 м.д.
" 0 15 (fontified nil) 15 31 (face font-lock-keyword-face fontified nil) 31 62 (fontified nil) 62 71 (face font-lock-keyword-face fontified nil) 71 73 (face (bold) fontified nil) 73 672 (fontified nil) 672 696 (fontified nil) 696 697 (fontified nil rear-nonsticky nil)) . 27135) (undo-tree-id240 . -697) (undo-tree-id241 . -697) (undo-tree-id242 . -697) (undo-tree-id243 . -697) (undo-tree-id244 . -697) (nil fontified t 27208 . 27807) (nil fontified t 27206 . 27208) (nil fontified t 27197 . 27206) (nil fontified t 27166 . 27197) (nil fontified t 27150 . 27166) (nil fontified t 27135 . 27150) (nil rear-nonsticky t 27831 . 27832)) (26349 6606 918930 530000) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified t)) . -34552) 34554 (34551 . 34554) (t 26349 6628 905197 125000) 34531) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 34551) (34552 . 34554)) (26352 64312 380096 529000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 34551 . 34552) (#("
" 0 1 (fontified nil)) . -35206) (34551 . 35207) 34531) ((#("

В целях расширения арсенала БАВ и изучение реакционной способности азида
никотиновой кислоты {\\bfseries (2)} с аминами, проведено его взаимодействие
с молекулой алкалоида цитизина. Показано, что при нагревании в среде
сухого бензола азид никотиновой кислоты {\\bfseries (2)} претерпевает
перегруппировку Курциуса с образованием изоцианата, который реагирует,
\\emph{in situ}, с молекулой цитизина при кипячении в течение 1-2 часов с
образованием мочевины {\\bfseries 8}. Для выделения мочевины {\\bfseries 8}
растворитель отгоняют в вакууме, остаток хроматографировают на колонке с
силикагелем (элюент: хлороформ, смесь хлороформа с этанолом, 100:1 →
10:1).
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 75 (fontified t) 75 96 (fontified t) 96 105 (face font-lock-keyword-face fontified t) 105 109 (face (bold) fontified t) 109 261 (fontified t) 261 270 (face font-lock-keyword-face fontified t) 270 274 (face (bold) fontified t) 274 360 (fontified t) 360 365 (face font-lock-keyword-face fontified t) 365 366 (fontified t) 366 373 (face (italic) fontified t) 373 456 (fontified t) 456 465 (face font-lock-keyword-face fontified t) 465 467 (face (bold) fontified t) 467 494 (fontified t) 494 503 (face font-lock-keyword-face fontified t) 503 505 (face (bold) fontified t) 505 649 (fontified t) 649 655 (fontified nil) 655 656 (fontified nil)) . 34551) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (35206 . 35207) (nil rear-nonsticky nil 34551 . 34552)) (26352 64311 645666 276000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 34552)) ((34552 . 34553)) (26352 64311 615642 599000) 0 nil])
([nil nil ((#("Таким образом, взаимодействием азида никотиновой кислоты со спиртами
(изопропиловый и бутиловый спирты) и вторичным амином (алкалоидом
цитизин) синтезированы и охарактеризованы новые уретаны и мочевина,
строение которых подтверждены данными ЯМР \\textsuperscript{1}Н- и
\\textsuperscript{13}С-спектроскопии, а также анализом двумерных спектров
COSY (\\textsuperscript{1}H-\\textsuperscript{1}H) и HMQC
(\\textsuperscript{1}H-\\textsuperscript{13}C).

" 0 245 (fontified t) 245 261 (face font-lock-keyword-face fontified t) 261 269 (fontified t) 269 285 (face font-lock-keyword-face fontified t) 285 348 (fontified t) 348 364 (face font-lock-keyword-face fontified t) 364 369 (fontified t) 369 385 (face font-lock-keyword-face fontified t) 385 399 (fontified t) 399 415 (face font-lock-keyword-face fontified t) 415 420 (fontified t) 420 436 (face font-lock-keyword-face fontified t) 436 445 (fontified t)) . 39436) (undo-tree-id337 . -444) (undo-tree-id339 . -444) 39880 (t 26349 6640 971529 958000)) ((39436 . 39881)) (26352 64311 585532 645000) 0 nil])
([nil nil ((38763 . 38764) 38700) ((#("
" 0 1 (fontified t)) . 38763) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1)) (26352 64311 555782 610000) 0 nil])
([nil nil ((nil rear-nonsticky nil 38764 . 38765) (#("
" 0 1 (fontified nil)) . -39209) (38764 . 39210)) ((#("
Таким образом, взаимодействием азида никотиновой кислоты со спиртами
(изопропиловый и бутиловый спирты) и вторичным амином (алкалоидом
цитизин) синтезированы и охарактеризованы новые уретаны и мочевина,
строение которых подтверждены данными ЯМР \\textsuperscript{1}Н- и
\\textsuperscript{13}С-спектроскопии, а также анализом двумерных спектров
COSY (\\textsuperscript{1}H-\\textsuperscript{1}H) и HMQC
(\\textsuperscript{1}H-\\textsuperscript{13}C).

" 0 1 (rear-nonsticky nil fontified nil) 1 70 (fontified nil) 70 72 (fontified t) 72 136 (fontified t) 136 246 (fontified t) 246 262 (face font-lock-keyword-face fontified t) 262 270 (fontified t) 270 286 (face font-lock-keyword-face fontified t) 286 349 (fontified t) 349 365 (face font-lock-keyword-face fontified t) 365 370 (fontified t) 370 386 (face font-lock-keyword-face fontified t) 386 399 (fontified t) 399 400 (fontified t) 400 416 (face font-lock-keyword-face fontified t) 416 421 (fontified t) 421 437 (face font-lock-keyword-face fontified t) 437 445 (fontified t) 445 446 (fontified nil)) . 38764) (undo-tree-id29 . -445) (undo-tree-id30 . -445) (undo-tree-id31 . -445) (undo-tree-id32 . -445) (undo-tree-id33 . -445) (undo-tree-id34 . -445) (undo-tree-id35 . -445) (undo-tree-id36 . -445) (undo-tree-id37 . -445) (undo-tree-id38 . -445) (undo-tree-id39 . -445) (undo-tree-id40 . -445) (undo-tree-id41 . -445) (undo-tree-id42 . -445) (undo-tree-id43 . -445) (undo-tree-id44 . -445) (undo-tree-id45 . -445) (undo-tree-id46 . -445) (undo-tree-id47 . -445) (undo-tree-id48 . -445) (undo-tree-id49 . -445) (39209 . 39210) (nil rear-nonsticky nil 38764 . 38765)) (26352 64311 356510 139000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 39209) (undo-tree-id335 . -1)) ((39209 . 39210) (t 26349 6675 997222 89000)) (26352 64311 196211 546000) 0 nil])
([nil nil ((#("\\end{authors}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 12 (face font-lock-function-name-face latex-env-pair t fontified t) 12 13 (latex-env-pair t fontified t) 13 14 (fontified t)) . 584) (undo-tree-id12 . -14) (undo-tree-id13 . -14) (undo-tree-id14 . -14) (undo-tree-id15 . -14) (undo-tree-id16 . -14) (undo-tree-id17 . -14) (undo-tree-id18 . -14) (undo-tree-id19 . -14) (undo-tree-id20 . -14) (undo-tree-id21 . -14) (undo-tree-id22 . -14) (undo-tree-id23 . -14) (undo-tree-id24 . -14) (undo-tree-id25 . -14) (undo-tree-id26 . -14) (undo-tree-id27 . -14) (undo-tree-id28 . -13) (t 26349 6675 997222 89000)) ((584 . 598)) (26352 64311 51127 563000) 0 nil])
([nil nil ((#("\\begin{authors}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 16 (fontified t)) . 324) (undo-tree-id0 . -15) (undo-tree-id1 . -16) (undo-tree-id2 . -16) (undo-tree-id3 . -16) (undo-tree-id4 . -16) (undo-tree-id5 . -16) (undo-tree-id6 . -16) (undo-tree-id7 . -16) (undo-tree-id8 . -16) (undo-tree-id9 . -16) (undo-tree-id10 . -16) (undo-tree-id11 . -16)) ((324 . 340)) (26352 64311 51044 317000) 0 nil])
nil
